{"ast":null,"code":"var _jsxFileName = \"/var/www/epitools/src/leaflet/Leaflet.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport Leaflet from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SetView({\n  mapRef\n}) {\n  _s();\n\n  const map = useMapEvents('click', e => {\n    map.setView(e.latlng, map.getZoom(), {});\n  });\n  return null;\n}\n\n_s(SetView, \"D2AvXN8Rt/r3DPix6IJfcPGmgF0=\", true);\n\n_c = SetView;\n\nfunction LeafletView(props) {\n  _s2();\n\n  const mapRef = useRef();\n  delete Leaflet.Icon.Default.prototype._getIconUrl;\n  Leaflet.Icon.Default.mergeOptions({\n    iconRetinaUrl: iconRetina,\n    iconUrl: icon,\n    shadowUrl: iconShadow\n  });\n  useEffect(() => {\n    useMapEvents.setView(props.center);\n  }, [props.center]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      style: {\n        height: '400px'\n      },\n      center: props.center,\n      zoom: props.zoom,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(SetView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: props.center,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 34\n          }, this), \" Easily customizable.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(LeafletView, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n\n_c2 = LeafletView;\nexport default LeafletView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SetView\");\n$RefreshReg$(_c2, \"LeafletView\");","map":{"version":3,"sources":["/var/www/epitools/src/leaflet/Leaflet.js"],"names":["React","useEffect","useRef","Leaflet","MapContainer","TileLayer","Marker","Popup","icon","iconShadow","iconRetina","SetView","mapRef","map","useMapEvents","e","setView","latlng","getZoom","LeafletView","props","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","center","height","zoom"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,OAAO,0BAAP;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA6B;AAAA;;AAC3B,QAAMC,GAAG,GAAGC,YAAY,CAAC,OAAD,EAAWC,CAAD,IAAO;AACvCF,IAAAA,GAAG,CAACG,OAAJ,CAAYD,CAAC,CAACE,MAAd,EAAsBJ,GAAG,CAACK,OAAJ,EAAtB,EAAqC,EAArC;AAED,GAHuB,CAAxB;AAKA,SAAO,IAAP;AACD;;GAPQP,O;;KAAAA,O;;AAST,SAASQ,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAMR,MAAM,GAAGV,MAAM,EAArB;AAEA,SAAOC,OAAO,CAACkB,IAAR,CAAaC,OAAb,CAAqBC,SAArB,CAA+BC,WAAtC;AACArB,EAAAA,OAAO,CAACkB,IAAR,CAAaC,OAAb,CAAqBG,YAArB,CAAkC;AAChCC,IAAAA,aAAa,EAAEhB,UADiB;AAEhCiB,IAAAA,OAAO,EAAEnB,IAFuB;AAGhCoB,IAAAA,SAAS,EAAEnB;AAHqB,GAAlC;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,YAAY,CAACE,OAAb,CAAqBI,KAAK,CAACS,MAA3B;AACD,GAFQ,EAEN,CAACT,KAAK,CAACS,MAAP,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAArB;AAA0C,MAAA,MAAM,EAAEV,KAAK,CAACS,MAAxD;AAAgE,MAAA,IAAI,EAAET,KAAK,CAACW,IAA5E;AAAkF,MAAA,eAAe,EAAE,KAAnG;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,GAAG,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEX,KAAK,CAACS,MAAxB;AAAA,+BACE,QAAC,KAAD;AAAA,2DACuB;AAAA;AAAA;AAAA;AAAA,kBADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;IA3BQV,W;;MAAAA,W;AA6BT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Leaflet from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\n\nfunction SetView({ mapRef }) {\n  const map = useMapEvents('click', (e) => {\n    map.setView(e.latlng, map.getZoom(), {\n    })\n  })\n\n  return null\n}\n\nfunction LeafletView(props) {\n  const mapRef = useRef();\n\n  delete Leaflet.Icon.Default.prototype._getIconUrl;\n  Leaflet.Icon.Default.mergeOptions({\n    iconRetinaUrl: iconRetina,\n    iconUrl: icon,\n    shadowUrl: iconShadow\n  });\n\n  useEffect(() => {\n    useMapEvents.setView(props.center)\n  }, [props.center])\n\n  return (\n    <div>\n      <MapContainer style={{ height: '400px' }} center={props.center} zoom={props.zoom} scrollWheelZoom={false}>\n        <SetView />\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n        <Marker position={props.center}>\n          <Popup>\n            A pretty CSS3 popup. <br /> Easily customizable.\n          </Popup>\n        </Marker>\n      </MapContainer>\n    </div>\n  )\n}\n\nexport default LeafletView;\n"]},"metadata":{},"sourceType":"module"}