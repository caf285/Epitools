{"ast":null,"code":"import { Tree, Branch, utils } from 'phylocanvas';\nconst {\n  getPixelRatio\n} = utils.canvas;\nconst DEFAULTS = {\n  active: true\n};\nconsole.log(Tree);\n\nfunction drawStats() {}\n\nexport default function plugin(decorate) {\n  decorate(this, 'createTree', (delegate, args) => {\n    const tree = delegate(...args);\n    const [, config = {}] = args;\n    tree.treeStats = Object.assign({}, DEFAULTS, config.treeStats || {});\n    return tree;\n  });\n  decorate(Tree, 'load', function (delegate, args) {\n    delegate.apply(this, args);\n\n    if (this.treeStats.active) {\n      decorate(Branch, 'drawLabel', function (delegate, args) {\n        delegate.apply(leaf, args);\n        drawStats.apply(leaf);\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/var/www/pathogen-intelligence.tgen.org/epitools/my_modules/phylocanvas-plugin-tree-stats/index.js"],"names":["Tree","Branch","utils","getPixelRatio","canvas","DEFAULTS","active","console","log","drawStats","plugin","decorate","delegate","args","tree","config","treeStats","Object","assign","apply","leaf"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,aAApC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,KAAK,CAACE,MAAhC;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AADO,CAAjB;AAIAC,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AAEA,SAASS,SAAT,GAAqB,CACpB;;AAED,eAAe,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AACvCA,EAAAA,QAAQ,CAAC,IAAD,EAAO,YAAP,EAAqB,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC/C,UAAMC,IAAI,GAAGF,QAAQ,CAAC,GAAGC,IAAJ,CAArB;AACA,UAAM,GAAIE,MAAM,GAAG,EAAb,IAAoBF,IAA1B;AACAC,IAAAA,IAAI,CAACE,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,QAAlB,EAA4BU,MAAM,CAACC,SAAP,IAAoB,EAAhD,CAAjB;AACA,WAAOF,IAAP;AACD,GALO,CAAR;AAMAH,EAAAA,QAAQ,CAACX,IAAD,EAAO,MAAP,EAAe,UAAUY,QAAV,EAAoBC,IAApB,EAA0B;AAC/CD,IAAAA,QAAQ,CAACO,KAAT,CAAe,IAAf,EAAqBN,IAArB;;AACA,QAAI,KAAKG,SAAL,CAAeV,MAAnB,EAA2B;AAEzBK,MAAAA,QAAQ,CAACV,MAAD,EAAS,WAAT,EAAsB,UAAUW,QAAV,EAAoBC,IAApB,EAA0B;AACtDD,QAAAA,QAAQ,CAACO,KAAT,CAAeC,IAAf,EAAqBP,IAArB;AACAJ,QAAAA,SAAS,CAACU,KAAV,CAAgBC,IAAhB;AACD,OAHO,CAAR;AAKD;AACF,GAVO,CAAR;AAWD","sourcesContent":["import { Tree, Branch, utils } from 'phylocanvas';\n\nconst { getPixelRatio } = utils.canvas;\n\nconst DEFAULTS = {\n  active: true,\n};\n\nconsole.log(Tree)\n\nfunction drawStats() {\n}\n\nexport default function plugin(decorate) {\n  decorate(this, 'createTree', (delegate, args) => {\n    const tree = delegate(...args);\n    const [ , config = {} ] = args;\n    tree.treeStats = Object.assign({}, DEFAULTS, config.treeStats || {});\n    return tree;\n  });\n  decorate(Tree, 'load', function (delegate, args) {\n    delegate.apply(this, args);\n    if (this.treeStats.active) {\n\n      decorate(Branch, 'drawLabel', function (delegate, args) {\n        delegate.apply(leaf, args);\n        drawStats.apply(leaf);\n      })\n\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}