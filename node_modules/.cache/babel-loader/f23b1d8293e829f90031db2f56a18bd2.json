{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import Phylocanvas from\"phylocanvas\";import{jsx as _jsx}from\"react/jsx-runtime\";function PhylocanvasView(props){var phylocanvas=useRef();var typeList=useRef([\"radial\",\"rectangular\",\"circular\",\"diagonal\",\"hierarchical\"]);useEffect(function(){phylocanvas.current=Phylocanvas.createTree(\"phylocanvas\");},[]);useEffect(function(){phylocanvas.current.load(props.tree);},[props.tree]);useEffect(function(){if(typeList.current.includes(props.type)){phylocanvas.current.setTreeType(props.type);}else{phylocanvas.current.setTreeType(\"circular\");}},[props.type]);useEffect(function(){phylocanvas.current.showLabels=props.labels;phylocanvas.current.alignLabels=props.align;phylocanvas.current.setNodeSize(props.nodeSize);phylocanvas.current.setTextSize(props.textSize);phylocanvas.current.lineWidth=props.lineWidth;phylocanvas.current.draw();},[props.type,props.labels,props.align,props.nodeSize,props.textSize,props.lineWidth]);return/*#__PURE__*/_jsx(\"div\",{id:\"phylocanvas\"});}export default PhylocanvasView;","map":{"version":3,"sources":["/var/www/epitools/src/phylocanvas/Phylocanvas.js"],"names":["React","useEffect","useRef","Phylocanvas","PhylocanvasView","props","phylocanvas","typeList","current","createTree","load","tree","includes","type","setTreeType","showLabels","labels","alignLabels","align","setNodeSize","nodeSize","setTextSize","textSize","lineWidth","draw"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,C,2CAEA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,GAAIC,CAAAA,WAAW,CAAGJ,MAAM,EAAxB,CACA,GAAIK,CAAAA,QAAQ,CAAGL,MAAM,CAAC,CAAC,QAAD,CAAW,aAAX,CAA0B,UAA1B,CAAsC,UAAtC,CAAkD,cAAlD,CAAD,CAArB,CAEAD,SAAS,CAAC,UAAM,CACdK,WAAW,CAACE,OAAZ,CAAsBL,WAAW,CAACM,UAAZ,CAAuB,aAAvB,CAAtB,CACD,CAFQ,CAEN,EAFM,CAAT,CAIAR,SAAS,CAAC,UAAM,CACdK,WAAW,CAACE,OAAZ,CAAoBE,IAApB,CAAyBL,KAAK,CAACM,IAA/B,EACD,CAFQ,CAEN,CAACN,KAAK,CAACM,IAAP,CAFM,CAAT,CAIAV,SAAS,CAAC,UAAM,CACd,GAAIM,QAAQ,CAACC,OAAT,CAAiBI,QAAjB,CAA0BP,KAAK,CAACQ,IAAhC,CAAJ,CAA2C,CACzCP,WAAW,CAACE,OAAZ,CAAoBM,WAApB,CAAgCT,KAAK,CAACQ,IAAtC,EACD,CAFD,IAEO,CACLP,WAAW,CAACE,OAAZ,CAAoBM,WAApB,CAAgC,UAAhC,EACD,CACF,CANQ,CAMN,CAACT,KAAK,CAACQ,IAAP,CANM,CAAT,CAQAZ,SAAS,CAAC,UAAM,CACdK,WAAW,CAACE,OAAZ,CAAoBO,UAApB,CAAiCV,KAAK,CAACW,MAAvC,CACAV,WAAW,CAACE,OAAZ,CAAoBS,WAApB,CAAkCZ,KAAK,CAACa,KAAxC,CACAZ,WAAW,CAACE,OAAZ,CAAoBW,WAApB,CAAgCd,KAAK,CAACe,QAAtC,EACAd,WAAW,CAACE,OAAZ,CAAoBa,WAApB,CAAgChB,KAAK,CAACiB,QAAtC,EACAhB,WAAW,CAACE,OAAZ,CAAoBe,SAApB,CAAgClB,KAAK,CAACkB,SAAtC,CACAjB,WAAW,CAACE,OAAZ,CAAoBgB,IAApB,GACD,CAPQ,CAON,CAACnB,KAAK,CAACQ,IAAP,CAAaR,KAAK,CAACW,MAAnB,CAA2BX,KAAK,CAACa,KAAjC,CAAwCb,KAAK,CAACe,QAA9C,CAAwDf,KAAK,CAACiB,QAA9D,CAAwEjB,KAAK,CAACkB,SAA9E,CAPM,CAAT,CASA,mBACE,YAAK,EAAE,CAAC,aAAR,EADF,CAGD,CAED,cAAenB,CAAAA,eAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Phylocanvas from \"phylocanvas\";\n\nfunction PhylocanvasView(props) {\n  let phylocanvas = useRef();\n  let typeList = useRef([\"radial\", \"rectangular\", \"circular\", \"diagonal\", \"hierarchical\"])\n\n  useEffect(() => {\n    phylocanvas.current = Phylocanvas.createTree(\"phylocanvas\")\n  }, [])\n\n  useEffect(() => {\n    phylocanvas.current.load(props.tree)\n  }, [props.tree])\n\n  useEffect(() => {\n    if (typeList.current.includes(props.type)) {\n      phylocanvas.current.setTreeType(props.type)\n    } else {\n      phylocanvas.current.setTreeType(\"circular\")\n    }\n  }, [props.type])\n\n  useEffect(() => {\n    phylocanvas.current.showLabels = props.labels\n    phylocanvas.current.alignLabels = props.align\n    phylocanvas.current.setNodeSize(props.nodeSize)\n    phylocanvas.current.setTextSize(props.textSize)\n    phylocanvas.current.lineWidth = props.lineWidth\n    phylocanvas.current.draw()\n  }, [props.type, props.labels, props.align, props.nodeSize, props.textSize, props.lineWidth])\n\n  return (\n    <div id=\"phylocanvas\"></div>\n  )\n}\n\nexport default PhylocanvasView;\n"]},"metadata":{},"sourceType":"module"}