{"ast":null,"code":"var _jsxFileName = \"/var/www/epitools/src/plotly/Plotly.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport Plotly from \"plotly.js-dist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlotlyView(props) {\n  _s();\n\n  let plotly = useRef();\n  useEffect(() => {\n    plotly.current = Plotly;\n    plotly.current.newPlot('plotly', props.data);\n  }, []);\n  useEffect(() => {\n    plotly.current.update('plotly', props.data);\n    plotly.current.redraw('plotly');\n    console.log(\"updated\");\n  }, [props.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"plotly\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlotlyView, \"kAyIAmp3fljpw5uYuQhD/DlITA4=\");\n\n_c = PlotlyView;\nexport default PlotlyView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlotlyView\");","map":{"version":3,"sources":["/var/www/epitools/src/plotly/Plotly.js"],"names":["React","useEffect","useRef","Plotly","PlotlyView","props","plotly","current","newPlot","data","update","redraw","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,MAAIC,MAAM,GAAGJ,MAAM,EAAnB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACC,OAAP,GAAiBJ,MAAjB;AACAG,IAAAA,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuB,QAAvB,EAAiCH,KAAK,CAACI,IAAvC;AACD,GAHQ,EAGN,EAHM,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACC,OAAP,CAAeG,MAAf,CAAsB,QAAtB,EAAgCL,KAAK,CAACI,IAAtC;AACAH,IAAAA,MAAM,CAACC,OAAP,CAAeI,MAAf,CAAsB,QAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAJQ,EAIN,CAACR,KAAK,CAACI,IAAP,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAlBQL,U;;KAAAA,U;AAoBT,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useRef} from \"react\";\nimport Plotly from \"plotly.js-dist\";\n\nfunction PlotlyView(props) {\n  let plotly = useRef();\n\n  useEffect(() => {\n    plotly.current = Plotly\n    plotly.current.newPlot('plotly', props.data)\n  }, [])\n\n\n  useEffect(() => {\n    plotly.current.update('plotly', props.data)\n    plotly.current.redraw('plotly')\n    console.log(\"updated\")\n  }, [props.data])\n\n  return (\n    <div id=\"plotly\"></div>\n  )\n}\n\nexport default PlotlyView;\n"]},"metadata":{},"sourceType":"module"}