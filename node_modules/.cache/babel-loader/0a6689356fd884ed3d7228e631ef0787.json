{"ast":null,"code":"import { Tree, utils } from 'phylocanvas';\nconst {\n  getPixelRatio\n} = utils.canvas;\nconst DEFAULTS = {\n  active: true,\n  pairwiseMatrix: {}\n};\n\nfunction walkMatrix(node, walked) {\n  walked.push(node);\n\n  for (let child of node.children) {\n    if (!walked.includes(child)) {\n      walkMatrix(child, walked);\n    }\n  }\n\n  if (node.parent && !walked.includes(node.parent)) {\n    walkMatrix(node.parent, walked);\n  }\n}\n\nfunction buildPairwiseMatrix() {\n  console.log(this.leaves);\n\n  for (let leaf in this.leaves) {\n    this.pairwiseOps.pairwiseMatrix[leaf] = [];\n    walkMatrix(this.leaves[leaf], []);\n  }\n}\n\nexport default function plugin(decorate) {\n  decorate(this, 'createTree', (delegate, args) => {\n    const tree = delegate(...args);\n    const [, config = {}] = args;\n    tree.pairwiseOps = Object.assign({}, DEFAULTS, config.pairwiseOps || {});\n    return tree;\n  });\n  decorate(Tree, 'load', function (delegate, args) {\n    delegate.apply(this, args);\n\n    if (this.pairwiseOps.active) {\n      buildPairwiseMatrix.apply(this);\n    }\n  });\n}","map":{"version":3,"sources":["/var/www/epitools/my_modules/phylocanvas-plugin-pairwise-ops/index.js"],"names":["Tree","utils","getPixelRatio","canvas","DEFAULTS","active","pairwiseMatrix","walkMatrix","node","walked","push","child","children","includes","parent","buildPairwiseMatrix","console","log","leaves","leaf","pairwiseOps","plugin","decorate","delegate","args","tree","config","Object","assign","apply"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,aAA5B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,KAAK,CAACE,MAAhC;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,cAAc,EAAE;AAFD,CAAjB;;AAKA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkC;AAChCA,EAAAA,MAAM,CAACC,IAAP,CAAYF,IAAZ;;AACA,OAAK,IAAIG,KAAT,IAAkBH,IAAI,CAACI,QAAvB,EAAiC;AAC/B,QAAI,CAAEH,MAAM,CAACI,QAAP,CAAgBF,KAAhB,CAAN,EAA8B;AAC5BJ,MAAAA,UAAU,CAACI,KAAD,EAAQF,MAAR,CAAV;AACD;AACF;;AACD,MAAID,IAAI,CAACM,MAAL,IAAe,CAAEL,MAAM,CAACI,QAAP,CAAgBL,IAAI,CAACM,MAArB,CAArB,EAAmD;AACjDP,IAAAA,UAAU,CAACC,IAAI,CAACM,MAAN,EAAcL,MAAd,CAAV;AACD;AACF;;AAED,SAASM,mBAAT,GAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,MAAjB;;AACA,OAAK,IAAIC,IAAT,IAAiB,KAAKD,MAAtB,EAA8B;AAC5B,SAAKE,WAAL,CAAiBd,cAAjB,CAAgCa,IAAhC,IAAwC,EAAxC;AACAZ,IAAAA,UAAU,CAAC,KAAKW,MAAL,CAAYC,IAAZ,CAAD,EAAoB,EAApB,CAAV;AACD;AACF;;AAED,eAAe,SAASE,MAAT,CAAgBC,QAAhB,EAA0B;AACvCA,EAAAA,QAAQ,CAAC,IAAD,EAAO,YAAP,EAAqB,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC/C,UAAMC,IAAI,GAAGF,QAAQ,CAAC,GAAGC,IAAJ,CAArB;AACA,UAAM,GAAIE,MAAM,GAAG,EAAb,IAAoBF,IAA1B;AACAC,IAAAA,IAAI,CAACL,WAAL,GAAmBO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxB,QAAlB,EAA4BsB,MAAM,CAACN,WAAP,IAAsB,EAAlD,CAAnB;AACA,WAAOK,IAAP;AACD,GALO,CAAR;AAMAH,EAAAA,QAAQ,CAACtB,IAAD,EAAO,MAAP,EAAe,UAAUuB,QAAV,EAAoBC,IAApB,EAA0B;AAC/CD,IAAAA,QAAQ,CAACM,KAAT,CAAe,IAAf,EAAqBL,IAArB;;AACA,QAAI,KAAKJ,WAAL,CAAiBf,MAArB,EAA6B;AAC3BU,MAAAA,mBAAmB,CAACc,KAApB,CAA0B,IAA1B;AACD;AACF,GALO,CAAR;AAMD","sourcesContent":["import { Tree, utils } from 'phylocanvas';\n\nconst { getPixelRatio } = utils.canvas;\n\nconst DEFAULTS = {\n  active: true,\n  pairwiseMatrix: {},\n};\n\nfunction walkMatrix(node, walked) {\n  walked.push(node)\n  for (let child of node.children) {\n    if (! walked.includes(child)) {\n      walkMatrix(child, walked)\n    }\n  }\n  if (node.parent && ! walked.includes(node.parent)) {\n    walkMatrix(node.parent, walked)\n  }\n}\n\nfunction buildPairwiseMatrix() {\n  console.log(this.leaves)\n  for (let leaf in this.leaves) {\n    this.pairwiseOps.pairwiseMatrix[leaf] = []\n    walkMatrix(this.leaves[leaf], [])\n  }\n}\n\nexport default function plugin(decorate) {\n  decorate(this, 'createTree', (delegate, args) => {\n    const tree = delegate(...args);\n    const [ , config = {} ] = args;\n    tree.pairwiseOps = Object.assign({}, DEFAULTS, config.pairwiseOps || {});\n    return tree;\n  });\n  decorate(Tree, 'load', function (delegate, args) {\n    delegate.apply(this, args);\n    if (this.pairwiseOps.active) {\n      buildPairwiseMatrix.apply(this);\n    }   \n  });\n}\n"]},"metadata":{},"sourceType":"module"}