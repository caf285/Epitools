{"ast":null,"code":"import _slicedToArray from\"/var/www/epitools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Phylocanvas from\"../phylocanvas/Phylocanvas.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PhylocanvasView(){var _useState=useState(\"(A:1)B;\"),_useState2=_slicedToArray(_useState,2),tree=_useState2[0],setTree=_useState2[1];var _useState3=useState(\"radial\"),_useState4=_slicedToArray(_useState3,2),type=_useState4[0],setType=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),labels=_useState6[0],setLabels=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),align=_useState8[0],setAlign=_useState8[1];var _useState9=useState(10),_useState10=_slicedToArray(_useState9,2),nodeSize=_useState10[0],setNodeSize=_useState10[1];var _useState11=useState(20),_useState12=_slicedToArray(_useState11,2),textSize=_useState12[0],setTextSize=_useState12[1];var _useState13=useState(2),_useState14=_slicedToArray(_useState13,2),lineWidth=_useState14[0],setLineWidth=_useState14[1];useEffect(function(){setTree(\"(A:2.5,B:0.2,(C:0.3,D:0.4)E:0.9)F;\");setType(\"rectangular\");},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Phylocanvas Demo\"}),/*#__PURE__*/_jsx(Phylocanvas,{tree:tree,type:type,labels:labels,align:align,nodeSize:nodeSize,textSize:textSize,lineWidth:lineWidth}),/*#__PURE__*/_jsx(\"h5\",{children:\"Type:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setType(\"radial\");},children:\"Radial\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setType(\"rectangular\");},children:\"Rectangular\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setType(\"circular\");},children:\"Circular\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setType(\"diagonal\");},children:\"Diagonal\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setType(\"hierarchical\");},children:\"Hierarchical\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"Toggle:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setLabels(!labels);},children:\"Labels\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setAlign(!align);},children:\"Align\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"Style:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setNodeSize(nodeSize+1);},children:\"Node Size + 1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setNodeSize(nodeSize-1);},children:\"Node Size - 1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setTextSize(textSize+1);},children:\"Text Size + 1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setTextSize(textSize-1);},children:\"Text Size - 1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setLineWidth(lineWidth+1);},children:\"Line Width + 1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setLineWidth(lineWidth-1);},children:\"Line Width - 1\"})]});}export default PhylocanvasView;","map":{"version":3,"sources":["/var/www/epitools/src/demo/DemoPhylocanvas.js"],"names":["React","useEffect","useState","Phylocanvas","PhylocanvasView","tree","setTree","type","setType","labels","setLabels","align","setAlign","nodeSize","setNodeSize","textSize","setTextSize","lineWidth","setLineWidth"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,C,wFAEA,QAASC,CAAAA,eAAT,EAA2B,CACzB,cAAwBF,QAAQ,CAAC,SAAD,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,eAAwBJ,QAAQ,CAAC,QAAD,CAAhC,yCAAOK,IAAP,eAAaC,OAAb,eACA,eAA4BN,QAAQ,CAAC,IAAD,CAApC,yCAAOO,MAAP,eAAeC,SAAf,eACA,eAA0BR,QAAQ,CAAC,KAAD,CAAlC,yCAAOS,KAAP,eAAcC,QAAd,eACA,eAAgCV,QAAQ,CAAC,EAAD,CAAxC,0CAAOW,QAAP,gBAAiBC,WAAjB,gBACA,gBAAgCZ,QAAQ,CAAC,EAAD,CAAxC,2CAAOa,QAAP,gBAAiBC,WAAjB,gBACA,gBAAkCd,QAAQ,CAAC,CAAD,CAA1C,2CAAOe,SAAP,gBAAkBC,YAAlB,gBAEAjB,SAAS,CAAC,UAAM,CACdK,OAAO,CAAC,oCAAD,CAAP,CACAE,OAAO,CAAC,aAAD,CAAP,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACE,oCACE,wCADF,cAEE,KAAC,WAAD,EACE,IAAI,CAAIH,IADV,CAEE,IAAI,CAAIE,IAFV,CAGE,MAAM,CAAIE,MAHZ,CAIE,KAAK,CAAIE,KAJX,CAKE,QAAQ,CAAIE,QALd,CAME,QAAQ,CAAIE,QANd,CAOE,SAAS,CAAIE,SAPf,EAFF,cAWE,6BAXF,cAYE,eAAQ,OAAO,CAAE,yBAAMT,CAAAA,OAAO,CAAC,QAAD,CAAb,EAAjB,oBAZF,cAaE,eAAQ,OAAO,CAAE,yBAAMA,CAAAA,OAAO,CAAC,aAAD,CAAb,EAAjB,yBAbF,cAcE,eAAQ,OAAO,CAAE,yBAAMA,CAAAA,OAAO,CAAC,UAAD,CAAb,EAAjB,sBAdF,cAeE,eAAQ,OAAO,CAAE,yBAAMA,CAAAA,OAAO,CAAC,UAAD,CAAb,EAAjB,sBAfF,cAgBE,eAAQ,OAAO,CAAE,yBAAMA,CAAAA,OAAO,CAAC,cAAD,CAAb,EAAjB,0BAhBF,cAiBE,+BAjBF,cAkBE,eAAQ,OAAO,CAAE,yBAAME,CAAAA,SAAS,CAAC,CAACD,MAAF,CAAf,EAAjB,oBAlBF,cAmBE,eAAQ,OAAO,CAAE,yBAAMG,CAAAA,QAAQ,CAAC,CAACD,KAAF,CAAd,EAAjB,mBAnBF,cAoBE,8BApBF,cAqBE,eAAQ,OAAO,CAAE,yBAAMG,CAAAA,WAAW,CAACD,QAAQ,CAAG,CAAZ,CAAjB,EAAjB,2BArBF,cAsBE,eAAQ,OAAO,CAAE,yBAAMC,CAAAA,WAAW,CAACD,QAAQ,CAAG,CAAZ,CAAjB,EAAjB,2BAtBF,cAuBE,eAAQ,OAAO,CAAE,yBAAMG,CAAAA,WAAW,CAACD,QAAQ,CAAG,CAAZ,CAAjB,EAAjB,2BAvBF,cAwBE,eAAQ,OAAO,CAAE,yBAAMC,CAAAA,WAAW,CAACD,QAAQ,CAAG,CAAZ,CAAjB,EAAjB,2BAxBF,cAyBE,eAAQ,OAAO,CAAE,yBAAMG,CAAAA,YAAY,CAACD,SAAS,CAAG,CAAb,CAAlB,EAAjB,4BAzBF,cA0BE,eAAQ,OAAO,CAAE,yBAAMC,CAAAA,YAAY,CAACD,SAAS,CAAG,CAAb,CAAlB,EAAjB,4BA1BF,GADF,CA8BD,CAED,cAAeb,CAAAA,eAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Phylocanvas from \"../phylocanvas/Phylocanvas.js\";\n\nfunction PhylocanvasView() {\n  const [tree, setTree] = useState(\"(A:1)B;\");\n  const [type, setType] = useState(\"radial\");\n  const [labels, setLabels] = useState(true);\n  const [align, setAlign] = useState(false);\n  const [nodeSize, setNodeSize] = useState(10);\n  const [textSize, setTextSize] = useState(20);\n  const [lineWidth, setLineWidth] = useState(2);\n\n  useEffect(() => {\n    setTree(\"(A:2.5,B:0.2,(C:0.3,D:0.4)E:0.9)F;\");\n    setType(\"rectangular\");\n  }, [])\n\n  return (\n    <div>\n      <h1>Phylocanvas Demo</h1>\n      <Phylocanvas\n        tree = {tree}\n        type = {type}\n        labels = {labels}\n        align = {align}\n        nodeSize = {nodeSize}\n        textSize = {textSize}\n        lineWidth = {lineWidth}\n      />\n      <h5>Type:</h5>\n      <button onClick={() => setType(\"radial\")}>Radial</button>\n      <button onClick={() => setType(\"rectangular\")}>Rectangular</button>\n      <button onClick={() => setType(\"circular\")}>Circular</button>\n      <button onClick={() => setType(\"diagonal\")}>Diagonal</button>\n      <button onClick={() => setType(\"hierarchical\")}>Hierarchical</button>\n      <h5>Toggle:</h5>\n      <button onClick={() => setLabels(!labels)}>Labels</button>\n      <button onClick={() => setAlign(!align)}>Align</button>\n      <h5>Style:</h5>\n      <button onClick={() => setNodeSize(nodeSize + 1)}>Node Size + 1</button>\n      <button onClick={() => setNodeSize(nodeSize - 1)}>Node Size - 1</button>\n      <button onClick={() => setTextSize(textSize + 1)}>Text Size + 1</button>\n      <button onClick={() => setTextSize(textSize - 1)}>Text Size - 1</button>\n      <button onClick={() => setLineWidth(lineWidth + 1)}>Line Width + 1</button>\n      <button onClick={() => setLineWidth(lineWidth - 1)}>Line Width - 1</button>\n    </div>\n  )\n}\n\nexport default PhylocanvasView;\n"]},"metadata":{},"sourceType":"module"}