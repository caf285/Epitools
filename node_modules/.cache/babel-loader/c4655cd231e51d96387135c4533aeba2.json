{"ast":null,"code":"import { Tree, utils } from 'phylocanvas';\nconst {\n  getPixelRatio\n} = utils.canvas;\nconst DEFAULTS = {\n  active: true\n};\n\nfunction drawStats() {}\n\nexport default function plugin(decorate) {\n  decorate(this, 'createTree', (delegate, args) => {\n    const tree = delegate(...args);\n    const [, config = {}] = args;\n    tree.treeStats = Object.assign({}, DEFAULTS, config.treeStats || {});\n    return tree;\n  });\n  decorate(Tree, 'load', function (delegate, args) {\n    delegate.apply(this, args);\n\n    if (this.treeStats.active) {\n      let ctx = this.canvas;\n\n      for (let leaf of this.leaves) {\n        ctx.addEventListener('mousemove', e => {\n          console.log(e.offsetX);\n        });\n        console.log(leaf);\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/var/www/pathogen-intelligence.tgen.org/epitools/my_modules/phylocanvas-plugin-tree-stats/index.js"],"names":["Tree","utils","getPixelRatio","canvas","DEFAULTS","active","drawStats","plugin","decorate","delegate","args","tree","config","treeStats","Object","assign","apply","ctx","leaf","leaves","addEventListener","e","console","log","offsetX"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,aAA5B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,KAAK,CAACE,MAAhC;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AADO,CAAjB;;AAIA,SAASC,SAAT,GAAqB,CACpB;;AAED,eAAe,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AACvCA,EAAAA,QAAQ,CAAC,IAAD,EAAO,YAAP,EAAqB,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC/C,UAAMC,IAAI,GAAGF,QAAQ,CAAC,GAAGC,IAAJ,CAArB;AACA,UAAM,GAAIE,MAAM,GAAG,EAAb,IAAoBF,IAA1B;AACAC,IAAAA,IAAI,CAACE,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,QAAlB,EAA4BQ,MAAM,CAACC,SAAP,IAAoB,EAAhD,CAAjB;AACA,WAAOF,IAAP;AACD,GALO,CAAR;AAMAH,EAAAA,QAAQ,CAACR,IAAD,EAAO,MAAP,EAAe,UAAUS,QAAV,EAAoBC,IAApB,EAA0B;AAC/CD,IAAAA,QAAQ,CAACO,KAAT,CAAe,IAAf,EAAqBN,IAArB;;AAEA,QAAI,KAAKG,SAAL,CAAeR,MAAnB,EAA2B;AACzB,UAAIY,GAAG,GAAG,KAAKd,MAAf;;AACA,WAAK,IAAIe,IAAT,IAAiB,KAAKC,MAAtB,EAA8B;AAC5BF,QAAAA,GAAG,CAACG,gBAAJ,CAAqB,WAArB,EAAmCC,CAAD,IAAO;AACvCC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACD,SAFD;AAGAF,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD;AACF;AACF,GAZO,CAAR;AAaD","sourcesContent":["import { Tree, utils } from 'phylocanvas';\n\nconst { getPixelRatio } = utils.canvas;\n\nconst DEFAULTS = {\n  active: true,\n};\n\nfunction drawStats() {\n}\n\nexport default function plugin(decorate) {\n  decorate(this, 'createTree', (delegate, args) => {\n    const tree = delegate(...args);\n    const [ , config = {} ] = args;\n    tree.treeStats = Object.assign({}, DEFAULTS, config.treeStats || {});\n    return tree;\n  });\n  decorate(Tree, 'load', function (delegate, args) {\n    delegate.apply(this, args);\n    \n    if (this.treeStats.active) {\n      let ctx = this.canvas\n      for (let leaf of this.leaves) {\n        ctx.addEventListener('mousemove', (e) => {\n          console.log(e.offsetX)\n        })\n        console.log(leaf)\n      }\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}