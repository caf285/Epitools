{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import Phylocanvas from\"phylocanvas\";import scalebar from\"phylocanvas-plugin-scalebar\";import branchLength from\"phylocanvas-plugin-branch-length\";import root from\"phylocanvas-plugin-root\";import pairwiseOps from\"phylocanvas-plugin-pairwise-ops\";import treeStats from\"phylocanvas-plugin-tree-stats\";import{jsx as _jsx}from\"react/jsx-runtime\";Phylocanvas.plugin(scalebar);Phylocanvas.plugin(branchLength);Phylocanvas.plugin(root);Phylocanvas.plugin(pairwiseOps);Phylocanvas.plugin(treeStats);function PhylocanvasView(props){var phylocanvas=useRef();var typeList=useRef([\"radial\",\"rectangular\",\"circular\",\"diagonal\",\"hierarchical\"]);useEffect(function(){phylocanvas.current=Phylocanvas.createTree(\"phylocanvas\");console.log(phylocanvas.current);},[]);useEffect(function(){phylocanvas.current.load(props.tree);},[props.tree]);useEffect(function(){if(typeList.current.includes(props.type)){phylocanvas.current.setTreeType(props.type);}else{phylocanvas.current.setTreeType(\"circular\");}},[props.type]);useEffect(function(){phylocanvas.current.setNodeSize(props.nodeSize);},[props.nodeSize]);useEffect(function(){phylocanvas.current.setTextSize(props.textSize);},[props.textSize]);useEffect(function(){phylocanvas.current.showLabels=props.labels;phylocanvas.current.alignLabels=props.align;phylocanvas.current.lineWidth=props.lineWidth;phylocanvas.current.draw();},[props.labels,props.align,props.lineWidth]);useEffect(function(){phylocanvas.current.pairwiseOps.clusterDistance=props.clusterDistance;phylocanvas.current.pairwiseOps.clusterSamples=props.clusterSamples;console.log(phylocanvas.current);phylocanvas.current.pairwiseOps.clusterDraw=true;phylocanvas.current.draw();},[props.clusterDistance,props.clusterSamples]);return/*#__PURE__*/_jsx(\"div\",{id:\"phylocanvas\"});}export default PhylocanvasView;","map":{"version":3,"sources":["/var/www/pathogen-intelligence.tgen.org/epitools/src/phylocanvas/Phylocanvas.js"],"names":["React","useEffect","useRef","Phylocanvas","scalebar","branchLength","root","pairwiseOps","treeStats","plugin","PhylocanvasView","props","phylocanvas","typeList","current","createTree","console","log","load","tree","includes","type","setTreeType","setNodeSize","nodeSize","setTextSize","textSize","showLabels","labels","alignLabels","align","lineWidth","draw","clusterDistance","clusterSamples","clusterDraw"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Phylocanvas from \"phylocanvas\";\nimport scalebar from \"phylocanvas-plugin-scalebar\";\nimport branchLength from \"phylocanvas-plugin-branch-length\";\nimport root from \"phylocanvas-plugin-root\";\nimport pairwiseOps from \"phylocanvas-plugin-pairwise-ops\";\nimport treeStats from \"phylocanvas-plugin-tree-stats\";\nPhylocanvas.plugin(scalebar)\nPhylocanvas.plugin(branchLength)\nPhylocanvas.plugin(root)\nPhylocanvas.plugin(pairwiseOps)\nPhylocanvas.plugin(treeStats)\n\nfunction PhylocanvasView(props) {\n  let phylocanvas = useRef();\n  let typeList = useRef([\"radial\", \"rectangular\", \"circular\", \"diagonal\", \"hierarchical\"])\n\n  useEffect(() => {\n    phylocanvas.current = Phylocanvas.createTree(\"phylocanvas\")\n    console.log(phylocanvas.current)\n  }, [])\n\n  useEffect(() => {\n    phylocanvas.current.load(props.tree)\n  }, [props.tree])\n\n  useEffect(() => {\n    if (typeList.current.includes(props.type)) {\n      phylocanvas.current.setTreeType(props.type)\n    } else {\n      phylocanvas.current.setTreeType(\"circular\")\n    }\n  }, [props.type])\n\n  useEffect(() => {\n    phylocanvas.current.setNodeSize(props.nodeSize)\n  }, [props.nodeSize])\n\n  useEffect(() => {\n    phylocanvas.current.setTextSize(props.textSize)\n  }, [props.textSize])\n\n  useEffect(() => {\n    phylocanvas.current.showLabels = props.labels\n    phylocanvas.current.alignLabels = props.align\n    phylocanvas.current.lineWidth = props.lineWidth\n    phylocanvas.current.draw()\n  }, [props.labels, props.align, props.lineWidth])\n\n  useEffect(() => {\n    phylocanvas.current.pairwiseOps.clusterDistance = props.clusterDistance\n    phylocanvas.current.pairwiseOps.clusterSamples = props.clusterSamples\n    console.log(phylocanvas.current)\n    phylocanvas.current.pairwiseOps.clusterDraw = true\n    phylocanvas.current.draw()\n  }, [props.clusterDistance, props.clusterSamples])\n\n  return (\n    <div id=\"phylocanvas\"></div>\n  )\n}\n\nexport default PhylocanvasView;\n"]},"metadata":{},"sourceType":"module"}