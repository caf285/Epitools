{"ast":null,"code":"var _jsxFileName = \"/var/www/epitools/src/demo/DemoPlotly.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Plotly from \"../plotly/Plotly.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlotlyView() {\n  _s();\n\n  const [x, setX] = useState([\"data1\", \"data2\"]);\n  const [y, setY] = useState([15, 20]);\n  const [type, setType] = useState(\"bar\");\n  useEffect(() => {\n    setX([\"test1\", \"test2\"]);\n    setY([100, 200]);\n    setType(\"scatter\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plotly Quickstart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plotly, {\n      data: [{\n        x: x,\n        y: y,\n        type: type\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Labels:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), \"X: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"demoPlotlyXLabel\",\n      onchange: () => setX([this.innerHTML, this.innerHTML])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this), \"\\u2003Y: \", /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Type:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlotlyView, \"PRT9yjS1/zYQCIaJ3KVYhjlB1+w=\");\n\n_c = PlotlyView;\nexport default PlotlyView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlotlyView\");","map":{"version":3,"sources":["/var/www/epitools/src/demo/DemoPlotly.js"],"names":["React","useEffect","useState","Plotly","PlotlyView","x","setX","y","setY","type","setType","innerHTML"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYJ,QAAQ,CAAC,CAAC,OAAD,EAAU,OAAV,CAAD,CAA1B;AACA,QAAM,CAACK,CAAD,EAAIC,IAAJ,IAAYN,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,CAA1B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,IAAI,CAAC,CAAC,OAAD,EAAU,OAAV,CAAD,CAAJ;AACAE,IAAAA,IAAI,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,CAAJ;AACAE,IAAAA,OAAO,CAAC,SAAD,CAAP;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,IAAI,EACF,CACE;AACEL,QAAAA,CAAC,EAAEA,CADL;AAEEE,QAAAA,CAAC,EAAEA,CAFL;AAGEE,QAAAA,IAAI,EAAEA;AAHR,OADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,sBAcK;AAAO,MAAA,EAAE,EAAC,kBAAV;AAA6B,MAAA,QAAQ,EAAE,MAAMH,IAAI,CAAC,CAAC,KAAKK,SAAN,EAAgB,KAAKA,SAArB,CAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,YAdL,4BAeW;AAAA;AAAA;AAAA;AAAA,YAfX,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAhCQP,U;;KAAAA,U;AAkCT,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Plotly from \"../plotly/Plotly.js\";\n\nfunction PlotlyView() {\n  const [x, setX] = useState([\"data1\", \"data2\"]);\n  const [y, setY] = useState([15, 20]);\n  const [type, setType] = useState(\"bar\");\n\n  useEffect(() => {\n    setX([\"test1\", \"test2\"])\n    setY([100, 200])\n    setType(\"scatter\")\n  }, [])\n\n  return (\n    <div>\n      <h1>Plotly Quickstart</h1>\n      <Plotly\n        data = {\n          [\n            {\n              x: x,\n              y: y,\n              type: type\n            }\n          ]\n        }\n      />\n      <h5>Labels:</h5>\n      X: <input id=\"demoPlotlyXLabel\" onchange={() => setX([this.innerHTML,this.innerHTML])}></input>\n      &emsp;Y: <input></input>\n      <h5>Data:</h5>\n      <h5>Type:</h5>\n    </div>\n  )\n}\n\nexport default PlotlyView;\n"]},"metadata":{},"sourceType":"module"}