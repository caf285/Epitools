{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"Phylocanvas\"] = factory();else root[\"Phylocanvas\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          exports: {},\n\n          /******/\n          id: moduleId,\n\n          /******/\n          loaded: false\n          /******/\n\n        };\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.loaded = true;\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n      __webpack_require__.p = \"/dist/\";\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(0);\n      /******/\n    }([\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.utils = exports.nodeRenderers = exports.treeTypes = exports.Parser = exports.Tooltip = exports.Prerenderer = exports.Branch = exports.Tree = undefined;\n\n      var _Tree = __webpack_require__(1);\n\n      var _Tree2 = _interopRequireDefault(_Tree);\n\n      var _Branch = __webpack_require__(7);\n\n      var _Branch2 = _interopRequireDefault(_Branch);\n\n      var _Prerenderer = __webpack_require__(11);\n\n      var _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n      var _Tooltip = __webpack_require__(27);\n\n      var _Tooltip2 = _interopRequireDefault(_Tooltip);\n\n      var _Parser = __webpack_require__(29);\n\n      var _Parser2 = _interopRequireDefault(_Parser);\n\n      var _treeTypes = __webpack_require__(8);\n\n      var _treeTypes2 = _interopRequireDefault(_treeTypes);\n\n      var _nodeRenderers = __webpack_require__(26);\n\n      var _nodeRenderers2 = _interopRequireDefault(_nodeRenderers);\n\n      var _utils = __webpack_require__(2);\n\n      var utils = _interopRequireWildcard(_utils);\n\n      function _interopRequireWildcard(obj) {\n        if (obj && obj.__esModule) {\n          return obj;\n        } else {\n          var newObj = {};\n\n          if (obj != null) {\n            for (var key in obj) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n          }\n\n          newObj.default = obj;\n          return newObj;\n        }\n      }\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function decorate(object, fnName, fn) {\n        var target = object[fnName] ? object : object.prototype;\n        var originalFn = target[fnName];\n\n        target[fnName] = function () {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return fn.call(this, originalFn, args);\n        };\n      }\n      /**\n       * The publicly exported module. Exports the following methods by default, and\n       * contains named exports of internal classes, types, and utils.\n       *\n       * @module Phylocanvas\n       */\n\n\n      exports.Tree = _Tree2.default;\n      exports.Branch = _Branch2.default;\n      exports.Prerenderer = _Prerenderer2.default;\n      exports.Tooltip = _Tooltip2.default;\n      exports.Parser = _Parser2.default;\n      exports.treeTypes = _treeTypes2.default;\n      exports.nodeRenderers = _nodeRenderers2.default;\n      exports.utils = utils;\n      /**\n       * Register a plugin.\n       *\n       * @param {function} pluginFn - Imported plugin module.\n       */\n\n      function plugin(pluginFn) {\n        pluginFn.call(this, decorate);\n      }\n      /**\n       * A factory function for Phylocanvas instances to enable decoration by plugins.\n       *\n       * @param {string|HTMLElement} element - ID or element within which to place Phylocanvas instance.\n       * @param {Object} config - Configuration object, properties are copied into the {@link Tree} object.\n       *\n       * @return An instance of {@link Tree}.\n       */\n\n\n      function createTree(element) {\n        var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return new _Tree2.default(element, config);\n      }\n\n      exports.default = {\n        plugin: plugin,\n        createTree: createTree\n      };\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _utils = __webpack_require__(2);\n\n      var _Branch = __webpack_require__(7);\n\n      var _Branch2 = _interopRequireDefault(_Branch);\n\n      var _Tooltip = __webpack_require__(27);\n\n      var _treeTypes = __webpack_require__(8);\n\n      var _treeTypes2 = _interopRequireDefault(_treeTypes);\n\n      var _parsers = __webpack_require__(28);\n\n      var _parsers2 = _interopRequireDefault(_parsers);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n          }\n\n          return arr2;\n        } else {\n          return Array.from(arr);\n        }\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var addClass = _utils.dom.addClass,\n          setCursorDrag = _utils.dom.setCursorDrag,\n          setCursorDragging = _utils.dom.setCursorDragging;\n      var fireEvent = _utils.events.fireEvent,\n          addEvent = _utils.events.addEvent,\n          removeEvent = _utils.events.removeEvent;\n      var getPixelRatio = _utils.canvas.getPixelRatio,\n          translateClick = _utils.canvas.translateClick;\n      var Predicates = _utils.constants.Predicates;\n      /**\n       * A Phylocanvas instance.\n       *\n       * @class\n       * @see module:Phylocanvas~createTree\n       */\n\n      var Tree = function () {\n        /**\n         * @constructor\n         * @param {string|HTMLElement} element\n         * @param {Object} config\n         */\n        function Tree(element) {\n          var _this = this;\n\n          var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          _classCallCheck(this, Tree);\n\n          this._point = {\n            x: 0,\n            y: 0\n          };\n          /**\n           * Places the instance in the DOM. Events are triggered from here.\n           *\n           * @type HTMLElement\n           */\n\n          this.containerElement = typeof element === 'string' ? document.getElementById(element) : element;\n          addClass(this.containerElement, 'pc-container');\n          /**\n           * Dictionary of {@link Branch} objects indexed by ID.\n           *\n           * @type {Object.<string, Branch>}\n           */\n\n          this.branches = {};\n          /**\n           * List of leaves.\n           *\n           * @type Array.<Branch>\n           */\n\n          this.leaves = [];\n          /**\n           * The root node of the tree\n           * (not neccesarily a root in the Phylogenetic sense)\n           *\n           * @type Branch\n           */\n\n          this.root = false;\n          /**\n           * Stores the unparsed tree.\n           *\n           * @type string\n           */\n\n          this.stringRepresentation = '';\n          /**\n           * Colour the branches of the tree based on the colour of the tips.\n           *\n           * @type boolean\n           */\n\n          this.backColour = false;\n          /**\n           * Stores the state of the tree after parsing.\n           *\n           * @type Object\n           */\n\n          this.originalTree = {}; // Set up the element and canvas\n\n          if (window.getComputedStyle(this.containerElement).position === 'static') {\n            this.containerElement.style.position = 'relative';\n          }\n\n          this.containerElement.style.boxSizing = 'border-box';\n          var canvasElement = document.createElement('canvas');\n          canvasElement.id = (this.containerElement.id || '') + '__canvas';\n          canvasElement.className = 'phylocanvas';\n          canvasElement.style.position = 'relative';\n          canvasElement.height = element.offsetHeight || 400;\n          canvasElement.width = element.offsetWidth || 400;\n          canvasElement.style.zIndex = '1';\n          this.containerElement.appendChild(canvasElement);\n          /**\n           * Canvas drawing context.\n           *\n           * @type CanvasRenderingContext2D\n           */\n\n          this.canvas = canvasElement.getContext('2d');\n\n          this.canvas.canvas.onselectstart = function () {\n            return false;\n          };\n\n          this.canvas.fillStyle = '#000000';\n          this.canvas.strokeStyle = '#000000';\n          this.canvas.save();\n          /**\n           * Colour for collapsed sections of the tree.\n           *\n           * @type string\n           */\n\n          this.collapsedColour = 'rgba(0, 0, 0, 0.5)';\n          /**\n           * A minimum and maximum number of child branches within which to\n           * automatically collapse branches on the first draw.\n           *\n           * @type object\n           * @property {number} min\n           * @property {number} max\n           */\n\n          this.defaultCollapsed = {};\n          /**\n           * The default tooltip showing number of child branches.\n           *\n           * @type Tooltip\n           */\n\n          this.tooltip = new _Tooltip.ChildNodesTooltip(this);\n          /**\n           * Has Tree been drawn already, true after first draw.\n           *\n           * @type boolean\n           */\n\n          this.drawn = false;\n          /**\n           * Stores highlighting functions used during drawing.\n           *\n           * @type Array.<Function>\n           */\n\n          this.highlighters = [];\n          /**\n           * The current level of zoom.\n           *\n           * @type number\n           */\n\n          this.zoom = 1;\n          /**\n           * Controls the speed of zooming. Recommended values are between 1 and 5.\n           *\n           * @type number\n           * @default\n           */\n\n          this.zoomFactor = 3;\n          /**\n           * @type boolean\n           * @default\n           */\n\n          this.disableZoom = false;\n          /**\n           * Force rectangular and hierarchical trees to use the canvas dimensions\n           * instead of the number of leaves for proportion at the prerender stage.\n           *\n           * @type boolean\n           */\n\n          this.fillCanvas = false;\n          /**\n           * Enable branch scaling.\n           *\n           * @type boolean\n           * @default\n           */\n\n          this.branchScaling = true;\n          /**\n           * The current branch scale.\n           *\n           * @type number\n           */\n\n          this.currentBranchScale = 1;\n          /**\n           * The ratio at which branches scale.\n           *\n           * @type number\n           */\n\n          this.branchScalingStep = 1.2;\n          /**\n           * Whether a click has been detected.\n           *\n           * @type boolean\n           */\n\n          this.pickedup = false;\n          /**\n           * Whether the user is dragging.\n           *\n           * @type boolean\n           */\n\n          this.dragging = false;\n          /**\n           * The starting x coordinate of a drag.\n           *\n           * @type number\n           */\n\n          this.startx = null;\n          /**\n           * The starting y coordinate of a drag.\n           *\n           * @type number\n           */\n\n          this.starty = null;\n          /**\n           * Factor with which to scale the radius of a leaf.\n           *\n           * @type number\n           * @default\n           */\n\n          this.baseNodeSize = 1;\n          /**\n           * Caches the offsetx when a click is detected.\n           *\n           * @type number\n           */\n\n          this.origx = null;\n          /**\n           * Caches the offsety when a click is detected.\n           *\n           * @type number\n           */\n\n          this.origy = null;\n          /**\n           * The x coordinate from which to begin drawing from.\n           *\n           * @type number\n           */\n\n          this.offsetx = this.canvas.canvas.width / 2;\n          /**\n           * The y coordinate from which to begin drawing from.\n           *\n           * @type number\n           */\n\n          this.offsety = this.canvas.canvas.height / 2;\n          /**\n           * The colour to apply to a selected branch.\n           *\n           * @type string\n           * @default\n           */\n\n          this.selectedColour = 'rgba(49,151,245,1)';\n          /**\n           * The colour to apply to a hihglighted branch.\n           *\n           * @type string\n           * @default\n           */\n\n          this.highlightColour = 'rgba(49,151,245,1)';\n          /**\n           * The line width of the halo on a highlighted branch.\n           *\n           * @type number\n           * @default\n           */\n\n          this.highlightWidth = 4;\n          /**\n           * Scale factor for the size of the the halo on a highlighted branch.\n           *\n           * @type number\n           * @default\n           */\n\n          this.highlightSize = 2;\n          /**\n           * Global branch colour,\n           *\n           * @type string\n           * @default\n           */\n\n          this.branchColour = 'rgba(0,0,0,1)';\n          /**\n           * Scale factor applied to branch lengths defined in the serialised\n           * representation of the tree.\n           *\n           * @type number\n           */\n\n          this.branchScalar = 1.0;\n          /**\n           * Space to add to bounds when fitting the tree to the canvas.\n           *\n           * @type number\n           * @default\n           */\n\n          this.padding = 50;\n          /**\n           * Space between a leaf and its label.\n           *\n           * @type number\n           * @default\n           */\n\n          this.labelPadding = 5;\n          /**\n           * Enable/disable shift-click multi-selection.\n           *\n           * @type boolean\n           * @default\n           */\n\n          this.multiSelect = true;\n          /**\n           * Flag to change on branch when clicked.\n           *\n           * @type string\n           * @default\n           */\n\n          this.clickFlag = 'selected';\n          /**\n           * Decide if a branch should be affected when clicked.\n           *\n           * @type function\n           *\n           * @param {Branch} branch\n           * @param {string} property\n           * @param {} value\n           *\n           * @return boolean\n           * @default A function returning true.\n           */\n\n          this.clickFlagPredicate = Predicates.tautology;\n          /**\n           * Show labels when hovering over node.\n           *\n           * @type boolean\n           * @default\n           */\n\n          this.hoverLabel = false;\n          /**\n           * @type boolean\n           * @default\n           */\n\n          this.internalNodesSelectable = true;\n          /**\n           * @type boolean\n           * @default\n           */\n\n          this.showLabels = true;\n          /**\n           * Global show/hide branch-length labels.\n           *\n           * @type boolean\n           * @default\n           */\n\n          this.showBranchLengthLabels = false;\n          /**\n           * Conditionally display branch-length labels when enabled.\n           *\n           * @type function\n           * @param {Branch} node\n           * @default\n           */\n\n          this.branchLengthLabelPredicate = Predicates.tautology;\n          /**\n           * @type boolean\n           * @default\n           */\n\n          this.showInternalNodeLabels = false;\n          /**\n           * Global style for internal labels on branches.\n           *\n           * @type object\n           * @property {string} colour\n           * @property {number} textSize\n           * @property {string} font\n           * @property {string} format - e.g. bold, italic\n           */\n\n          this.internalLabelStyle = {\n            colour: this.branchColour,\n            textSize: this.textSize,\n            font: this.font,\n            format: ''\n          };\n          this.setTreeType('radial');\n          /**\n           * Stores the length of the longest branch on the tree.\n           *\n           * @type number\n           */\n\n          this.maxBranchLength = 0;\n          /**\n           * The visible width of the branches.\n           *\n           * @type number\n           * @default\n           */\n\n          this.lineWidth = 1.0;\n          /**\n           * The size of the labels, scaled to the size of the tree on first draw.\n           *\n           * @type number\n           */\n\n          this.textSize = 7;\n          /**\n           * The font of the labels.\n           *\n           * @type string\n           */\n\n          this.font = 'sans-serif';\n          /**\n           * @type boolean\n           * @default\n           */\n\n          this.unselectOnClickAway = true;\n          /**\n           * X coordinate of node that is furthest from the root.\n           *\n           * @type number\n           */\n\n          this.farthestNodeFromRootX = 0;\n          /**\n           * Y coordinate of node that is furthest from the root.\n           *\n           * @type number\n           */\n\n          this.farthestNodeFromRootY = 0;\n          /**\n           * Require the 'shift' key to be depressed to allow dragging\n           */\n\n          this.shiftKeyDrag = false;\n          /**\n           * Maximum length of label for each tree type.\n           *\n           * @type Object.<string, number>\n           */\n\n          this.maxLabelLength = {}; // Override properties from config\n\n          Object.assign(this, config);\n          this.resizeToContainer();\n          /**\n           * Event listener cache.\n           *\n           * @type object\n           */\n\n          this.eventListeners = {};\n          /**\n           * Default event listeners. Listeners passed in `config.eventListeners` will\n           * overwrite the listener of the same type.\n           */\n\n          var eventListeners = Object.assign({\n            click: {\n              listener: this.clicked.bind(this)\n            },\n            mousedown: {\n              listener: this.pickup.bind(this)\n            },\n            mouseup: {\n              listener: this.drop.bind(this)\n            },\n            mouseout: {\n              listener: this.drop.bind(this)\n            },\n            mousemove: {\n              target: this.canvas.canvas,\n              listener: this.drag.bind(this)\n            },\n            mousewheel: {\n              target: this.canvas.canvas,\n              listener: this.scroll.bind(this)\n            },\n            DOMMouseScroll: {\n              target: this.canvas.canvas,\n              listener: this.scroll.bind(this)\n            },\n            resize: {\n              target: window,\n              listener: function listener() {\n                _this.resizeToContainer();\n\n                _this.draw();\n              }\n            }\n          }, config.eventListeners || {});\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = Object.keys(eventListeners)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var event = _step.value;\n              var _eventListeners$event = eventListeners[event],\n                  listener = _eventListeners$event.listener,\n                  target = _eventListeners$event.target;\n              this.addListener(event, listener, target);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n        /**\n         * Removes events defined in this.eventListeners. Useful for cleaning up.\n         */\n\n\n        _createClass(Tree, [{\n          key: 'removeEventListeners',\n          value: function removeEventListeners() {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = Object.keys(this.eventListeners)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var event = _step2.value;\n                var _iteratorNormalCompletion3 = true;\n                var _didIteratorError3 = false;\n                var _iteratorError3 = undefined;\n\n                try {\n                  for (var _iterator3 = this.eventListeners[event][Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var def = _step3.value;\n                    var target = def.target,\n                        listener = def.listener;\n                    removeEvent(target || this.containerElement, event, listener);\n                  }\n                } catch (err) {\n                  _didIteratorError3 = true;\n                  _iteratorError3 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                      _iterator3.return();\n                    }\n                  } finally {\n                    if (_didIteratorError3) {\n                      throw _iteratorError3;\n                    }\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          }\n          /**\n           * Set/get if labels are currently aligned.\n           *\n           * @type boolean\n           */\n\n        }, {\n          key: 'setInitialCollapsedBranches',\n\n          /**\n           * Collapses branches based on {@link Tree#defaultCollapsed}.\n           *\n           * @param {Branch} [node=this.root]\n           */\n          value: function setInitialCollapsedBranches() {\n            var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;\n            var childIds;\n            var i;\n            childIds = node.getChildProperties('id');\n\n            if (childIds && childIds.length > this.defaultCollapsed.min && childIds.length < this.defaultCollapsed.max) {\n              node.collapsed = true;\n              return;\n            }\n\n            for (i = 0; i < node.children.length; i++) {\n              this.setInitialCollapsedBranches(node.children[i]);\n            }\n          }\n          /**\n           * @param {MouseEvent} event\n           * @returns {Branch}\n           */\n\n        }, {\n          key: 'getNodeAtMousePosition',\n          value: function getNodeAtMousePosition(event) {\n            var _root;\n\n            return (_root = this.root).clicked.apply(_root, _toConsumableArray(translateClick(event, this)));\n          }\n          /**\n           * @returns {Branch[]} Selected leaves\n           */\n\n        }, {\n          key: 'getSelectedNodeIds',\n          value: function getSelectedNodeIds() {\n            return this.getNodeIdsWithFlag('selected');\n          }\n          /**\n           * @param {string} flag - A boolean property of the branch\n           * @param {boolean} [value=true]\n           * @returns {Branch[]}\n           */\n\n        }, {\n          key: 'getNodeIdsWithFlag',\n          value: function getNodeIdsWithFlag(flag) {\n            var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            return this.leaves.reduce(function (memo, leaf) {\n              if (leaf[flag] === value) {\n                memo.push(leaf.id);\n              }\n\n              return memo;\n            }, []);\n          }\n          /**\n           * Event listener for click events.\n           *\n           * @param {MouseEvent} e\n           */\n\n        }, {\n          key: 'clicked',\n          value: function clicked(e) {\n            var node;\n\n            if (e.button === 0) {\n              var nodeIds = []; // if this is triggered by the release after a drag then the click\n              // shouldn't be triggered.\n\n              if (this.dragging) {\n                this.dragging = false;\n                return;\n              }\n\n              if (!this.root) return false;\n              node = this.getNodeAtMousePosition(e);\n              var isMultiSelectActive = this.multiSelect && (e.metaKey || e.ctrlKey);\n\n              if (node && node.interactive) {\n                if (isMultiSelectActive) {\n                  if (node.leaf) {\n                    node[this.clickFlag] = !node[this.clickFlag];\n                  } else if (this.internalNodesSelectable) {\n                    var someUnflagged = node.getChildProperties(this.clickFlag).some(function (prop) {\n                      return prop === false;\n                    });\n                    node.cascadeFlag(this.clickFlag, someUnflagged, this.clickFlagPredicate);\n                  }\n\n                  nodeIds = this.getNodeIdsWithFlag(this.clickFlag);\n                  this.draw();\n                } else {\n                  this.root.cascadeFlag(this.clickFlag, false, this.clickFlagPredicate);\n\n                  if (this.internalNodesSelectable || node.leaf) {\n                    node.cascadeFlag(this.clickFlag, true, this.clickFlagPredicate);\n                    nodeIds = node.getChildProperties('id');\n                  }\n\n                  this.draw();\n                }\n              } else if (this.unselectOnClickAway && !this.dragging && !isMultiSelectActive) {\n                this.root.cascadeFlag(this.clickFlag, false, this.clickFlagPredicate);\n                this.draw();\n              }\n\n              if (!this.pickedup) {\n                this.dragging = false;\n              }\n\n              this.nodesUpdated(nodeIds, this.clickFlag);\n            }\n          }\n          /**\n           * Handles dragging and hovering.\n           *\n           * @param {MouseEvent} event\n           */\n\n        }, {\n          key: 'drag',\n          value: function drag(event) {\n            // get window ratio\n            var ratio = getPixelRatio(this.canvas);\n            if (!this.drawn) return false;\n\n            if (this.pickedup) {\n              var xmove = (event.clientX - this.startx) * ratio;\n              var ymove = (event.clientY - this.starty) * ratio;\n\n              if (Math.abs(xmove) + Math.abs(ymove) > 5) {\n                this.dragging = true;\n                this.offsetx = this.origx + xmove;\n                this.offsety = this.origy + ymove;\n                this.draw();\n              }\n            } else {\n              // hover\n              var e = event;\n              var nd = this.getNodeAtMousePosition(e);\n\n              if (nd && nd.interactive && (this.internalNodesSelectable || nd.leaf)) {\n                this.root.cascadeFlag('hovered', false);\n                nd.hovered = true; // For mouseover tooltip to show no. of children on the internal nodes\n\n                if (!nd.leaf && !nd.hasCollapsedAncestor()) {\n                  this.tooltip.open(e.clientX, e.clientY, nd);\n                }\n\n                this.containerElement.style.cursor = 'pointer';\n              } else {\n                this.tooltip.close();\n                this.root.cascadeFlag('hovered', false);\n\n                if (this.shiftKeyDrag && e.shiftKey) {\n                  setCursorDrag(this.containerElement);\n                } else {\n                  this.containerElement.style.cursor = 'auto';\n                }\n              }\n\n              this.draw();\n            }\n          }\n          /**\n           * Draws the frame.\n           *\n           * @param {boolean} forceRedraw - Also run the prerenderer.\n           */\n\n        }, {\n          key: 'draw',\n          value: function draw(forceRedraw) {\n            this.highlighters.length = 0;\n\n            if (this.maxBranchLength === 0) {\n              this.loadError(new Error('All branches in the tree are identical.'));\n              return;\n            }\n\n            this.canvas.clearRect(0, 0, this.canvas.canvas.width, this.canvas.canvas.height);\n            this.canvas.lineCap = 'round';\n            this.canvas.lineJoin = 'round';\n            this.canvas.strokeStyle = this.branchColour;\n            this.canvas.save();\n\n            if (!this.drawn || forceRedraw) {\n              this.prerenderer.run(this);\n\n              if (!forceRedraw) {\n                this.fitInPanel();\n              }\n            }\n\n            var pixelRatio = getPixelRatio(this.canvas);\n            this.canvas.lineWidth = this.lineWidth / this.zoom;\n            this.canvas.translate(this.offsetx * pixelRatio, this.offsety * pixelRatio);\n            this.canvas.scale(this.zoom, this.zoom);\n            this.branchRenderer.render(this, this.root);\n            this.highlighters.forEach(function (render) {\n              return render();\n            });\n            this.drawn = true;\n            this.canvas.restore();\n          }\n          /**\n           * Mousedown event listener\n           *\n           * @param {MouseEvent} event\n           */\n\n        }, {\n          key: 'pickup',\n          value: function pickup(event) {\n            if (!this.shiftKeyDrag || event.shiftKey) {\n              if (!this.drawn) return false;\n              this.origx = this.offsetx;\n              this.origy = this.offsety;\n\n              if (event.button === 0) {\n                this.pickedup = true;\n                setCursorDragging(this.containerElement);\n              }\n\n              this.startx = event.clientX;\n              this.starty = event.clientY;\n            }\n          }\n          /**\n           * mouseup event listener.\n           */\n\n        }, {\n          key: 'drop',\n          value: function drop(event) {\n            if (!this.drawn) return false;\n            this.pickedup = false;\n\n            if (this.shiftKeyDrag && event.shiftKey) {\n              setCursorDrag(this.containerElement);\n            } else {\n              this.containerElement.style.cursor = 'auto';\n            }\n          }\n          /**\n           * Mousewheel event listener.\n           *\n           * @param event\n           */\n\n        }, {\n          key: 'scroll',\n          value: function scroll(event) {\n            if (this.disableZoom || 'wheelDelta' in event && event.wheelDelta === 0) {\n              return;\n            }\n\n            event.preventDefault();\n            this._point.x = event.offsetX;\n            this._point.y = event.offsetY;\n            var sign = event.detail < 0 || event.wheelDelta > 0 ? 1 : -1;\n\n            if (this.branchScaling && (event.metaKey || event.ctrlKey)) {\n              this.currentBranchScale *= Math.pow(this.branchScalingStep, sign);\n              this.setBranchScale(this.currentBranchScale, this._point);\n            } else {\n              this.smoothZoom(sign, this._point);\n            }\n          }\n          /**\n           * @param {RegExp} pattern\n           * @param {string} [searchProperty=id].\n           * @return {Branch[]}\n           */\n\n        }, {\n          key: 'findLeaves',\n          value: function findLeaves(pattern) {\n            var searchProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'id';\n            var foundLeaves = [];\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n              for (var _iterator4 = this.leaves[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var leaf = _step4.value;\n\n                if (leaf[searchProperty] && leaf[searchProperty].match(pattern)) {\n                  foundLeaves.push(leaf);\n                }\n              }\n            } catch (err) {\n              _didIteratorError4 = true;\n              _iteratorError4 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                  _iterator4.return();\n                }\n              } finally {\n                if (_didIteratorError4) {\n                  throw _iteratorError4;\n                }\n              }\n            }\n\n            return foundLeaves;\n          }\n          /**\n           * @param {Branch[]} leaves\n           * @param {string} property\n           * @param {} value\n           *\n           * @fires Tree#updated\n           */\n\n        }, {\n          key: 'updateLeaves',\n          value: function updateLeaves(leaves, property, value) {\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n              for (var _iterator5 = this.leaves[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var leaf = _step5.value;\n                leaf[property] = !value;\n              }\n            } catch (err) {\n              _didIteratorError5 = true;\n              _iteratorError5 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                  _iterator5.return();\n                }\n              } finally {\n                if (_didIteratorError5) {\n                  throw _iteratorError5;\n                }\n              }\n            }\n\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n              for (var _iterator6 = leaves[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                var _leaf = _step6.value;\n                _leaf[property] = value;\n              }\n            } catch (err) {\n              _didIteratorError6 = true;\n              _iteratorError6 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                  _iterator6.return();\n                }\n              } finally {\n                if (_didIteratorError6) {\n                  throw _iteratorError6;\n                }\n              }\n            }\n\n            this.nodesUpdated(leaves.map(function (_) {\n              return _.id;\n            }), property);\n          }\n          /**\n           * Deselects all branches, implicitly calls {@link Tree#draw}.\n           */\n\n        }, {\n          key: 'clearSelect',\n          value: function clearSelect() {\n            this.root.cascadeFlag('selected', false);\n            this.draw();\n          }\n          /**\n           * @returns {string} Base64-encoded data uri of canvas\n           */\n\n        }, {\n          key: 'getPngUrl',\n          value: function getPngUrl() {\n            return this.canvas.canvas.toDataURL();\n          }\n          /**\n           * Loads a serialised representation of a tree, using the first registered\n           * parser that validates the input unless a format is specified.\n           *\n           * @param {string} inputString\n           * @param {Object} [options] - also passed on to the parser.\n           * @param {string} [options.format] - specify the parser to use.\n           * @param {function} [callback] - Called synchronously *after* the first draw.\n           *\n           * @fires Tree#error\n           *\n           * @see Tree#build\n           */\n\n        }, {\n          key: 'load',\n          value: function load(inputString) {\n            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            var callback = arguments[2];\n            var buildOptions = options;\n            var buildCallback = callback; // allows passing callback as second param\n\n            if (typeof options === 'function') {\n              buildCallback = options;\n              buildOptions = {};\n            }\n\n            if (buildCallback) {\n              buildOptions.callback = buildCallback;\n            }\n\n            if (buildOptions.format) {\n              this.build(inputString, _parsers2.default[buildOptions.format], buildOptions);\n              return;\n            }\n\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n              for (var _iterator7 = Object.keys(_parsers2.default)[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                var parserName = _step7.value;\n                var parser = _parsers2.default[parserName];\n\n                if (inputString.match(parser.fileExtension) || inputString.match(parser.validator)) {\n                  this.build(inputString, parser, buildOptions);\n                  return;\n                }\n              }\n            } catch (err) {\n              _didIteratorError7 = true;\n              _iteratorError7 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                  _iterator7.return();\n                }\n              } finally {\n                if (_didIteratorError7) {\n                  throw _iteratorError7;\n                }\n              }\n            }\n\n            var error = new Error('String not recognised as a file or a parseable format string');\n\n            if (buildCallback) {\n              buildCallback(error);\n            }\n\n            this.loadError(error);\n          }\n          /**\n           * Builds the {@link Tree#originalTree} object.\n           */\n\n        }, {\n          key: 'saveOriginalTree',\n          value: function saveOriginalTree() {\n            this.originalTree.branches = this.branches;\n            this.originalTree.leaves = this.leaves;\n            this.originalTree.root = this.root;\n            this.originalTree.branchLengths = {};\n            this.originalTree.parents = {};\n          }\n          /**\n           * Clears the branches and leaves of the instance.\n           */\n\n        }, {\n          key: 'clearState',\n          value: function clearState() {\n            this.root = false;\n            this.leaves = [];\n            this.branches = {};\n            this.drawn = false;\n          }\n          /**\n           * Build {@link Tree#branches} and {@link Tree#leaves} properties.\n           */\n\n        }, {\n          key: 'extractNestedBranches',\n          value: function extractNestedBranches() {\n            this.branches = {};\n            this.leaves = [];\n            this.storeNode(this.root);\n            this.root.extractChildren();\n          }\n          /**\n           * High-level API to organising branches and leaves.\n           *\n           * @fires Tree#error\n           */\n\n        }, {\n          key: 'saveState',\n          value: function saveState() {\n            this.extractNestedBranches();\n            this.root.branchLength = 0;\n            this.maxBranchLength = 0;\n            this.root.setTotalLength();\n\n            if (this.maxBranchLength === 0) {\n              this.loadError(new Error('All branches in the tree are identical.'));\n              return;\n            }\n          }\n          /**\n           * Builds the object model of a tree.\n           *\n           * @param {string} formatString\n           * @param {Parser} parser\n           * @param {Object} options\n           *\n           * @fires Tree#error\n           * @fires Tree#beforeFirstDraw\n           * @fires Tree#loadCompleted\n           */\n\n        }, {\n          key: 'build',\n          value: function build(formatString, parser, options) {\n            var _this2 = this;\n\n            this.originalTree = {};\n            this.clearState();\n            _Branch2.default.lastId = 0;\n            var root = new _Branch2.default();\n            root.id = 'root';\n            this.branches.root = root;\n            this.setRoot(root);\n            parser.parse({\n              formatString: formatString,\n              root: root,\n              options: options\n            }, function (error) {\n              if (error) {\n                if (options.callback) {\n                  options.callback(error);\n                }\n\n                _this2.loadError(error);\n\n                return;\n              }\n\n              _this2.stringRepresentation = formatString;\n\n              _this2.saveState();\n\n              _this2.setInitialCollapsedBranches();\n\n              _this2.beforeFirstDraw();\n\n              _this2.draw();\n\n              _this2.saveOriginalTree();\n\n              if (options.callback) {\n                options.callback();\n              }\n\n              _this2.loadCompleted();\n            });\n          }\n          /**\n           * Draw a subtree.\n           *\n           * @param {Branch} node - the new root of the tree.\n           *\n           * @fires Tree#subtree\n           */\n\n        }, {\n          key: 'redrawFromBranch',\n          value: function redrawFromBranch(node) {\n            this.clearState();\n            this.resetTree();\n            this.originalTree.branchLengths[node.id] = node.branchLength;\n            this.originalTree.parents[node.id] = node.parent;\n            this.root = node;\n            this.root.parent = false;\n            this.saveState();\n            this.draw();\n            this.subtreeDrawn(node.id);\n          }\n          /**\n           * Reload the serialised version of the tree.\n           */\n\n        }, {\n          key: 'redrawOriginalTree',\n          value: function redrawOriginalTree() {\n            this.load(this.stringRepresentation);\n          }\n          /**\n           * Traverse the tree, generating ids and filing away objects.\n           *\n           * @param {Branch} node - starting point.\n           */\n\n        }, {\n          key: 'storeNode',\n          value: function storeNode(node) {\n            if (!node.id || node.id === '') {\n              node.id = _Branch2.default.generateId();\n            }\n\n            if (this.branches[node.id]) {\n              if (node !== this.branches[node.id]) {\n                if (!node.leaf) {\n                  node.id = _Branch2.default.generateId();\n                } else {\n                  throw new Error('Two nodes on this tree share the id ' + node.id);\n                }\n              }\n            }\n\n            this.branches[node.id] = node;\n\n            if (node.leaf) {\n              this.leaves.push(node);\n            }\n          }\n          /**\n           * @param {number} size\n           */\n\n        }, {\n          key: 'setNodeSize',\n          value: function setNodeSize(size) {\n            this.baseNodeSize = Number(size);\n            this.draw();\n          }\n          /**\n           * @param {Branch} node\n           */\n\n        }, {\n          key: 'setRoot',\n          value: function setRoot(node) {\n            node.tree = this;\n            this.root = node;\n          }\n          /**\n           * @param {number|string} size\n           */\n\n        }, {\n          key: 'setTextSize',\n          value: function setTextSize(size) {\n            this.textSize = Number(size);\n            this.draw();\n          }\n          /**\n           * Sets an appropriate font size for the proportions of the tree.\n           *\n           * @param {number} ystep - the space between leaves.\n           */\n\n        }, {\n          key: 'setFontSize',\n          value: function setFontSize(ystep) {\n            this.textSize = this.calculateFontSize ? this.calculateFontSize(ystep) : Math.min(ystep / 2, 15);\n            this.canvas.font = this.textSize + 'pt ' + this.font;\n          }\n          /**\n           * @param {string} type - The name of a registered tree type.\n           * @param {boolean} [quiet] - Do not broadcast.\n           *\n           * @fires Tree#typechanged\n           */\n\n        }, {\n          key: 'setTreeType',\n          value: function setTreeType(type, quiet) {\n            if (!(type in _treeTypes2.default)) {\n              return fireEvent(this.containerElement, 'error', {\n                error: new Error('\"' + type + '\" is not a known tree-type.')\n              });\n            }\n\n            var oldType = this.treeType;\n            this.treeType = type;\n            this.type = _treeTypes2.default[type];\n            this.branchRenderer = _treeTypes2.default[type].branchRenderer;\n            this.prerenderer = _treeTypes2.default[type].prerenderer;\n            this.labelAlign = _treeTypes2.default[type].labelAlign;\n            this.calculateFontSize = _treeTypes2.default[type].calculateFontSize;\n\n            if (this.drawn) {\n              this.drawn = false;\n              this.draw();\n            }\n\n            if (!quiet) {\n              this.treeTypeChanged(oldType, type);\n            }\n          }\n          /**\n           * Resizes the canvas element.\n           *\n           * @param {number} width\n           * @param {number} height\n           */\n\n        }, {\n          key: 'setSize',\n          value: function setSize(width, height) {\n            this.canvas.canvas.width = width;\n            this.canvas.canvas.height = height;\n\n            if (this.navigator) {\n              this.navigator.resize();\n            }\n\n            this.adjustForPixelRatio();\n          }\n          /**\n           * Scale the size of the canvas element to the pixel ratio\n           */\n\n        }, {\n          key: 'adjustForPixelRatio',\n          value: function adjustForPixelRatio() {\n            var ratio = getPixelRatio(this.canvas);\n            this.canvas.canvas.style.height = this.canvas.canvas.height + 'px';\n            this.canvas.canvas.style.width = this.canvas.canvas.width + 'px';\n\n            if (ratio > 1) {\n              this.canvas.canvas.width *= ratio;\n              this.canvas.canvas.height *= ratio;\n            }\n          }\n          /**\n           * @returns {{ x: number, y: number }} point w/ x and y coordinates\n           */\n\n        }, {\n          key: 'getCentrePoint',\n          value: function getCentrePoint() {\n            var pixelRatio = getPixelRatio(this.canvas);\n            return {\n              x: this.canvas.canvas.width / 2 / pixelRatio,\n              y: this.canvas.canvas.height / 2 / pixelRatio\n            };\n          }\n          /**\n           * Zoom to a specific level over a specific point.\n           *\n           * @param {number} zoom\n           * @param {{ x: number, y: number }} [point=Tree#getCentrePoint]\n           */\n\n        }, {\n          key: 'setZoom',\n          value: function setZoom(zoom) {\n            var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getCentrePoint(),\n                x = _ref.x,\n                y = _ref.y;\n\n            if (zoom > 0) {\n              var oldZoom = this.zoom;\n              this.zoom = zoom;\n              this.offsetx = this.calculateZoomedOffset(this.offsetx, x, oldZoom, zoom);\n              this.offsety = this.calculateZoomedOffset(this.offsety, y, oldZoom, zoom);\n              this.draw();\n            }\n          }\n          /**\n           * Zoom in or out from the current zoom level towards a point.\n           *\n           * @param {number} steps - positive to zoom in, negative to zoom out.\n           * @param {{ x: number, y: number }} point\n           */\n\n        }, {\n          key: 'smoothZoom',\n          value: function smoothZoom(steps, point) {\n            this.setZoom(Math.pow(10, Math.log(this.zoom) / Math.log(10) + steps * this.zoomFactor * 0.01), point);\n          }\n          /**\n           * Magic to enable zooming to a point.\n           *\n           * @author Khalil Abudahab\n           * @param {number} offset\n           * @param {number} coord\n           * @param {number} oldZoom\n           * @param {number} newZoom\n           */\n\n        }, {\n          key: 'calculateZoomedOffset',\n          value: function calculateZoomedOffset(offset, coord, oldZoom, newZoom) {\n            return -1 * ((-1 * offset + coord) / oldZoom * newZoom - coord);\n          }\n          /**\n           * Scale branches horizontally\n           *\n           * @param {number} scale\n           * @param {Object} point\n           */\n\n        }, {\n          key: 'setBranchScale',\n          value: function setBranchScale() {\n            var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            var point = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n              x: this.canvas.canvas.width / 2,\n              y: this.canvas.canvas.height / 2\n            };\n            var treeType = _treeTypes2.default[this.treeType];\n\n            if (!treeType.branchScalingAxis || scale < 0) {\n              return;\n            }\n\n            var previoudBranchLength = this.branchScalar;\n            this.branchScalar = this.initialBranchScalar * scale;\n            var scaleRatio = this.branchScalar / previoudBranchLength;\n            var offset = this['offset' + treeType.branchScalingAxis];\n            var oldPosition = point[treeType.branchScalingAxis];\n            var newPosition = (point[treeType.branchScalingAxis] - offset) * scaleRatio + offset;\n            this['offset' + treeType.branchScalingAxis] += oldPosition - newPosition;\n            this.draw();\n          }\n          /**\n           * @method\n           */\n\n        }, {\n          key: 'toggleLabels',\n          value: function toggleLabels() {\n            this.showLabels = !this.showLabels;\n            this.draw();\n          }\n          /**\n           * @method\n           */\n\n        }, {\n          key: 'setMaxLabelLength',\n          value: function setMaxLabelLength() {\n            var dimensions;\n\n            if (this.maxLabelLength[this.treeType] === undefined) {\n              this.maxLabelLength[this.treeType] = 0;\n            }\n\n            for (var i = 0; i < this.leaves.length; i++) {\n              dimensions = this.canvas.measureText(this.leaves[i].id); // finding the maximum label length\n\n              if (dimensions.width > this.maxLabelLength[this.treeType]) {\n                this.maxLabelLength[this.treeType] = dimensions.width;\n              }\n            }\n          }\n          /**\n           * @event Tree#loading\n           */\n\n        }, {\n          key: 'loadStarted',\n          value: function loadStarted() {\n            fireEvent(this.containerElement, 'loading');\n          }\n          /**\n           * @event Tree#beforeFirstDraw\n           */\n\n        }, {\n          key: 'beforeFirstDraw',\n          value: function beforeFirstDraw() {\n            fireEvent(this.containerElement, 'beforeFirstDraw');\n          }\n          /**\n           * @event Tree#loaded\n           */\n\n        }, {\n          key: 'loadCompleted',\n          value: function loadCompleted() {\n            fireEvent(this.containerElement, 'loaded');\n          }\n          /**\n           * @event Tree#error\n           * @property {Error} error\n           */\n\n        }, {\n          key: 'loadError',\n          value: function loadError(error) {\n            fireEvent(this.containerElement, 'error', {\n              error: error\n            });\n          }\n          /**\n           * @event Tree#subtree\n           * @property {Branch} node\n           */\n\n        }, {\n          key: 'subtreeDrawn',\n          value: function subtreeDrawn(node) {\n            fireEvent(this.containerElement, 'subtree', {\n              node: node\n            });\n          }\n          /**\n           * @event Tree#updated\n           * @property {string[]} nodeIds\n           * @property {string} property\n           * @property {boolean} append\n           */\n\n        }, {\n          key: 'nodesUpdated',\n          value: function nodesUpdated(nodeIds, property) {\n            var append = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            fireEvent(this.containerElement, 'updated', {\n              nodeIds: nodeIds,\n              property: property,\n              append: append\n            });\n          }\n          /**\n           * @event Tree#typechanged\n           * @property {string} oldType\n           * @property {string} newType\n           */\n\n        }, {\n          key: 'treeTypeChanged',\n          value: function treeTypeChanged(oldType, newType) {\n            fireEvent(this.containerElement, 'typechanged', {\n              oldType: oldType,\n              newType: newType\n            });\n          }\n          /**\n           * @param {string}\n           * @param {function}\n           */\n\n        }, {\n          key: 'addListener',\n          value: function addListener(event, listener, target) {\n            if (!this.eventListeners[event]) this.eventListeners[event] = [];\n            this.eventListeners[event].push({\n              listener: listener,\n              target: target\n            });\n            addEvent(target || this.containerElement, event, listener);\n          }\n          /**\n           * @param {string}\n           * @param {function}\n           */\n\n        }, {\n          key: 'removeListener',\n          value: function removeListener(event, listener, target) {\n            removeEvent(target || this.containerElement, event, listener);\n          }\n          /**\n           * @param {Array.<Branch>} [leaves=this.leaves]\n           *\n           * @returns {Array.<Array.<number>>} bounds - Minimum x and y coordinates in\n           * the first array, maximum x and y coordinates in the second.\n           *\n           * @example const [ [ minx, miny ], [ maxx, maxy ] ] = tree.getBounds()\n           */\n\n        }, {\n          key: 'getBounds',\n          value: function getBounds() {\n            var leaves = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.leaves; // this.leaves assumes bounds of whole tree, start from root\n\n            var initialBounds = leaves === this.leaves ? this.root : leaves[0];\n            var minx = initialBounds.startx;\n            var maxx = initialBounds.startx;\n            var miny = initialBounds.starty;\n            var maxy = initialBounds.starty;\n            var _iteratorNormalCompletion8 = true;\n            var _didIteratorError8 = false;\n            var _iteratorError8 = undefined;\n\n            try {\n              for (var _iterator8 = leaves[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n                var leaf = _step8.value;\n                var bounds = leaf.getBounds();\n                minx = Math.min(minx, bounds.minx);\n                maxx = Math.max(maxx, bounds.maxx);\n                miny = Math.min(miny, bounds.miny);\n                maxy = Math.max(maxy, bounds.maxy);\n              }\n            } catch (err) {\n              _didIteratorError8 = true;\n              _iteratorError8 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                  _iterator8.return();\n                }\n              } finally {\n                if (_didIteratorError8) {\n                  throw _iteratorError8;\n                }\n              }\n            }\n\n            return [[minx, miny], [maxx, maxy]];\n          }\n          /**\n           * Zoom to the provided leaves.\n           *\n           * @param {Array.<Branch>}\n           */\n\n        }, {\n          key: 'fitInPanel',\n          value: function fitInPanel(leaves) {\n            this.zoom = 1; // calculates consistent bounds\n\n            var bounds = this.getBounds(leaves);\n            var canvasSize = [this.canvas.canvas.width - this.padding * 2, this.canvas.canvas.height - this.padding * 2];\n            var treeSize = [bounds[1][0] - bounds[0][0], bounds[1][1] - bounds[0][1]];\n            var pixelRatio = getPixelRatio(this.canvas);\n            var xZoomRatio = canvasSize[0] / treeSize[0];\n            var yZoomRatio = canvasSize[1] / treeSize[1];\n            this.zoom = Math.min(xZoomRatio, yZoomRatio);\n            this.offsetx = -1 * bounds[0][0] * this.zoom;\n            this.offsety = -1 * bounds[0][1] * this.zoom;\n\n            if (xZoomRatio > yZoomRatio) {\n              this.offsetx += this.padding + (canvasSize[0] - treeSize[0] * this.zoom) / 2;\n              this.offsety += this.padding;\n            } else {\n              this.offsetx += this.padding;\n              this.offsety += this.padding + (canvasSize[1] - treeSize[1] * this.zoom) / 2;\n            }\n\n            this.offsetx = this.offsetx / pixelRatio;\n            this.offsety = this.offsety / pixelRatio;\n          }\n          /**\n           * Reapply data in {@link Tree#originalTree}.\n           */\n\n        }, {\n          key: 'resetTree',\n          value: function resetTree() {\n            if (!this.originalTree.branches) return;\n            this.branches = this.originalTree.branches;\n            var _iteratorNormalCompletion9 = true;\n            var _didIteratorError9 = false;\n            var _iteratorError9 = undefined;\n\n            try {\n              for (var _iterator9 = Object.keys(this.originalTree.branchLengths)[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                var n = _step9.value;\n                this.branches[n].branchLength = this.originalTree.branchLengths[n];\n                this.branches[n].parent = this.originalTree.parents[n];\n              }\n            } catch (err) {\n              _didIteratorError9 = true;\n              _iteratorError9 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion9 && _iterator9.return) {\n                  _iterator9.return();\n                }\n              } finally {\n                if (_didIteratorError9) {\n                  throw _iteratorError9;\n                }\n              }\n            }\n\n            this.leaves = this.originalTree.leaves;\n            this.root = this.originalTree.root;\n          }\n          /**\n           * @param {Branch}\n           */\n\n        }, {\n          key: 'rotateBranch',\n          value: function rotateBranch(branch) {\n            this.branches[branch.id].rotate();\n          }\n          /**\n           * @returns {string} Newick representation of current object model.\n           */\n\n        }, {\n          key: 'exportNwk',\n          value: function exportNwk() {\n            var nwk = this.root.getNwk();\n            return nwk.substr(0, nwk.lastIndexOf(')') + 1) + ';';\n          }\n          /**\n           * Resize canvas element to container.\n           */\n\n        }, {\n          key: 'resizeToContainer',\n          value: function resizeToContainer() {\n            this.setSize(this.containerElement.offsetWidth, this.containerElement.offsetHeight);\n          }\n          /**\n           * Removes tracked event listeners and provides a hook for plugins to clean up\n           * after themselves.\n           */\n\n        }, {\n          key: 'cleanup',\n          value: function cleanup() {\n            this.removeEventListeners();\n          }\n        }, {\n          key: 'alignLabels',\n          get: function get() {\n            return this.showLabels && this.labelAlign && this.labelAlignEnabled;\n          },\n          set: function set(value) {\n            this.labelAlignEnabled = value;\n          }\n        }]);\n\n        return Tree;\n      }();\n      /**\n       * @memberof Tree\n       * @method\n       * @see Tree#addListener\n       */\n\n\n      Tree.prototype.on = Tree.prototype.addListener;\n      /**\n       * @memberof Tree\n       * @method\n       * @see Tree#removeListener\n       */\n\n      Tree.prototype.off = Tree.prototype.removeListener;\n      exports.default = Tree;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.events = exports.dom = exports.constants = exports.canvas = undefined;\n\n      var _canvas2 = __webpack_require__(3);\n\n      var _canvas = _interopRequireWildcard(_canvas2);\n\n      var _constants2 = __webpack_require__(6);\n\n      var _constants = _interopRequireWildcard(_constants2);\n\n      var _dom2 = __webpack_require__(4);\n\n      var _dom = _interopRequireWildcard(_dom2);\n\n      var _events2 = __webpack_require__(5);\n\n      var _events = _interopRequireWildcard(_events2);\n\n      function _interopRequireWildcard(obj) {\n        if (obj && obj.__esModule) {\n          return obj;\n        } else {\n          var newObj = {};\n\n          if (obj != null) {\n            for (var key in obj) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n          }\n\n          newObj.default = obj;\n          return newObj;\n        }\n      }\n\n      exports.canvas = _canvas;\n      exports.constants = _constants;\n      exports.dom = _dom;\n      exports.events = _events;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getBackingStorePixelRatio = getBackingStorePixelRatio;\n      exports.getPixelRatio = getPixelRatio;\n      exports.translateClick = translateClick;\n      exports.translatePoint = translatePoint;\n      exports.undoPointTranslation = undoPointTranslation;\n\n      var _dom = __webpack_require__(4);\n      /**\n       * Return backing store pixel ratio of context.\n       *\n       * @param context - The rendering context of HTMl5 canvas.\n       *\n       */\n\n\n      function getBackingStorePixelRatio(context) {\n        return context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || 1;\n      }\n\n      function getPixelRatio(canvas) {\n        return (window.devicePixelRatio || 1) / getBackingStorePixelRatio(canvas);\n      }\n\n      function translateClick(event, tree) {\n        var pixelRatio = getPixelRatio(tree.canvas);\n        return [(event.offsetX - tree.offsetx) / tree.zoom * pixelRatio, (event.offsetY - tree.offsety) / tree.zoom * pixelRatio];\n      }\n\n      function translatePoint() {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          x: 0,\n          y: 0\n        },\n            x = _ref.x,\n            y = _ref.y;\n\n        var phylocanvas = arguments[1];\n        var pixelRatio = getPixelRatio(phylocanvas.canvas);\n        return {\n          x: (x - phylocanvas.offsetx) / phylocanvas.zoom * pixelRatio,\n          y: (y - phylocanvas.offsety) / phylocanvas.zoom * pixelRatio\n        };\n      }\n\n      function undoPointTranslation() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          x: 0,\n          y: 0\n        },\n            x = _ref2.x,\n            y = _ref2.y;\n\n        var phylocanvas = arguments[1];\n        var pixelRatio = getPixelRatio(phylocanvas.canvas);\n        return {\n          x: x / pixelRatio * phylocanvas.zoom + phylocanvas.offsetx,\n          y: y / pixelRatio * phylocanvas.zoom + phylocanvas.offsety\n        };\n      }\n      /***/\n\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.createBlobUrl = createBlobUrl;\n      exports.setupDownloadLink = setupDownloadLink;\n      exports.getX = getX;\n      exports.getY = getY;\n      exports.addClass = addClass;\n      exports.removeClass = removeClass;\n      exports.hasClass = hasClass;\n      exports.setCursorDragging = setCursorDragging;\n      exports.setCursorDrag = setCursorDrag;\n\n      var _events = __webpack_require__(5);\n\n      var windowURL = window.URL || window.webkitURL;\n\n      function createBlobUrl(data) {\n        var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text/plain;charset=utf-8';\n        var blob = new Blob([data], {\n          type: type\n        });\n        return windowURL.createObjectURL(blob);\n      }\n\n      function setupDownloadLink(url, filename) {\n        var anchor = document.createElement('a');\n        var isDownloadSupported = typeof anchor.download !== 'undefined';\n        anchor.href = url;\n        anchor.target = '_blank';\n\n        if (isDownloadSupported) {\n          anchor.download = filename;\n        }\n\n        (0, _events.fireEvent)(anchor, 'click');\n\n        if (isDownloadSupported) {\n          windowURL.revokeObjectURL(anchor.href);\n        }\n      }\n      /**\n       * Get the x coordinate of oElement\n       *\n       * @param domElement - The element to get the X position of.\n       *\n       */\n\n\n      function getX(domElement) {\n        var xValue = 0;\n\n        while (domElement) {\n          xValue += domElement.offsetLeft;\n          domElement = domElement.offsetParent;\n        }\n\n        return xValue;\n      }\n      /**\n       * Get the y coordinate of oElement\n       *\n       * @param domElement - The element to get the Y position of.\n       *\n       */\n\n\n      function getY(domElement) {\n        var yValue = 0;\n\n        while (domElement) {\n          yValue += domElement.offsetTop;\n          domElement = domElement.offsetParent;\n        }\n\n        return yValue;\n      }\n\n      function addClass(element, className) {\n        var classes = element.className.split(' ');\n\n        if (classes.indexOf(className) === -1) {\n          classes.push(className);\n          element.className = classes.join(' ');\n        }\n      }\n\n      function removeClass(element, className) {\n        var classes = element.className.split(' ');\n        var index = classes.indexOf(className);\n\n        if (index !== -1) {\n          classes.splice(index, 1);\n          element.className = classes.join(' ');\n        }\n      }\n\n      function hasClass(element, className) {\n        var classes = element.className.split(' ');\n        var index = classes.indexOf(className);\n        return index !== -1;\n      }\n      /**\n       * Setting the cursor to dragging required vendor prefixes.\n       * @param domElement\n       */\n\n\n      function setCursorDragging(domElement) {\n        domElement.style.cursor = \"-webkit-grabbing\";\n        domElement.style.cursor = \"-moz-grabbing\";\n        domElement.style.cursor = \"grabbing\";\n      }\n      /**\n       * Setting the cursor to drag required vendor prefixes.\n       * @param domElement\n       */\n\n\n      function setCursorDrag(domElement) {\n        domElement.style.cursor = \"-webkit-grab\";\n        domElement.style.cursor = \"-moz-grab\";\n        domElement.style.cursor = \"grab\";\n      }\n      /***/\n\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n\n      exports.preventDefault = preventDefault;\n      exports.fireEvent = fireEvent;\n      exports.addEvent = addEvent;\n      exports.removeEvent = removeEvent;\n      exports.killEvent = killEvent;\n      exports.createHandler = createHandler;\n\n      function preventDefault(event) {\n        event.preventDefault();\n        return false;\n      }\n\n      function fireEvent(element, type) {\n        var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var event; // The custom event that will be created\n\n        var param;\n\n        if (document.createEvent) {\n          event = document.createEvent('HTMLEvents');\n          event.initEvent(type, true, true);\n        } else {\n          event = document.createEventObject();\n          event.eventType = type;\n        }\n\n        event.eventName = type;\n\n        for (param in params) {\n          if (params.hasOwnProperty(param)) {\n            event[param] = params[param];\n          }\n        }\n\n        if (document.createEvent) {\n          element.dispatchEvent(event);\n        } else {\n          element.fireEvent('on' + event.eventType, event);\n        }\n      }\n\n      function addEvent(elem, event, fn) {\n        if (elem.addEventListener) {\n          elem.addEventListener(event, fn, false);\n        } else {\n          elem.attachEvent('on' + event, function () {\n            // set the this pointer same as addEventListener when fn is called\n            return fn.call(elem, window.event);\n          });\n        }\n      }\n\n      function removeEvent(elem, event, fn) {\n        if (elem.removeEventListener) {\n          elem.removeEventListener(event, fn, false);\n        } else {\n          console.warn('[Phylocanvas] Unable to remove event, removeEventListener not supported');\n        }\n      }\n\n      function killEvent(e) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      /**\n       * Creates a function which can be called from an event handler independent of\n       * scope.\n       *\n       * @param {Object} obj the object the function will be called on\n       * @param {String} func the name of the function to be called\n       * @retuns {function}\n       */\n\n\n      function createHandler(obj, func) {\n        var handler;\n\n        if ((typeof func === 'undefined' ? 'undefined' : _typeof(func)) === _typeof('aaa')) {\n          handler = function handler(e) {\n            if (obj[func]) {\n              return obj[func](e);\n            }\n          };\n        } else {\n          handler = function handler() {\n            return func(obj);\n          };\n        }\n\n        return handler;\n      }\n      /***/\n\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      /**\n       * An enumeration of certain pre-defined angles to enable faster drawing of\n       * trees. There are FORTYFIVE, QUARTER, HALF and FULL. Values are all radians.\n       *\n       * @enum\n       * @memberof PhyloCanvas\n       * @constant\n       */\n\n      var Angles = exports.Angles = {\n        /**\n         * @constant\n         * @type double\n         * @description PI / 4\n         */\n        FORTYFIVE: Math.PI / 4,\n\n        /**\n         * @constant\n         * @type double\n         * @description PI / 2\n         */\n        QUARTER: Math.PI / 2,\n\n        /**\n         * @constant\n         * @type double\n         * @description PI\n         */\n        HALF: Math.PI,\n\n        /**\n         * @constant\n         * @type double\n         * @description PI * 2\n         */\n        FULL: 2 * Math.PI\n      };\n      /**\n       * dictionary to translate newick annotations to branch renderer ids\n       *\n       * @enum\n       * @memberof PhyloCanvas\n       * @constant\n       */\n\n      var Shapes = exports.Shapes = {\n        x: 'star',\n        s: 'square',\n        o: 'circle',\n        t: 'triangle'\n      };\n      /**\n       * Standard set of predicates.\n       *\n       * @enum\n       * @constant\n       */\n\n      var Predicates = exports.Predicates = {\n        tautology: function tautology() {\n          return true;\n        },\n        contradiction: function contradiction() {\n          return false;\n        },\n        leafOnly: function leafOnly(node) {\n          return node.leaf;\n        },\n        nonLeaf: function nonLeaf(node) {\n          return !node.leaf;\n        }\n      };\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _utils = __webpack_require__(2);\n\n      var _treeTypes = __webpack_require__(8);\n\n      var _treeTypes2 = _interopRequireDefault(_treeTypes);\n\n      var _nodeRenderers = __webpack_require__(26);\n\n      var _nodeRenderers2 = _interopRequireDefault(_nodeRenderers);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var Angles = _utils.constants.Angles,\n          Shapes = _utils.constants.Shapes; // Caching object to reduce garbage\n\n      var _bounds = {\n        minx: 0,\n        maxx: 0,\n        miny: 0,\n        maxy: 0\n      };\n      var _leafStyle = {\n        lineWidth: null,\n        strokeStyle: null,\n        fillStyle: null\n      };\n      /**\n       * A branch of the tree.\n       *\n       * @class\n       */\n\n      var Branch = function () {\n        function Branch() {\n          _classCallCheck(this, Branch);\n          /**\n           * The branch's angle clockwise from horizontal in radians (used paricularly\n           * for circular and radial trees).\n           *\n           * @type number\n           */\n\n\n          this.angle = 0;\n          /**\n           * The length of the branch.\n           *\n           * @type number\n           */\n\n          this.branchLength = 0;\n          /**\n           * The center of the end of the node on the x axis.\n           *\n           * @type number\n           */\n\n          this.centerx = 0;\n          /**\n           * The center of the end of the node on the y axis.\n           *\n           * @type number\n           */\n\n          this.centery = 0;\n          /**\n           * The branches that stem from this branch.\n           *\n           * @type Branch[]\n           */\n\n          this.children = [];\n          /**\n           * True if the node has been collapsed.\n           *\n           * @type boolean\n           * @default\n           */\n\n          this.collapsed = false;\n          /**\n           * Custom colour for branch, initialised as null to use tree-level default.\n           *\n           * @type string\n           */\n\n          this.colour = null;\n          /**\n           * Holds custom data for this node.\n           *\n           * @type object\n           */\n\n          this.data = {};\n          /**\n           * This node's highlight status.\n           *\n           * @type boolean\n           * @default\n           */\n\n          this.highlighted = false;\n          /**\n           * Whether the user is hovering over the node.\n           *\n           * @type boolean\n           */\n\n          this.hovered = false;\n          /**\n           * This node's unique ID.\n           *\n           * @type string\n           */\n\n          this.id = '';\n          /**\n           * The text label for this node.\n           *\n           * @type string\n           */\n\n          this.label = null;\n          /**\n           * If true, this node has no children.\n           *\n           * @type boolean\n           * @default\n           */\n\n          this.leaf = true;\n          /**\n           * The angle that the last child of this brach 'splays' at, used for\n           * circular trees.\n           *\n           * @type number\n           * @default\n           */\n\n          this.maxChildAngle = 0;\n          /**\n           * The angle that the last child of this brach 'splays' at, used for\n           * circular trees.\n           *\n           * @type number\n           * @default\n           */\n\n          this.minChildAngle = Angles.FULL;\n          /**\n           * What kind of teminal should be drawn on this node.\n           *\n           * @type string\n           * @default\n           */\n\n          this.nodeShape = 'circle';\n          /**\n           * The parent branch of this branch.\n           *\n           * @type Branch\n           */\n\n          this.parent = null;\n          /**\n           * The relative size of the terminal of this node.\n           *\n           * @type number\n           * @default\n           */\n\n          this.radius = 1.0;\n          /**\n           * True if this branch is currently selected.\n           *\n           * @type boolean\n           */\n\n          this.selected = false;\n          /**\n           * The x position of the start of the branch.\n           *\n           * @type number\n           */\n\n          this.startx = 0;\n          /**\n           * The y position of the start of the branch.\n           *\n           * @type number\n           */\n\n          this.starty = 0;\n          /**\n           * The length from the root of the tree to the tip of this branch.\n           *\n           * @type number\n           */\n\n          this.totalBranchLength = 0;\n          /**\n           * The tree object that this branch is part of.\n           *\n           * @type Tree\n           */\n\n          this.tree = null;\n          /**\n           * If true, this branch is not rendered.\n           *\n           * @type boolean\n           * @default\n           */\n\n          this.pruned = false;\n          /**\n           * Allows label to be individually styled.\n           *\n           * @type object\n           * @property {string} colour\n           * @property {number} textSize\n           * @property {string} font\n           * @property {string} format - e.g. bold, italic\n           */\n\n          this.labelStyle = {};\n          /**\n           * Allows label to be individually styled.\n           *\n           * @type object\n           * @property {string} colour\n           * @property {number} textSize\n           * @property {string} font\n           * @property {string} format - e.g. bold, italic\n           */\n\n          this.internalLabelStyle = null;\n          /**\n           * If false, branch does not respond to mouse events.\n           *\n           * @type boolean\n           * @default\n           */\n\n          this.interactive = true;\n          /**\n           * Defines leaf style for this branch.\n           *\n           * @type object\n           * @property {number} lineWidth\n           * @property {string} strokeStyle\n           * @property {string} fillStyle\n           *\n           * @example\n           * branch.leafStyle = {\n           *   lineWidth: 2,\n           *   strokeStyle: '#ff0000',\n           *   fillStyle: 'blue'\n           * };\n           */\n\n          this.leafStyle = {};\n          /**\n           * Minimum x coordintate.\n           *\n           * @type number\n           */\n\n          this.minx = 0;\n          /**\n           * Minimum y coordintate.\n           *\n           * @type number\n           */\n\n          this.miny = 0;\n          /**\n           * Maximum x coordintate.\n           *\n           * @type number\n           */\n\n          this.maxx = 0;\n          /**\n           * Maximum y coordintate.\n           *\n           * @type number\n           */\n\n          this.maxy = 0;\n        }\n        /**\n         * For branches without a label.\n         *\n         * @returns {string} new ID\n         */\n\n\n        _createClass(Branch, [{\n          key: 'clicked',\n\n          /**\n           * Determines if this branch has been clicked.\n           *\n           * @param {number}\n           * @param {number}\n           * @returns {Branch}\n           */\n          value: function clicked(x, y) {\n            if (this.dragging || this.hasCollapsedAncestor()) {\n              return null;\n            }\n\n            if (x < this.maxx && x > this.minx && y < this.maxy && y > this.miny) {\n              return this;\n            }\n\n            for (var i = this.children.length - 1; i >= 0; i--) {\n              var child = this.children[i].clicked(x, y);\n\n              if (child) {\n                return child;\n              }\n            }\n          }\n          /**\n           * @method\n           */\n\n        }, {\n          key: 'drawLabel',\n          value: function drawLabel() {\n            var fSize = this.getTextSize();\n            var label = this.getLabel();\n            this.canvas.font = this.getFontString();\n            this.labelWidth = this.canvas.measureText(label).width; // finding the maximum label length\n\n            if (this.tree.maxLabelLength[this.tree.treeType] === undefined) {\n              this.tree.maxLabelLength[this.tree.treeType] = 0;\n            }\n\n            if (this.labelWidth > this.tree.maxLabelLength[this.tree.treeType]) {\n              this.tree.maxLabelLength[this.tree.treeType] = this.labelWidth;\n            }\n\n            var tx = this.getLabelStartX();\n\n            if (this.tree.alignLabels) {\n              tx += Math.abs(this.tree.labelAlign.getLabelOffset(this));\n            }\n\n            if (this.angle > Angles.QUARTER && this.angle < Angles.HALF + Angles.QUARTER) {\n              this.canvas.rotate(Angles.HALF); // Angles.Half text position changes\n\n              tx = -tx - this.labelWidth * 1;\n            }\n\n            this.canvas.beginPath();\n            this.canvas.fillStyle = this.getTextColour();\n            this.canvas.fillText(label, tx, fSize / 2);\n            this.canvas.closePath(); // Rotate canvas back to original position\n\n            if (this.angle > Angles.QUARTER && this.angle < Angles.HALF + Angles.QUARTER) {\n              this.canvas.rotate(Angles.HALF);\n            }\n          }\n          /**\n           * Sets the minimum and maximum coordinates of the branch.\n           *\n           * @param {number}\n           * @param {number}\n           * @param {number}\n           */\n\n        }, {\n          key: 'setNodeDimensions',\n          value: function setNodeDimensions(centerX, centerY, radius) {\n            var boundedRadius = radius;\n\n            if (radius * this.tree.zoom < 5 || !this.leaf) {\n              boundedRadius = 5 / this.tree.zoom;\n            }\n\n            this.minx = centerX - boundedRadius;\n            this.maxx = centerX + boundedRadius;\n            this.miny = centerY - boundedRadius;\n            this.maxy = centerY + boundedRadius;\n          }\n        }, {\n          key: 'getNumberOfLeaves',\n          value: function getNumberOfLeaves() {\n            var numberOfLeaves = 0;\n            var queue = [this];\n\n            while (queue.length) {\n              var node = queue.pop();\n\n              if (node.leaf) {\n                numberOfLeaves++;\n              } else {\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                  for (var _iterator = node.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var child = _step.value;\n                    queue.push(child);\n                  }\n                } catch (err) {\n                  _didIteratorError = true;\n                  _iteratorError = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                      _iterator.return();\n                    }\n                  } finally {\n                    if (_didIteratorError) {\n                      throw _iteratorError;\n                    }\n                  }\n                }\n              }\n            }\n\n            return numberOfLeaves;\n          }\n          /**\n           * Draws the \"collapsed tip\".\n           *\n           * @param {number}\n           * @param {number}\n           */\n\n        }, {\n          key: 'drawCollapsed',\n          value: function drawCollapsed(centerX, centerY) {\n            var getCollapsedMeasurements = _treeTypes2.default[this.tree.treeType].getCollapsedMeasurements;\n            this.canvas.beginPath();\n\n            var _getCollapsedMeasurem = getCollapsedMeasurements(this),\n                angle = _getCollapsedMeasurem.angle,\n                radius = _getCollapsedMeasurem.radius;\n\n            var startAngle = this.angle - angle / 2;\n            var endAngle = this.angle + angle / 2;\n            this.canvas.moveTo(centerX, centerY);\n            this.canvas.arc(centerX, centerY, radius, startAngle, endAngle, false);\n            var gradient = this.canvas.createRadialGradient(centerX, centerY, radius, centerX, centerY, 0.2 * radius);\n            gradient.addColorStop(0, 'rgba(255, 255, 255, 0)');\n            gradient.addColorStop(1, this.tree.collapsedColour || this.getColour());\n            this.canvas.fillStyle = gradient;\n            this.canvas.fill();\n            this.canvas.closePath();\n          }\n          /**\n           * For aligned labels.\n           *\n           * @method\n           */\n\n        }, {\n          key: 'drawLabelConnector',\n          value: function drawLabelConnector() {\n            var _tree = this.tree,\n                highlightColour = _tree.highlightColour,\n                labelAlign = _tree.labelAlign;\n            this.canvas.save();\n            this.canvas.lineWidth = this.canvas.lineWidth / 4;\n            this.canvas.strokeStyle = this.isHighlighted ? highlightColour : this.getColour();\n            this.canvas.beginPath();\n            this.canvas.moveTo(this.getRadius(), 0);\n            this.canvas.lineTo(labelAlign.getLabelOffset(this) + this.getDiameter(), 0);\n            this.canvas.stroke();\n            this.canvas.closePath();\n            this.canvas.restore();\n          }\n          /**\n           * @method\n           */\n\n        }, {\n          key: 'drawLeaf',\n          value: function drawLeaf() {\n            var _tree2 = this.tree,\n                alignLabels = _tree2.alignLabels,\n                canvas = _tree2.canvas;\n\n            if (alignLabels) {\n              this.drawLabelConnector();\n            }\n\n            canvas.save();\n\n            _nodeRenderers2.default[this.nodeShape](canvas, this.getRadius(), this.getLeafStyle());\n\n            canvas.restore();\n\n            if (this.tree.showLabels || this.tree.hoverLabel && this.isHighlighted) {\n              this.drawLabel();\n            }\n          }\n          /**\n           * @param {number}\n           * @param {number}\n           */\n\n        }, {\n          key: 'drawHighlight',\n          value: function drawHighlight(centerX, centerY) {\n            this.canvas.save();\n            this.canvas.beginPath();\n            this.canvas.strokeStyle = this.tree.highlightColour;\n            this.canvas.lineWidth = this.getHighlightLineWidth();\n            var radius = this.getHighlightRadius();\n            this.canvas.arc(centerX, centerY, radius, 0, Angles.FULL, false);\n            this.canvas.stroke();\n            this.canvas.closePath();\n            this.canvas.restore();\n          }\n          /**\n           * @method\n           */\n\n        }, {\n          key: 'drawBranchLabels',\n          value: function drawBranchLabels() {\n            this.canvas.save();\n            var labelStyle = this.internalLabelStyle || this.tree.internalLabelStyle;\n            this.canvas.fillStyle = labelStyle.colour;\n            this.canvas.font = labelStyle.format + ' ' + labelStyle.textSize + 'pt ' + labelStyle.font;\n            this.canvas.textBaseline = 'middle';\n            this.canvas.textAlign = 'center';\n            var em = this.canvas.measureText('M').width * 2 / 3;\n            var x = this.tree.type.branchScalingAxis === 'y' ? this.centerx : (this.startx + this.centerx) / 2;\n            var y = this.tree.type.branchScalingAxis === 'x' ? this.centery : (this.starty + this.centery) / 2;\n\n            if (this.tree.showBranchLengthLabels && this.tree.branchLengthLabelPredicate(this)) {\n              this.canvas.fillText(this.branchLength.toFixed(2), x, y + em);\n            }\n\n            if (this.tree.showInternalNodeLabels && !this.leaf && this.label) {\n              this.canvas.fillText(this.label, x, y - em);\n            }\n\n            this.canvas.restore();\n          }\n          /**\n           * Draws the line of the branch.\n           */\n\n        }, {\n          key: 'drawNode',\n          value: function drawNode() {\n            var nodeRadius = this.getRadius();\n            /**\n             * theta = translation to center of node... ensures that the node edge is\n             * at the end of the branch so the branches don't look shorter than  they\n             * should\n             */\n\n            var theta = nodeRadius;\n            var centerX = this.leaf ? theta * Math.cos(this.angle) + this.centerx : this.centerx;\n            var centerY = this.leaf ? theta * Math.sin(this.angle) + this.centery : this.centery;\n            this.setNodeDimensions(centerX, centerY, nodeRadius);\n\n            if (this.collapsed) {\n              this.drawCollapsed(centerX, centerY);\n            } else if (this.leaf) {\n              this.canvas.save();\n              this.canvas.translate(this.centerx, this.centery);\n              this.canvas.rotate(this.angle);\n              this.drawLeaf();\n              this.canvas.restore();\n            }\n\n            if (this.isHighlighted) {\n              this.tree.highlighters.push(this.drawHighlight.bind(this, centerX, centerY));\n            }\n\n            if (this.tree.root !== this && this.tree.showBranchLengthLabels || this.tree.showInternalNodeLabels) {\n              this.drawBranchLabels();\n            }\n          }\n          /**\n           * Get property values of leaves under this branch.\n           *\n           * @param {string} - property name\n           * @returns {string[]}\n           */\n\n        }, {\n          key: 'getChildProperties',\n          value: function getChildProperties(property) {\n            if (this.leaf) {\n              // Fix for Issue #68\n              // Returning array, as expected\n              return [this[property]];\n            }\n\n            var children = [];\n\n            for (var x = 0; x < this.children.length; x++) {\n              children = children.concat(this.children[x].getChildProperties(property));\n            }\n\n            return children;\n          }\n          /**\n           * @returns {number}\n           */\n\n        }, {\n          key: 'getChildCount',\n          value: function getChildCount() {\n            if (this.leaf) return 1;\n            var children = 0;\n\n            for (var x = 0; x < this.children.length; x++) {\n              children += this.children[x].getChildCount();\n            }\n\n            return children;\n          }\n          /**\n           * @returns {number}\n           */\n\n        }, {\n          key: 'getChildYTotal',\n          value: function getChildYTotal() {\n            if (this.leaf) return this.centery;\n            var y = 0;\n\n            for (var i = 0; i < this.children.length; i++) {\n              y += this.children[i].getChildYTotal();\n            }\n\n            return y;\n          }\n          /**\n           * Set a boolean property of this branch and its descendants.\n           *\n           * @param {string}\n           * @param {boolean}\n           * @param {function=}\n           */\n\n        }, {\n          key: 'cascadeFlag',\n          value: function cascadeFlag(property, value, predicate) {\n            if (typeof this[property] === 'undefined') {\n              throw new Error('Unknown property: ' + property);\n            }\n\n            if (typeof predicate === 'undefined' || predicate(this, property, value)) {\n              this[property] = value;\n            }\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = this.children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var child = _step2.value;\n                child.cascadeFlag(property, value, predicate);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          }\n          /**\n           * Resets the coordinates and angle of this branch and its descendants.\n           */\n\n        }, {\n          key: 'reset',\n          value: function reset() {\n            var child;\n            var i;\n            this.startx = 0;\n            this.starty = 0;\n            this.centerx = 0;\n            this.centery = 0;\n            this.angle = null; // this.totalBranchLength = 0;\n\n            this.minChildAngle = Angles.FULL;\n            this.maxChildAngle = 0;\n\n            for (i = 0; i < this.children.length; i++) {\n              try {\n                this.children[child].reset();\n              } catch (e) {\n                return e;\n              }\n            }\n          }\n          /**\n           * Set this branch to be the root.\n           */\n\n        }, {\n          key: 'redrawTreeFromBranch',\n          value: function redrawTreeFromBranch() {\n            if (this.collapsed) {\n              this.expand();\n            }\n\n            this.tree.redrawFromBranch(this);\n          }\n          /**\n           * Store this branch's children.\n           */\n\n        }, {\n          key: 'extractChildren',\n          value: function extractChildren() {\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = this.children[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var child = _step3.value;\n                this.tree.storeNode(child);\n                child.extractChildren();\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n          }\n          /**\n           * Walks up the tree looking for a collapsed branch.\n           *\n           * @returns {boolean}\n           */\n\n        }, {\n          key: 'hasCollapsedAncestor',\n          value: function hasCollapsedAncestor() {\n            if (this.parent) {\n              return this.parent.collapsed || this.parent.hasCollapsedAncestor();\n            }\n\n            return false;\n          }\n          /**\n           * @method\n           */\n\n        }, {\n          key: 'collapse',\n          value: function collapse() {\n            // don't collapse the node if it is a leaf... that would be silly!\n            this.collapsed = this.leaf === false;\n          }\n          /**\n           * @method\n           */\n\n        }, {\n          key: 'expand',\n          value: function expand() {\n            this.collapsed = false;\n          }\n          /**\n           * @method\n           */\n\n        }, {\n          key: 'toggleCollapsed',\n          value: function toggleCollapsed() {\n            if (this.collapsed) {\n              this.expand();\n            } else {\n              this.collapse();\n            }\n          }\n          /**\n           * Sums the length of all branches from this one back to the root.\n           */\n\n        }, {\n          key: 'setTotalLength',\n          value: function setTotalLength() {\n            var c;\n\n            if (this.parent) {\n              this.totalBranchLength = this.parent.totalBranchLength + this.branchLength;\n\n              if (this.totalBranchLength > this.tree.maxBranchLength) {\n                this.tree.maxBranchLength = this.totalBranchLength;\n              }\n            } else {\n              this.totalBranchLength = this.branchLength;\n              this.tree.maxBranchLength = this.totalBranchLength;\n            }\n\n            for (c = 0; c < this.children.length; c++) {\n              this.children[c].setTotalLength();\n            }\n          }\n          /**\n           * Add a child branch to this branch.\n           *\n           * @param node {Branch} the node to add as a child\n           */\n\n        }, {\n          key: 'addChild',\n          value: function addChild(node) {\n            node.parent = this;\n            node.tree = this.tree;\n            this.leaf = false;\n            this.children.push(node);\n          }\n          /**\n           * Return the node colour of all the nodes that are children of this one.\n           *\n           * @returns {string[]}\n           */\n\n        }, {\n          key: 'getChildColours',\n          value: function getChildColours() {\n            var colours = [];\n            this.children.forEach(function (branch) {\n              var colour = branch.children.length === 0 ? branch.colour : branch.getColour(); // only add each colour once.\n\n              if (colours.indexOf(colour) === -1) {\n                colours.push(colour);\n              }\n            });\n            return colours;\n          }\n          /**\n           * Get the colour(s) of the branch itself.\n           *\n           * @returns {string}\n           */\n\n        }, {\n          key: 'getColour',\n          value: function getColour(specifiedColour) {\n            if (this.selected) {\n              return this.tree.selectedColour;\n            }\n\n            return specifiedColour || this.colour || this.tree.branchColour;\n          }\n          /**\n           * Create a newick representation of this branch.\n           *\n           * @returns {string}\n           */\n\n        }, {\n          key: 'getNwk',\n          value: function getNwk() {\n            var isRoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            if (this.leaf) {\n              return this.label + ':' + this.branchLength;\n            }\n\n            var childNwks = this.children.map(function (child) {\n              return child.getNwk(false);\n            });\n            return '(' + childNwks.join(',') + '):' + this.branchLength + (isRoot ? ';' : '');\n          }\n          /**\n           * @returns {string}\n           */\n\n        }, {\n          key: 'getTextColour',\n          value: function getTextColour() {\n            if (this.selected) {\n              return this.tree.selectedColour;\n            }\n\n            if (this.isHighlighted) {\n              return this.tree.highlightColour;\n            }\n\n            if (this.tree.backColour && this.children.length) {\n              var childColours = this.getChildColours();\n\n              if (childColours.length === 1) {\n                return childColours[0];\n              }\n            }\n\n            return this.labelStyle.colour || this.colour || this.tree.branchColour;\n          }\n          /**\n           * Ensures the return value is always a string.\n           *\n           * @returns {string}\n           */\n\n        }, {\n          key: 'getLabel',\n          value: function getLabel() {\n            return this.label !== undefined && this.label !== null ? this.label : '';\n          }\n          /**\n           * @returns {number}\n           */\n\n        }, {\n          key: 'getTextSize',\n          value: function getTextSize() {\n            return this.labelStyle.textSize || this.tree.textSize;\n          }\n          /**\n           * @returns {string}\n           */\n\n        }, {\n          key: 'getFontString',\n          value: function getFontString() {\n            var font = this.labelStyle.font || this.tree.font;\n            return (this.labelStyle.format || '') + ' ' + this.getTextSize() + 'pt ' + font;\n          }\n          /**\n           * @returns {number} length of label in pixels\n           */\n\n        }, {\n          key: 'getLabelSize',\n          value: function getLabelSize() {\n            this.canvas.font = this.getFontString();\n            return this.canvas.measureText(this.getLabel()).width;\n          }\n          /**\n           * @returns {number}\n           */\n\n        }, {\n          key: 'getRadius',\n          value: function getRadius() {\n            var baseNodeSize = this.tree.baseNodeSize;\n\n            if (this.leaf) {\n              return baseNodeSize * this.radius;\n            }\n\n            return baseNodeSize / this.radius;\n          }\n          /**\n           * @returns {number}\n           */\n\n        }, {\n          key: 'getDiameter',\n          value: function getDiameter() {\n            return this.getRadius() * 2;\n          }\n          /**\n           * @returns {boolean}\n           */\n\n        }, {\n          key: 'hasLabelConnector',\n          value: function hasLabelConnector() {\n            if (!this.tree.alignLabels) {\n              return false;\n            }\n\n            return this.tree.labelAlign.getLabelOffset(this) > this.getDiameter();\n          }\n          /**\n           * Calculates label start position\n           * offset + aesthetic padding\n           *\n           * @return {number} x coordinate\n           */\n\n        }, {\n          key: 'getLabelStartX',\n          value: function getLabelStartX() {\n            var _getLeafStyle = this.getLeafStyle(),\n                lineWidth = _getLeafStyle.lineWidth;\n\n            var hasLabelConnector = this.hasLabelConnector();\n            var offset = this.getDiameter();\n\n            if (this.isHighlighted && !hasLabelConnector) {\n              offset += this.getHighlightSize() - this.getRadius();\n            }\n\n            return offset + Math.min(this.tree.labelPadding, this.tree.labelPadding / this.tree.zoom);\n          }\n          /**\n           * @returns {number}\n           */\n\n        }, {\n          key: 'getHighlightLineWidth',\n          value: function getHighlightLineWidth() {\n            return this.tree.highlightWidth / this.tree.zoom;\n          }\n          /**\n           * @returns {number}\n           */\n\n        }, {\n          key: 'getHighlightRadius',\n          value: function getHighlightRadius() {\n            var offset = this.getHighlightLineWidth() * this.tree.highlightSize;\n            offset += this.getLeafStyle().lineWidth / this.tree.highlightSize;\n            return this.leaf ? this.getRadius() + offset : offset * 0.666;\n          }\n          /**\n           * Combination of radius and line width\n           *\n           * @returns {number}\n           */\n\n        }, {\n          key: 'getHighlightSize',\n          value: function getHighlightSize() {\n            return this.getHighlightRadius() + this.getHighlightLineWidth();\n          }\n          /**\n           * Reverses the order of the children. Runs the prerenderer again.\n           *\n           * @method\n           */\n\n        }, {\n          key: 'rotate',\n          value: function rotate() {\n            var newChildren = [];\n\n            for (var i = this.children.length; i--;) {\n              newChildren.push(this.children[i]);\n            }\n\n            this.children = newChildren;\n            this.tree.extractNestedBranches();\n            this.tree.draw(true);\n          }\n          /**\n           * @returns {number} index of this branch in its parent's array.\n           */\n\n        }, {\n          key: 'getChildNo',\n          value: function getChildNo() {\n            return this.parent.children.indexOf(this);\n          }\n          /**\n           * @param {Object} options\n           * @param {string} options.colour\n           * @param {string} options.shape\n           * @param {number} options.size\n           * @param {Object} options.leafStyle See {@link Branch#leafStyle}\n           * @param {Object} options.labelStyle See {@link Branch#labelStyle}\n           */\n\n        }, {\n          key: 'setDisplay',\n          value: function setDisplay(_ref) {\n            var colour = _ref.colour,\n                shape = _ref.shape,\n                size = _ref.size,\n                leafStyle = _ref.leafStyle,\n                labelStyle = _ref.labelStyle;\n\n            if (colour) {\n              this.colour = colour;\n            }\n\n            if (shape) {\n              this.nodeShape = Shapes[shape] ? Shapes[shape] : shape;\n            }\n\n            if (size) {\n              this.radius = size;\n            }\n\n            if (leafStyle) {\n              this.leafStyle = leafStyle;\n            }\n\n            if (labelStyle) {\n              this.labelStyle = labelStyle;\n            }\n          }\n          /**\n           * @returns {number} the node radius plus label length if labels are shown\n           */\n\n        }, {\n          key: 'getTotalLength',\n          value: function getTotalLength() {\n            var length = this.getRadius();\n\n            if (this.tree.showLabels || this.tree.hoverLabel && this.isHighlighted) {\n              length += this.getLabelStartX() + this.getLabelSize();\n            }\n\n            return length;\n          }\n          /**\n           * @returns {Object} bounds\n           * @property {number} minx\n           * @property {number} miny\n           * @property {number} maxx\n           * @property {number} maxy\n           */\n\n        }, {\n          key: 'getBounds',\n          value: function getBounds() {\n            var tree = this.tree;\n            var x = tree.alignLabels ? tree.labelAlign.getX(this) : this.centerx;\n            var y = tree.alignLabels ? tree.labelAlign.getY(this) : this.centery;\n            var nodeSize = this.getRadius();\n            var totalLength = this.getTotalLength();\n            var minx = void 0;\n            var maxx = void 0;\n            var miny = void 0;\n            var maxy = void 0;\n\n            if (this.angle > Angles.QUARTER && this.angle < Angles.HALF + Angles.QUARTER) {\n              minx = x + totalLength * Math.cos(this.angle);\n              miny = y + totalLength * Math.sin(this.angle);\n              maxx = x - nodeSize;\n              maxy = y - nodeSize;\n            } else {\n              minx = x - nodeSize;\n              miny = y - nodeSize;\n              maxx = x + totalLength * Math.cos(this.angle);\n              maxy = y + totalLength * Math.sin(this.angle);\n            } // uses a caching object to reduce garbage\n\n\n            var step = tree.prerenderer.getStep(tree) / 2;\n            _bounds.minx = Math.min(minx, maxx, x - step);\n            _bounds.miny = Math.min(miny, maxy, y - step);\n            _bounds.maxx = Math.max(minx, maxx, x + step);\n            _bounds.maxy = Math.max(miny, maxy, y + step);\n            return _bounds;\n          }\n          /**\n           * Merges global and local styles together.\n           *\n           * @returns {Object}\n           * @see Branch#leafStyle\n           */\n\n        }, {\n          key: 'getLeafStyle',\n          value: function getLeafStyle() {\n            var _leafStyle2 = this.leafStyle,\n                strokeStyle = _leafStyle2.strokeStyle,\n                fillStyle = _leafStyle2.fillStyle;\n            var zoom = this.tree.zoom; // uses a caching object to reduce garbage\n\n            _leafStyle.strokeStyle = this.getColour(strokeStyle);\n            _leafStyle.fillStyle = this.getColour(fillStyle);\n            var lineWidth = typeof this.leafStyle.lineWidth !== 'undefined' ? this.leafStyle.lineWidth : this.tree.lineWidth;\n            _leafStyle.lineWidth = lineWidth / zoom;\n            return _leafStyle;\n          }\n        }, {\n          key: 'isHighlighted',\n\n          /**\n           * True if the branch is highlighted or hovered.\n           *\n           * @type boolean\n           */\n          get: function get() {\n            return this.highlighted || this.hovered;\n          }\n          /**\n           * The canvas {@link https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D drawing context} of the parent tree.\n           *\n           * @type CanvasRenderingContext2D\n           */\n\n        }, {\n          key: 'canvas',\n          get: function get() {\n            return this.tree.canvas;\n          }\n        }], [{\n          key: 'generateId',\n          value: function generateId() {\n            return 'pcn' + this.lastId++;\n          }\n        }]);\n\n        return Branch;\n      }();\n      /**\n       * Static counter for generated ids.\n       *\n       * @static\n       * @memberof Branch\n       * @type number\n       */\n\n\n      Branch.lastId = 0;\n      exports.default = Branch;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _rectangular = __webpack_require__(9);\n\n      var _rectangular2 = _interopRequireDefault(_rectangular);\n\n      var _circular = __webpack_require__(14);\n\n      var _circular2 = _interopRequireDefault(_circular);\n\n      var _radial = __webpack_require__(17);\n\n      var _radial2 = _interopRequireDefault(_radial);\n\n      var _diagonal = __webpack_require__(20);\n\n      var _diagonal2 = _interopRequireDefault(_diagonal);\n\n      var _hierarchical = __webpack_require__(23);\n\n      var _hierarchical2 = _interopRequireDefault(_hierarchical);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = {\n        rectangular: _rectangular2.default,\n        circular: _circular2.default,\n        radial: _radial2.default,\n        diagonal: _diagonal2.default,\n        hierarchical: _hierarchical2.default\n      };\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _BranchRenderer = __webpack_require__(10);\n\n      var _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n      var _Prerenderer = __webpack_require__(11);\n\n      var _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n      var _branchRenderer = __webpack_require__(12);\n\n      var _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n      var _prerenderer = __webpack_require__(13);\n\n      var _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n      var _constants = __webpack_require__(6);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var labelAlign = {\n        getX: function getX(node) {\n          return node.tree.farthestNodeFromRootX * node.tree.currentBranchScale;\n        },\n        getY: function getY(node) {\n          return node.centery;\n        },\n        getLabelOffset: function getLabelOffset(node) {\n          return node.tree.farthestNodeFromRootX * node.tree.currentBranchScale - node.centerx;\n        }\n      };\n      exports.default = {\n        branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n        prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n        labelAlign: labelAlign,\n        branchScalingAxis: 'x',\n        getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n          return {\n            angle: _constants.Angles.QUARTER,\n            radius: branch.tree.step * branch.getNumberOfLeaves()\n          };\n        }\n      };\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      /**\n       * Draws a branch.\n       *\n       * @class\n       */\n\n\n      var BranchRenderer = function () {\n        /**\n         * @constructor\n         * @param {Object} options\n         * @param {function} options.draw\n         * @param {function} [options.prepareChild]\n         */\n        function BranchRenderer(options) {\n          _classCallCheck(this, BranchRenderer);\n\n          if (!options || !options.draw) {\n            throw new Error('`draw` function is required for branch renderers');\n          }\n\n          this.draw = options.draw;\n          this.prepareChild = options.prepareChild;\n        }\n        /**\n         * @param {Tree}\n         * @param {Branch}\n         * @param {boolean=} - if true, rendering skipped.\n         */\n\n\n        _createClass(BranchRenderer, [{\n          key: 'render',\n          value: function render(tree, branch, collapse) {\n            var i;\n            if (collapse || !branch) return;\n\n            if (branch.selected) {\n              branch.canvas.fillStyle = tree.selectedColour;\n            } else {\n              branch.canvas.fillStyle = branch.colour;\n            }\n\n            branch.canvas.strokeStyle = branch.getColour();\n            this.draw(tree, branch);\n\n            if (branch.pruned) {\n              return;\n            }\n\n            branch.drawNode();\n\n            for (i = 0; i < branch.children.length; i++) {\n              if (this.prepareChild) {\n                this.prepareChild(branch, branch.children[i]);\n              }\n\n              this.render(tree, branch.children[i], branch.collapsed || collapse);\n            }\n          }\n        }]);\n\n        return BranchRenderer;\n      }();\n\n      exports.default = BranchRenderer;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      /**\n       * Calculates the tree dimensions before the first draw.\n       *\n       * @class\n       */\n\n\n      var Prerenderer = function () {\n        /**\n         * @constructor\n         * @param {Object} options\n         * @param {function} options.getStep - should return the space between each branch.\n         * @param {function} options.calculate\n         */\n        function Prerenderer(options) {\n          _classCallCheck(this, Prerenderer);\n\n          this.getStep = options.getStep;\n          this.calculate = options.calculate;\n        }\n        /**\n         * @param {Tree}\n         */\n\n\n        _createClass(Prerenderer, [{\n          key: \"run\",\n          value: function run(tree) {\n            var step = this.getStep(tree);\n            tree.root.startx = 0;\n            tree.root.starty = 0;\n            tree.root.centerx = 0;\n            tree.root.centery = 0;\n            tree.farthestNodeFromRootX = 0;\n            tree.farthestNodeFromRootY = 0;\n            tree.currentBranchScale = 1;\n            tree.step = step;\n            this.calculate(tree, step);\n            tree.initialBranchScalar = tree.branchScalar; // Assign root startx and starty\n\n            tree.root.startx = tree.root.centerx;\n            tree.root.starty = tree.root.centery; // Set font size for tree and its branches\n\n            tree.setFontSize(step);\n            tree.setMaxLabelLength();\n          }\n        }]);\n\n        return Prerenderer;\n      }();\n\n      exports.default = Prerenderer;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = {\n        draw: function draw(tree, node) {\n          var branchLength = node.branchLength * tree.branchScalar;\n          node.angle = 0;\n\n          if (node.parent) {\n            node.centerx = node.startx + branchLength;\n          }\n\n          node.canvas.beginPath();\n          node.canvas.moveTo(node.startx, node.starty);\n          node.canvas.lineTo(node.startx, node.centery);\n          node.canvas.lineTo(node.centerx, node.centery);\n          node.canvas.stroke();\n          node.canvas.closePath();\n        },\n        prepareChild: function prepareChild(node, child) {\n          child.startx = node.centerx;\n          child.starty = node.centery;\n        }\n      };\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = {\n        getStep: function getStep(tree) {\n          return tree.fillCanvas ? tree.canvas.canvas.height / tree.leaves.length : Math.max(tree.canvas.canvas.height / tree.leaves.length, tree.leaves[0].getDiameter() + tree.labelPadding);\n        },\n        calculate: function calculate(tree, ystep) {\n          // Calculate branchScalar based on canvas width and total branch length\n          // This is used to transform the X coordinate based on the canvas width and no. of branches\n          tree.branchScalar = tree.canvas.canvas.width / tree.maxBranchLength; // set initial positons of the branches\n\n          for (var i = 0; i < tree.leaves.length; i++) {\n            tree.leaves[i].angle = 0; // for rectangle\n            // Calculate and assign y coordinate for all the leaves\n\n            tree.leaves[i].centery = i > 0 ? tree.leaves[i - 1].centery + ystep : 0;\n            tree.leaves[i].centerx = tree.leaves[i].totalBranchLength * tree.branchScalar; // Assign x,y position of the farthest node from the root\n\n            if (tree.leaves[i].centerx > tree.farthestNodeFromRootX) {\n              tree.farthestNodeFromRootX = tree.leaves[i].centerx;\n            }\n\n            if (tree.leaves[i].centery > tree.farthestNodeFromRootY) {\n              tree.farthestNodeFromRootY = tree.leaves[i].centery;\n            } // Calculate and assign y coordinate for all the parent branches\n\n\n            for (var branch = tree.leaves[i]; branch.parent; branch = branch.parent) {\n              // Get all the children of a parent\n              var childrenArray = branch.parent.children; // Assign parent's y coordinate\n              // Logic: Total ystep of all the children of this parent / 2\n\n              branch.parent.centery = (childrenArray[0].centery + childrenArray[childrenArray.length - 1].centery) / 2;\n            }\n          }\n        }\n      };\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _BranchRenderer = __webpack_require__(10);\n\n      var _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n      var _Prerenderer = __webpack_require__(11);\n\n      var _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n      var _branchRenderer = __webpack_require__(15);\n\n      var _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n      var _prerenderer = __webpack_require__(16);\n\n      var _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var labelAlign = {\n        getX: function getX(node) {\n          return node.centerx + node.labelOffsetX + node.getDiameter() * Math.cos(node.angle);\n        },\n        getY: function getY(node) {\n          return node.centery + node.labelOffsetY + node.getDiameter() * Math.sin(node.angle);\n        },\n        getLabelOffset: function getLabelOffset(node) {\n          return node.labelOffsetX / Math.cos(node.angle);\n        }\n      };\n      exports.default = {\n        branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n        prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n        labelAlign: labelAlign,\n        getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n          var _branch$tree = branch.tree,\n              maxBranchLength = _branch$tree.maxBranchLength,\n              branchScalar = _branch$tree.branchScalar,\n              step = _branch$tree.step;\n          return {\n            angle: branch.getNumberOfLeaves() * step,\n            radius: (maxBranchLength - branch.totalBranchLength) * branchScalar\n          };\n        },\n        calculateFontSize: function calculateFontSize(ystep) {\n          return Math.min(ystep * 10 + 4, 40);\n        }\n      };\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = {\n        draw: function draw(tree, node) {\n          var branchLength = node.totalBranchLength * tree.branchScalar;\n          node.canvas.beginPath();\n          node.canvas.moveTo(node.startx, node.starty);\n          node.canvas.lineTo(node.centerx, node.centery);\n          node.canvas.stroke();\n          node.canvas.closePath();\n          node.canvas.strokeStyle = node.getColour();\n\n          if (node.children.length > 1 && !node.collapsed) {\n            node.canvas.beginPath();\n            node.canvas.arc(0, 0, branchLength, node.minChildAngle, node.maxChildAngle, node.maxChildAngle < node.minChildAngle);\n            node.canvas.stroke();\n            node.canvas.closePath();\n          }\n        }\n      };\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _utils = __webpack_require__(2);\n\n      var Angles = _utils.constants.Angles;\n      exports.default = {\n        getStep: function getStep(tree) {\n          return Angles.FULL / tree.leaves.length;\n        },\n        calculate: function calculate(tree, step) {\n          tree.branchScalar = Math.min(tree.canvas.canvas.width, tree.canvas.canvas.height) / tree.maxBranchLength; // work out radius of tree and the make branch scalar proportinal to the\n\n          var r = tree.leaves.length * tree.leaves[0].getDiameter() / Angles.FULL;\n\n          if (tree.branchScalar * tree.maxBranchLength > r) {\n            r = tree.branchScalar * tree.maxBranchLength;\n          } else {\n            tree.branchScalar = r / tree.maxBranchLength;\n          }\n\n          for (var i = 0; i < tree.leaves.length; i++) {\n            var node = tree.leaves[i];\n            node.angle = step * i;\n            node.startx = node.parent.totalBranchLength * tree.branchScalar * Math.cos(node.angle);\n            node.starty = node.parent.totalBranchLength * tree.branchScalar * Math.sin(node.angle);\n            node.centerx = node.totalBranchLength * tree.branchScalar * Math.cos(node.angle);\n            node.centery = node.totalBranchLength * tree.branchScalar * Math.sin(node.angle);\n            node.labelOffsetX = r * Math.cos(node.angle) - node.centerx;\n            node.labelOffsetY = r * Math.sin(node.angle) - node.centery;\n\n            for (; node.parent; node = node.parent) {\n              if (node.getChildNo() === 0) {\n                node.parent.angle = node.angle;\n                node.parent.minChildAngle = node.angle;\n              }\n\n              if (node.getChildNo() === node.parent.children.length - 1) {\n                node.parent.maxChildAngle = node.angle;\n                node.parent.angle = (node.parent.minChildAngle + node.parent.maxChildAngle) / 2;\n                node.parent.startx = (node.parent.totalBranchLength - node.parent.branchLength) * tree.branchScalar * Math.cos(node.parent.angle);\n                node.parent.starty = (node.parent.totalBranchLength - node.parent.branchLength) * tree.branchScalar * Math.sin(node.parent.angle);\n                node.parent.centerx = node.parent.totalBranchLength * tree.branchScalar * Math.cos(node.parent.angle);\n                node.parent.centery = node.parent.totalBranchLength * tree.branchScalar * Math.sin(node.parent.angle);\n              } else {\n                break;\n              }\n            }\n          }\n        }\n      };\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _BranchRenderer = __webpack_require__(10);\n\n      var _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n      var _Prerenderer = __webpack_require__(11);\n\n      var _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n      var _branchRenderer = __webpack_require__(18);\n\n      var _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n      var _prerenderer = __webpack_require__(19);\n\n      var _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = {\n        branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n        prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n        getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n          var _branch$tree = branch.tree,\n              maxBranchLength = _branch$tree.maxBranchLength,\n              branchScalar = _branch$tree.branchScalar,\n              step = _branch$tree.step;\n          return {\n            angle: branch.getNumberOfLeaves() * step,\n            radius: (maxBranchLength - branch.totalBranchLength) * branchScalar\n          };\n        },\n        calculateFontSize: function calculateFontSize(ystep) {\n          return Math.min(ystep * 50 + 5, 15);\n        }\n      };\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = {\n        draw: function draw(tree, node) {\n          node.canvas.beginPath();\n          node.canvas.moveTo(node.startx, node.starty);\n          node.canvas.lineTo(node.centerx, node.centery);\n          node.canvas.stroke();\n          node.canvas.closePath();\n        }\n      };\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _utils = __webpack_require__(2);\n\n      var Angles = _utils.constants.Angles;\n\n      function prerenderNodes(tree, node) {\n        if (node.parent) {\n          node.startx = node.parent.centerx;\n          node.starty = node.parent.centery;\n        } else {\n          node.startx = 0;\n          node.starty = 0;\n        }\n\n        node.centerx = node.startx + node.branchLength * tree.branchScalar * Math.cos(node.angle);\n        node.centery = node.starty + node.branchLength * tree.branchScalar * Math.sin(node.angle);\n\n        for (var i = 0; i < node.children.length; i++) {\n          prerenderNodes(tree, node.children[i]);\n        }\n      }\n\n      exports.default = {\n        getStep: function getStep(tree) {\n          return Angles.FULL / tree.leaves.length;\n        },\n        calculate: function calculate(tree, step) {\n          tree.branchScalar = Math.min(tree.canvas.canvas.width, tree.canvas.canvas.height) / tree.maxBranchLength;\n\n          for (var i = 0.0; i < tree.leaves.length; i += 1.0) {\n            tree.leaves[i].angle = step * i;\n            tree.leaves[i].centerx = tree.leaves[i].totalBranchLength * tree.branchScalar * Math.cos(tree.leaves[i].angle);\n            tree.leaves[i].centery = tree.leaves[i].totalBranchLength * tree.branchScalar * Math.sin(tree.leaves[i].angle);\n\n            for (var node = tree.leaves[i]; node.parent; node = node.parent) {\n              if (node.getChildNo() === 0) {\n                node.parent.angle = 0;\n              }\n\n              node.parent.angle += node.angle * node.getChildCount();\n\n              if (node.getChildNo() === node.parent.children.length - 1) {\n                node.parent.angle = node.parent.angle / node.parent.getChildCount();\n              } else {\n                break;\n              }\n            }\n          }\n\n          prerenderNodes(tree, tree.root);\n        }\n      };\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _BranchRenderer = __webpack_require__(10);\n\n      var _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n      var _Prerenderer = __webpack_require__(11);\n\n      var _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n      var _branchRenderer = __webpack_require__(21);\n\n      var _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n      var _prerenderer = __webpack_require__(22);\n\n      var _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n      var _constants = __webpack_require__(6);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = {\n        branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n        prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n        calculateFontSize: function calculateFontSize(ystep) {\n          return Math.min(ystep / 2, 10);\n        },\n        getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n          return {\n            angle: _constants.Angles.QUARTER,\n            radius: branch.tree.step * branch.getNumberOfLeaves()\n          };\n        }\n      };\n      /***/\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = {\n        draw: function draw(tree, node) {\n          node.angle = 0;\n          node.canvas.beginPath();\n          node.canvas.moveTo(node.startx, node.starty);\n          node.canvas.lineTo(node.centerx, node.centery);\n          node.canvas.stroke();\n          node.canvas.closePath();\n        },\n        prepareChild: function prepareChild(node, child) {\n          child.startx = node.centerx;\n          child.starty = node.centery;\n        }\n      };\n      /***/\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _utils = __webpack_require__(2);\n\n      var Angles = _utils.constants.Angles;\n      exports.default = {\n        getStep: function getStep(tree) {\n          return Math.max(tree.canvas.canvas.height / tree.leaves.length, tree.leaves[0].getDiameter() + tree.labelPadding);\n        },\n        calculate: function calculate(tree, ystep) {\n          for (var i = 0; i < tree.leaves.length; i++) {\n            tree.leaves[i].centerx = 0;\n            tree.leaves[i].centery = i > 0 ? tree.leaves[i - 1].centery + ystep : 0;\n            tree.leaves[i].angle = 0;\n\n            for (var node = tree.leaves[i]; node.parent; node = node.parent) {\n              if (node.getChildNo() === node.parent.children.length - 1) {\n                node.parent.centery = node.parent.getChildYTotal() / node.parent.getChildCount(); // (node.parent.children.length - 1);\n\n                node.parent.centerx = node.parent.children[0].centerx + (node.parent.children[0].centery - node.parent.centery) * Math.tan(Angles.FORTYFIVE);\n\n                for (var j = 0; j < node.parent.children.length; j++) {\n                  node.parent.children[j].startx = node.parent.centerx;\n                  node.parent.children[j].starty = node.parent.centery;\n                }\n              } else {\n                break;\n              }\n            }\n          }\n        }\n      };\n      /***/\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _BranchRenderer = __webpack_require__(10);\n\n      var _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n      var _Prerenderer = __webpack_require__(11);\n\n      var _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n      var _branchRenderer = __webpack_require__(24);\n\n      var _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n      var _prerenderer = __webpack_require__(25);\n\n      var _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n      var _constants = __webpack_require__(6);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var labelAlign = {\n        getX: function getX(node) {\n          return node.centerx;\n        },\n        getY: function getY(node) {\n          return node.tree.farthestNodeFromRootY * node.tree.currentBranchScale;\n        },\n        getLabelOffset: function getLabelOffset(node) {\n          return node.tree.farthestNodeFromRootY * node.tree.currentBranchScale - node.centery;\n        }\n      };\n      exports.default = {\n        branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n        prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n        labelAlign: labelAlign,\n        branchScalingAxis: 'y',\n        getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n          return {\n            angle: _constants.Angles.QUARTER,\n            radius: branch.tree.step * branch.getNumberOfLeaves()\n          };\n        }\n      };\n      /***/\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = {\n        draw: function draw(tree, node) {\n          var branchLength = node.branchLength * tree.branchScalar;\n\n          if (node.parent) {\n            node.centery = node.starty + branchLength;\n          }\n\n          node.canvas.beginPath();\n\n          if (node !== node.tree.root) {\n            node.canvas.moveTo(node.startx, node.starty);\n            node.canvas.lineTo(node.centerx, node.starty);\n          }\n\n          node.canvas.lineTo(node.centerx, node.centery);\n          node.canvas.stroke();\n          node.canvas.closePath();\n        },\n        prepareChild: function prepareChild(node, child) {\n          child.startx = node.centerx;\n          child.starty = node.centery;\n        }\n      };\n      /***/\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _utils = __webpack_require__(2);\n\n      var Angles = _utils.constants.Angles;\n      exports.default = {\n        getStep: function getStep(tree) {\n          return tree.fillCanvas ? tree.canvas.canvas.width / tree.leaves.length : Math.max(tree.canvas.canvas.width / tree.leaves.length, tree.leaves[0].getDiameter() + tree.labelPadding);\n        },\n        calculate: function calculate(tree, xstep) {\n          tree.branchScalar = tree.canvas.canvas.height / tree.maxBranchLength;\n\n          for (var i = 0; i < tree.leaves.length; i++) {\n            tree.leaves[i].angle = Angles.QUARTER;\n            tree.leaves[i].centerx = i > 0 ? tree.leaves[i - 1].centerx + xstep : 0;\n            tree.leaves[i].centery = tree.leaves[i].totalBranchLength * tree.branchScalar;\n\n            for (var node = tree.leaves[i]; node.parent; node = node.parent) {\n              if (node.getChildNo() === 0) {\n                node.parent.centerx = node.centerx;\n              }\n\n              if (node.getChildNo() === node.parent.children.length - 1) {\n                node.parent.angle = Angles.QUARTER;\n                node.parent.centerx = (node.parent.centerx + node.centerx) / 2;\n                node.parent.centery = node.parent.totalBranchLength * tree.branchScalar;\n\n                for (var j = 0; j < node.parent.children.length; j++) {\n                  node.parent.children[j].startx = node.parent.centerx;\n                  node.parent.children[j].starty = node.parent.centery;\n                }\n              } else {\n                break;\n              }\n            } // Assign x,y position of the farthest node from the root\n\n\n            if (tree.leaves[i].centerx > tree.farthestNodeFromRootX) {\n              tree.farthestNodeFromRootX = tree.leaves[i].centerx;\n            }\n\n            if (tree.leaves[i].centery > tree.farthestNodeFromRootY) {\n              tree.farthestNodeFromRootY = tree.leaves[i].centery;\n            }\n          }\n        }\n      };\n      /***/\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _utils = __webpack_require__(2);\n\n      var Angles = _utils.constants.Angles;\n\n      function drawConnector(canvas, connectingOffset) {\n        canvas.beginPath();\n        canvas.moveTo(0, 0);\n        canvas.lineTo(connectingOffset, 0);\n        canvas.stroke();\n        canvas.closePath();\n      }\n\n      function commitPath(canvas, _ref) {\n        var lineWidth = _ref.lineWidth,\n            strokeStyle = _ref.strokeStyle,\n            fillStyle = _ref.fillStyle;\n        canvas.lineWidth = lineWidth;\n        canvas.strokeStyle = strokeStyle;\n        canvas.fillStyle = fillStyle;\n        canvas.fill();\n\n        if (lineWidth > 0 && strokeStyle !== fillStyle) {\n          canvas.stroke();\n        }\n      }\n\n      var lengthOfSquareSide = function lengthOfSquareSide(radius) {\n        return radius * Math.sqrt(2);\n      };\n      /**\n       * @function nodeRenderer\n       * @description A pure function to render a leaf.\n       *\n       * @param {CanvasRenderingContext2D} canvas - See {@link Tree#canvas}\n       * @param {number} radius - See {@link Branch#radius}\n       * @param {Object} style - See {@link Branch#leafStyle}\n       */\n\n\n      exports.default = {\n        circle: function circle(canvas, radius, style) {\n          // circle takes same area as square inside given radius\n          var scaledArea = Math.pow(lengthOfSquareSide(radius), 2);\n          var scaledRadius = Math.sqrt(scaledArea / Math.PI);\n          drawConnector(canvas, radius - scaledRadius);\n          canvas.beginPath();\n          canvas.arc(radius, 0, scaledRadius, 0, Angles.FULL, false);\n          canvas.closePath();\n          commitPath(canvas, style);\n        },\n        square: function square(canvas, radius, style) {\n          var lengthOfSide = lengthOfSquareSide(radius);\n          var startX = radius - lengthOfSide / 2;\n          drawConnector(canvas, startX);\n          canvas.beginPath();\n          canvas.moveTo(startX, 0);\n          canvas.lineTo(startX, lengthOfSide / 2);\n          canvas.lineTo(startX + lengthOfSide, lengthOfSide / 2);\n          canvas.lineTo(startX + lengthOfSide, -lengthOfSide / 2);\n          canvas.lineTo(startX, -lengthOfSide / 2);\n          canvas.lineTo(startX, 0);\n          canvas.closePath();\n          commitPath(canvas, style);\n        },\n        star: function star(canvas, radius, style) {\n          var cx = radius;\n          var cy = 0;\n          var spikes = 5;\n          var outerRadius = radius;\n          var innerRadius = outerRadius * 0.5;\n          var step = Math.PI / spikes;\n          drawConnector(canvas, outerRadius - innerRadius);\n          var rot = Math.PI / 2 * 3;\n          canvas.beginPath();\n          canvas.moveTo(cx, cy - outerRadius);\n\n          for (var i = 0; i < spikes; i++) {\n            var x = cx + Math.cos(rot) * outerRadius;\n            var y = cy + Math.sin(rot) * outerRadius;\n            canvas.lineTo(x, y);\n            rot += step;\n            x = cx + Math.cos(rot) * innerRadius;\n            y = cy + Math.sin(rot) * innerRadius;\n            canvas.lineTo(x, y);\n            rot += step;\n          }\n\n          canvas.lineTo(cx, cy - outerRadius);\n          canvas.closePath();\n          commitPath(canvas, style);\n        },\n        triangle: function triangle(canvas, radius, style) {\n          var lengthOfSide = 2 * radius * Math.cos(30 * Math.PI / 180);\n          var height = Math.sqrt(3) / 2 * lengthOfSide;\n          var midpoint = 1 / Math.sqrt(3) * (lengthOfSide / 2);\n          drawConnector(canvas, radius - midpoint);\n          canvas.beginPath();\n          canvas.moveTo(radius, midpoint);\n          canvas.lineTo(radius + lengthOfSide / 2, midpoint);\n          canvas.lineTo(radius, -(height - midpoint));\n          canvas.lineTo(radius - lengthOfSide / 2, midpoint);\n          canvas.lineTo(radius, midpoint);\n          canvas.closePath();\n          commitPath(canvas, style);\n        }\n      };\n      /***/\n    },\n    /* 27 */\n\n    /***/\n    function (module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      /**\n       * Tooltip base class\n       *\n       * @class\n       */\n\n\n      var Tooltip = function () {\n        /**\n         * @constructor\n         * @param {Tree} tree instance\n         * @param {Object} [options]\n         * @param {string} [options.className=phylocanvas-tooltip]\n         * @param {HTMLElement} [options.element=document.createElement('div')]\n         * @param {number} [options.zIndex=2000]\n         * @param {HTMLElement} [options.parent=tree.containerElement]\n         */\n        function Tooltip(tree) {\n          var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n              _ref$className = _ref.className,\n              className = _ref$className === undefined ? 'phylocanvas-tooltip' : _ref$className,\n              _ref$element = _ref.element,\n              element = _ref$element === undefined ? document.createElement('div') : _ref$element,\n              _ref$zIndex = _ref.zIndex,\n              zIndex = _ref$zIndex === undefined ? 2000 : _ref$zIndex,\n              _ref$parent = _ref.parent,\n              parent = _ref$parent === undefined ? tree.containerElement : _ref$parent;\n\n          _classCallCheck(this, Tooltip);\n\n          this.tree = tree;\n          this.element = element;\n          this.element.className = className;\n          this.element.style.display = 'none';\n          this.element.style.position = 'fixed';\n          this.element.style.zIndex = zIndex;\n          this.closed = true;\n          parent.appendChild(this.element);\n        }\n        /**\n         * @method\n         */\n\n\n        _createClass(Tooltip, [{\n          key: 'close',\n          value: function close() {\n            this.element.style.display = 'none';\n            this.closed = true;\n          }\n          /**\n           * @param {number} [x=100]\n           * @param {number} [y=100]\n           * @param {Branch} [node]\n           */\n\n        }, {\n          key: 'open',\n          value: function open() {\n            var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n            var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n            var node = arguments[2];\n\n            while (this.element.hasChildNodes()) {\n              this.element.removeChild(this.element.firstChild);\n            }\n\n            this.createContent(node);\n            this.element.style.top = y + 'px';\n            this.element.style.left = x + 'px';\n            this.element.style.display = 'block';\n            this.closed = false;\n          }\n          /**\n           * @throws an error if not overridden by a subclass.\n           */\n\n        }, {\n          key: 'createContent',\n          value: function createContent() {\n            throw new Error('Not implemented');\n          }\n        }]);\n\n        return Tooltip;\n      }();\n\n      exports.default = Tooltip; // named export cannot have a doclet\n      // @extends not working well\n\n      var ChildNodesTooltip = exports.ChildNodesTooltip = function (_Tooltip) {\n        _inherits(ChildNodesTooltip, _Tooltip);\n        /**\n         * Tooltip displaying number of child nodes.\n         *\n         * @constructor\n         * @param {Tree} tree instance\n         * @param {Object} [options]\n         * @see Tooltip\n         */\n\n\n        function ChildNodesTooltip(tree, options) {\n          _classCallCheck(this, ChildNodesTooltip);\n\n          var _this = _possibleConstructorReturn(this, (ChildNodesTooltip.__proto__ || Object.getPrototypeOf(ChildNodesTooltip)).call(this, tree, options));\n\n          _this.element.style.background = 'rgba(97, 97, 97, 0.9)';\n          _this.element.style.color = '#fff';\n          _this.element.style.cursor = 'pointer';\n          _this.element.style.padding = '8px';\n          _this.element.style.marginTop = '16px';\n          _this.element.style.borderRadius = '2px';\n          _this.element.style.textAlign = 'center';\n          _this.element.style.fontFamily = _this.tree.font || 'sans-serif';\n          _this.element.style.fontSize = '10px';\n          _this.element.style.fontWeight = '500';\n          return _this;\n        }\n        /**\n         * Adds a text node containing the number of children.\n         * @override\n         */\n\n\n        _createClass(ChildNodesTooltip, [{\n          key: 'createContent',\n          value: function createContent(node) {\n            var textNode = document.createTextNode(node.getChildProperties('id').length);\n            this.element.appendChild(textNode);\n          }\n        }]);\n\n        return ChildNodesTooltip;\n      }(Tooltip);\n      /***/\n\n    },\n    /* 28 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _Parser = __webpack_require__(29);\n\n      var _Parser2 = _interopRequireDefault(_Parser);\n\n      var _newick = __webpack_require__(30);\n\n      var _newick2 = _interopRequireDefault(_newick);\n\n      var _nexus = __webpack_require__(31);\n\n      var _nexus2 = _interopRequireDefault(_nexus);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = {\n        nexus: new _Parser2.default(_nexus2.default),\n        newick: new _Parser2.default(_newick2.default)\n      };\n      /***/\n    },\n    /* 29 */\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var Parser = function () {\n        function Parser(_ref) {\n          var format = _ref.format,\n              parseFn = _ref.parseFn,\n              fileExtension = _ref.fileExtension,\n              validator = _ref.validator;\n\n          _classCallCheck(this, Parser);\n\n          this.format = format;\n          this.parseFn = parseFn;\n          this.fileExtension = fileExtension;\n          this.validator = validator;\n        }\n\n        _createClass(Parser, [{\n          key: \"parse\",\n          value: function parse(_ref2, callback) {\n            var formatString = _ref2.formatString,\n                root = _ref2.root,\n                _ref2$options = _ref2.options,\n                options = _ref2$options === undefined ? {\n              validate: true\n            } : _ref2$options;\n\n            if (formatString.match(this.validator) || options.validate === false) {\n              return this.parseFn({\n                string: formatString,\n                root: root,\n                options: options\n              }, callback);\n            }\n\n            return callback(new Error(\"Format string does not validate as \\\"\" + this.format + \"\\\"\"));\n          }\n        }]);\n\n        return Parser;\n      }();\n\n      exports.default = Parser;\n      /***/\n    },\n    /* 30 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _Branch = __webpack_require__(7);\n\n      var _Branch2 = _interopRequireDefault(_Branch);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var format = 'newick';\n      var fileExtension = /\\.nwk$/;\n      var validator = /^[\\w\\W\\.\\*\\:(\\),-\\/]+;?\\s*$/gi;\n\n      function isTerminatingChar(terminatingChar) {\n        return this === terminatingChar;\n      }\n\n      var labelTerminatingChars = [':', ',', ')', ';'];\n\n      function parseLabel(string) {\n        var label = '';\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = string[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var char = _step.value;\n\n            if (labelTerminatingChars.some(isTerminatingChar.bind(char))) {\n              break;\n            }\n\n            label += char;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return label;\n      }\n\n      function parseAnnotations(label, branch) {\n        var segments = label.split('**');\n        var displayOptions = {};\n        branch.id = segments[0];\n        if (segments.length === 1) return;\n        segments = segments[1].split('*');\n\n        for (var b = 0; b < segments.length; b += 2) {\n          var value = segments[b + 1];\n\n          switch (segments[b]) {\n            case 'nsz':\n              displayOptions.size = window.parseInt(value);\n              break;\n\n            case 'nsh':\n              displayOptions.shape = value;\n              break;\n\n            case 'ncol':\n              displayOptions.colour = value;\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        branch.setDisplay(displayOptions);\n      }\n\n      var nodeTerminatingChars = [')', ',', ';'];\n\n      function parseBranchLength(string) {\n        var nodeLength = '';\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = string[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var char = _step2.value;\n\n            if (nodeTerminatingChars.some(isTerminatingChar.bind(char))) {\n              break;\n            }\n\n            nodeLength += char;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        return nodeLength;\n      }\n\n      function parseBranch(branch, string, index) {\n        var label = parseLabel(string.slice(index));\n        var postLabelIndex = index + label.length;\n        var branchLengthStr = '';\n\n        if (label.match(/\\*/)) {\n          parseAnnotations(label, branch);\n        }\n\n        if (string[postLabelIndex] === ':') {\n          branchLengthStr = parseBranchLength(string.slice(postLabelIndex + 1));\n          branch.branchLength = Math.max(parseFloat(branchLengthStr), 0);\n        } else {\n          branch.branchLength = 0;\n        }\n\n        if (label) {\n          branch.label = label;\n        }\n\n        branch.id = label || _Branch2.default.generateId();\n        return postLabelIndex + branchLengthStr.length;\n      }\n\n      function parseFn(_ref, callback) {\n        var string = _ref.string,\n            root = _ref.root;\n        var cleanString = string.replace(/(\\r|\\n)/g, '');\n        var currentNode = root;\n\n        for (var i = 0; i < cleanString.length; i++) {\n          var node = void 0;\n\n          switch (cleanString[i]) {\n            case '(':\n              // new Child\n              node = new _Branch2.default();\n              currentNode.addChild(node);\n              currentNode = node;\n              break;\n\n            case ')':\n              // return to parent\n              currentNode = currentNode.parent;\n              break;\n\n            case ',':\n              // new sibling\n              node = new _Branch2.default();\n              currentNode.parent.addChild(node);\n              currentNode = node;\n              break;\n\n            case ';':\n              break;\n\n            default:\n              try {\n                i = parseBranch(currentNode, cleanString, i);\n              } catch (e) {\n                return callback(e);\n              }\n\n              break;\n          }\n        }\n\n        return callback();\n      }\n\n      exports.default = {\n        format: format,\n        fileExtension: fileExtension,\n        validator: validator,\n        parseFn: parseFn\n      };\n      /***/\n    },\n    /* 31 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _newick = __webpack_require__(30);\n\n      var format = 'nexus';\n      var fileExtension = /\\.n(ex|xs)$/;\n      var validator = /^#NEXUS[\\s\\n;\\w\\W\\.\\*\\:(\\),-=\\[\\]\\/&]+$/i;\n\n      function parseFn(_ref, callback) {\n        var string = _ref.string,\n            root = _ref.root,\n            options = _ref.options;\n\n        if (!string.match(/BEGIN TREES/gi)) {\n          return callback(new Error('The nexus file does not contain a tree block'));\n        }\n\n        var name = options.name; // get everything between BEGIN TREES and next END;\n\n        var treeSection = string.match(/BEGIN TREES;[\\S\\s]+END;/i)[0].replace(/BEGIN TREES;\\n/i, '').replace(/END;/i, ''); // get translate section\n\n        var leafNameObject = {};\n        var translateSection = treeSection.match(/TRANSLATE[^;]+;/i);\n\n        if (translateSection && translateSection.length) {\n          translateSection = translateSection[0]; //remove translate section from tree section\n\n          treeSection = treeSection.replace(translateSection, ''); //parse translate section into kv pairs\n\n          translateSection = translateSection.replace(/translate|;/gi, '');\n          var tIntArr = translateSection.split(',');\n\n          for (var i = 0; i < tIntArr.length; i++) {\n            var ia = tIntArr[i].trim().replace('\\n', '').split(' ');\n\n            if (ia[0] && ia[1]) {\n              leafNameObject[ia[0].trim()] = ia[1].trim();\n            }\n          }\n        } // find each line starting with tree.\n\n\n        var tArr = treeSection.split('\\n');\n        var trees = {}; // id name is '' or does not exist, ask user to choose which tree.\n\n        for (var _i = 0; _i < tArr.length; _i++) {\n          if (tArr[_i].trim() === '') continue;\n\n          var s = tArr[_i].replace(/tree\\s/i, '');\n\n          if (!name) {\n            name = s.trim().match(/^\\w+/)[0];\n          }\n\n          trees[name] = s.trim().match(/[\\S]*$/)[0];\n        }\n\n        if (!trees[name]) {\n          return new Error('tree ' + name + ' does not exist in this NEXUS file');\n        }\n\n        (0, _newick.parseFn)({\n          string: trees[name].trim(),\n          root: root\n        }, function (error) {\n          if (error) {\n            return callback(error);\n          }\n\n          callback(); // translate in accordance with translate block\n\n          if (leafNameObject) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = Object.keys(leafNameObject)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var n = _step.value;\n                var branches = root.tree.branches;\n                var branch = branches[n];\n                delete branches[n];\n                branch.id = leafNameObject[n];\n                branches[branch.id] = branch;\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            root.tree.draw();\n          }\n        });\n      }\n\n      exports.default = {\n        parseFn: parseFn,\n        format: format,\n        fileExtension: fileExtension,\n        validator: validator\n      };\n      /***/\n    }\n    /******/\n    ])\n  );\n});\n\n;","map":{"version":3,"sources":["/var/www/epitools/node_modules/phylocanvas/dist/phylocanvas.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","Object","defineProperty","value","utils","nodeRenderers","treeTypes","Parser","Tooltip","Prerenderer","Branch","Tree","undefined","_Tree","_Tree2","_interopRequireDefault","_Branch","_Branch2","_Prerenderer","_Prerenderer2","_Tooltip","_Tooltip2","_Parser","_Parser2","_treeTypes","_treeTypes2","_nodeRenderers","_nodeRenderers2","_utils","_interopRequireWildcard","obj","__esModule","newObj","key","prototype","hasOwnProperty","default","decorate","object","fnName","fn","target","originalFn","_len","arguments","length","args","Array","_key","plugin","pluginFn","createTree","element","config","_createClass","defineProperties","props","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_parsers","_parsers2","_toConsumableArray","arr","isArray","arr2","from","_classCallCheck","instance","TypeError","addClass","dom","setCursorDrag","setCursorDragging","fireEvent","events","addEvent","removeEvent","getPixelRatio","canvas","translateClick","Predicates","constants","_this","_point","x","y","containerElement","document","getElementById","branches","leaves","stringRepresentation","backColour","originalTree","window","getComputedStyle","position","style","boxSizing","canvasElement","createElement","className","height","offsetHeight","width","offsetWidth","zIndex","appendChild","getContext","onselectstart","fillStyle","strokeStyle","save","collapsedColour","defaultCollapsed","tooltip","ChildNodesTooltip","drawn","highlighters","zoom","zoomFactor","disableZoom","fillCanvas","branchScaling","currentBranchScale","branchScalingStep","pickedup","dragging","startx","starty","baseNodeSize","origx","origy","offsetx","offsety","selectedColour","highlightColour","highlightWidth","highlightSize","branchColour","branchScalar","padding","labelPadding","multiSelect","clickFlag","clickFlagPredicate","tautology","hoverLabel","internalNodesSelectable","showLabels","showBranchLengthLabels","branchLengthLabelPredicate","showInternalNodeLabels","internalLabelStyle","colour","textSize","font","format","setTreeType","maxBranchLength","lineWidth","unselectOnClickAway","farthestNodeFromRootX","farthestNodeFromRootY","shiftKeyDrag","maxLabelLength","assign","resizeToContainer","eventListeners","click","listener","clicked","bind","mousedown","pickup","mouseup","drop","mouseout","mousemove","drag","mousewheel","scroll","DOMMouseScroll","resize","draw","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","keys","Symbol","iterator","_step","next","done","event","_eventListeners$event","addListener","err","return","removeEventListeners","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","def","setInitialCollapsedBranches","node","childIds","getChildProperties","min","max","collapsed","children","getNodeAtMousePosition","_root","apply","getSelectedNodeIds","getNodeIdsWithFlag","flag","reduce","memo","leaf","push","e","button","nodeIds","isMultiSelectActive","metaKey","ctrlKey","interactive","someUnflagged","some","prop","cascadeFlag","nodesUpdated","ratio","xmove","clientX","ymove","clientY","Math","abs","nd","hovered","hasCollapsedAncestor","open","cursor","close","shiftKey","forceRedraw","loadError","Error","clearRect","lineCap","lineJoin","prerenderer","run","fitInPanel","pixelRatio","translate","scale","branchRenderer","render","forEach","restore","wheelDelta","preventDefault","offsetX","offsetY","sign","detail","pow","setBranchScale","smoothZoom","findLeaves","pattern","searchProperty","foundLeaves","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","match","updateLeaves","property","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_leaf","map","_","clearSelect","getPngUrl","toDataURL","load","inputString","options","callback","buildOptions","buildCallback","build","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_iterator7","_step7","parserName","parser","fileExtension","validator","error","saveOriginalTree","branchLengths","parents","clearState","extractNestedBranches","storeNode","extractChildren","saveState","branchLength","setTotalLength","formatString","_this2","lastId","setRoot","parse","beforeFirstDraw","loadCompleted","redrawFromBranch","resetTree","parent","subtreeDrawn","redrawOriginalTree","generateId","setNodeSize","size","Number","tree","setTextSize","setFontSize","ystep","calculateFontSize","type","quiet","oldType","treeType","labelAlign","treeTypeChanged","setSize","navigator","adjustForPixelRatio","getCentrePoint","setZoom","_ref","oldZoom","calculateZoomedOffset","steps","point","log","offset","coord","newZoom","branchScalingAxis","previoudBranchLength","initialBranchScalar","scaleRatio","oldPosition","newPosition","toggleLabels","setMaxLabelLength","dimensions","measureText","loadStarted","append","newType","removeListener","getBounds","initialBounds","minx","maxx","miny","maxy","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_iterator8","_step8","bounds","canvasSize","treeSize","xZoomRatio","yZoomRatio","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_iterator9","_step9","n","rotateBranch","branch","rotate","exportNwk","nwk","getNwk","substr","lastIndexOf","cleanup","get","labelAlignEnabled","set","on","off","_canvas2","_canvas","_constants2","_constants","_dom2","_dom","_events2","_events","getBackingStorePixelRatio","translatePoint","undoPointTranslation","context","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","phylocanvas","_ref2","createBlobUrl","setupDownloadLink","getX","getY","removeClass","hasClass","windowURL","URL","webkitURL","data","blob","Blob","createObjectURL","url","filename","anchor","isDownloadSupported","download","href","revokeObjectURL","domElement","xValue","offsetLeft","offsetParent","yValue","offsetTop","classes","split","indexOf","join","index","splice","_typeof","constructor","killEvent","createHandler","params","param","createEvent","initEvent","createEventObject","eventType","eventName","dispatchEvent","elem","addEventListener","attachEvent","removeEventListener","console","warn","stopPropagation","func","handler","Angles","FORTYFIVE","PI","QUARTER","HALF","FULL","Shapes","s","o","t","contradiction","leafOnly","nonLeaf","_bounds","_leafStyle","angle","centerx","centery","highlighted","label","maxChildAngle","minChildAngle","nodeShape","radius","selected","totalBranchLength","pruned","labelStyle","leafStyle","child","drawLabel","fSize","getTextSize","getLabel","getFontString","labelWidth","tx","getLabelStartX","alignLabels","getLabelOffset","beginPath","getTextColour","fillText","closePath","setNodeDimensions","centerX","centerY","boundedRadius","getNumberOfLeaves","numberOfLeaves","queue","pop","drawCollapsed","getCollapsedMeasurements","_getCollapsedMeasurem","startAngle","endAngle","moveTo","arc","gradient","createRadialGradient","addColorStop","getColour","fill","drawLabelConnector","_tree","isHighlighted","getRadius","lineTo","getDiameter","stroke","drawLeaf","_tree2","getLeafStyle","drawHighlight","getHighlightLineWidth","getHighlightRadius","drawBranchLabels","textBaseline","textAlign","em","toFixed","drawNode","nodeRadius","theta","cos","sin","concat","getChildCount","getChildYTotal","predicate","reset","redrawTreeFromBranch","expand","collapse","toggleCollapsed","addChild","getChildColours","colours","specifiedColour","isRoot","childNwks","childColours","getLabelSize","hasLabelConnector","_getLeafStyle","getHighlightSize","newChildren","getChildNo","setDisplay","shape","getTotalLength","nodeSize","totalLength","step","getStep","_leafStyle2","_rectangular","_rectangular2","_circular","_circular2","_radial","_radial2","_diagonal","_diagonal2","_hierarchical","_hierarchical2","rectangular","circular","radial","diagonal","hierarchical","_BranchRenderer","_BranchRenderer2","_branchRenderer","_branchRenderer2","_prerenderer","_prerenderer2","BranchRenderer","prepareChild","calculate","childrenArray","labelOffsetX","labelOffsetY","_branch$tree","r","prerenderNodes","tan","j","xstep","drawConnector","connectingOffset","commitPath","lengthOfSquareSide","sqrt","circle","scaledArea","scaledRadius","square","lengthOfSide","startX","star","cx","cy","spikes","outerRadius","innerRadius","rot","triangle","midpoint","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_ref$className","_ref$element","_ref$zIndex","_ref$parent","display","closed","hasChildNodes","removeChild","firstChild","createContent","top","left","getPrototypeOf","background","color","marginTop","borderRadius","fontFamily","fontSize","fontWeight","textNode","createTextNode","_newick","_newick2","_nexus","_nexus2","nexus","newick","parseFn","_ref2$options","validate","string","isTerminatingChar","terminatingChar","labelTerminatingChars","parseLabel","char","parseAnnotations","segments","displayOptions","b","parseInt","nodeTerminatingChars","parseBranchLength","nodeLength","parseBranch","slice","postLabelIndex","branchLengthStr","parseFloat","cleanString","replace","currentNode","name","treeSection","leafNameObject","translateSection","tIntArr","ia","trim","tArr","trees","_i"],"mappings":"AAAA,CAAC,SAASA,gCAAT,CAA0CC,IAA1C,EAAgDC,OAAhD,EAAyD;AACzD,MAAG,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,QAApD,EACCA,MAAM,CAACD,OAAP,GAAiBD,OAAO,EAAxB,CADD,KAEK,IAAG,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA1C,EACJD,MAAM,CAAC,EAAD,EAAKH,OAAL,CAAN,CADI,KAEA,IAAG,OAAOC,OAAP,KAAmB,QAAtB,EACJA,OAAO,CAAC,aAAD,CAAP,GAAyBD,OAAO,EAAhC,CADI,KAGJD,IAAI,CAAC,aAAD,CAAJ,GAAsBC,OAAO,EAA7B;AACD,CATD,EASG,IATH,EASS,YAAW;AACpB;AAAO;AAAU,cAASK,OAAT,EAAkB;AAAE;;AACrC;AAAU;;AACV;AAAU,UAAIC,gBAAgB,GAAG,EAAvB;AAEV;AAAU;;AACV;;AAAU,eAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AAEjD;AAAW;;AACX;AAAW,YAAGF,gBAAgB,CAACE,QAAD,CAAnB;AACX;AAAY,iBAAOF,gBAAgB,CAACE,QAAD,CAAhB,CAA2BP,OAAlC;AAEZ;AAAW;;AACX;;AAAW,YAAIC,MAAM,GAAGI,gBAAgB,CAACE,QAAD,CAAhB,GAA6B;AACrD;AAAYP,UAAAA,OAAO,EAAE,EADgC;;AAErD;AAAYQ,UAAAA,EAAE,EAAED,QAFqC;;AAGrD;AAAYE,UAAAA,MAAM,EAAE;AACpB;;AAJqD,SAA1C;AAMX;AAAW;;AACX;;AAAWL,QAAAA,OAAO,CAACG,QAAD,CAAP,CAAkBG,IAAlB,CAAuBT,MAAM,CAACD,OAA9B,EAAuCC,MAAvC,EAA+CA,MAAM,CAACD,OAAtD,EAA+DM,mBAA/D;AAEX;AAAW;;AACX;;AAAWL,QAAAA,MAAM,CAACQ,MAAP,GAAgB,IAAhB;AAEX;AAAW;;AACX;;AAAW,eAAOR,MAAM,CAACD,OAAd;AACX;AAAW;AAGX;AAAU;;AACV;;;AAAUM,MAAAA,mBAAmB,CAACK,CAApB,GAAwBP,OAAxB;AAEV;AAAU;;AACV;;AAAUE,MAAAA,mBAAmB,CAACM,CAApB,GAAwBP,gBAAxB;AAEV;AAAU;;AACV;;AAAUC,MAAAA,mBAAmB,CAACO,CAApB,GAAwB,QAAxB;AAEV;AAAU;;AACV;;AAAU,aAAOP,mBAAmB,CAAC,CAAD,CAA1B;AACV;AAAU,KAxCM,CA0CN;AACV;;AACA;AAAM,cAASL,MAAT,EAAiBD,OAAjB,EAA0BM,mBAA1B,EAA+C;AAEpD;;AAEAQ,MAAAA,MAAM,CAACC,cAAP,CAAsBf,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CgB,QAAAA,KAAK,EAAE;AADoC,OAA7C;AAGAhB,MAAAA,OAAO,CAACiB,KAAR,GAAgBjB,OAAO,CAACkB,aAAR,GAAwBlB,OAAO,CAACmB,SAAR,GAAoBnB,OAAO,CAACoB,MAAR,GAAiBpB,OAAO,CAACqB,OAAR,GAAkBrB,OAAO,CAACsB,WAAR,GAAsBtB,OAAO,CAACuB,MAAR,GAAiBvB,OAAO,CAACwB,IAAR,GAAeC,SAArJ;;AAEA,UAAIC,KAAK,GAAGpB,mBAAmB,CAAC,CAAD,CAA/B;;AAEA,UAAIqB,MAAM,GAAGC,sBAAsB,CAACF,KAAD,CAAnC;;AAEA,UAAIG,OAAO,GAAGvB,mBAAmB,CAAC,CAAD,CAAjC;;AAEA,UAAIwB,QAAQ,GAAGF,sBAAsB,CAACC,OAAD,CAArC;;AAEA,UAAIE,YAAY,GAAGzB,mBAAmB,CAAC,EAAD,CAAtC;;AAEA,UAAI0B,aAAa,GAAGJ,sBAAsB,CAACG,YAAD,CAA1C;;AAEA,UAAIE,QAAQ,GAAG3B,mBAAmB,CAAC,EAAD,CAAlC;;AAEA,UAAI4B,SAAS,GAAGN,sBAAsB,CAACK,QAAD,CAAtC;;AAEA,UAAIE,OAAO,GAAG7B,mBAAmB,CAAC,EAAD,CAAjC;;AAEA,UAAI8B,QAAQ,GAAGR,sBAAsB,CAACO,OAAD,CAArC;;AAEA,UAAIE,UAAU,GAAG/B,mBAAmB,CAAC,CAAD,CAApC;;AAEA,UAAIgC,WAAW,GAAGV,sBAAsB,CAACS,UAAD,CAAxC;;AAEA,UAAIE,cAAc,GAAGjC,mBAAmB,CAAC,EAAD,CAAxC;;AAEA,UAAIkC,eAAe,GAAGZ,sBAAsB,CAACW,cAAD,CAA5C;;AAEA,UAAIE,MAAM,GAAGnC,mBAAmB,CAAC,CAAD,CAAhC;;AAEA,UAAIW,KAAK,GAAGyB,uBAAuB,CAACD,MAAD,CAAnC;;AAEA,eAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,YAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B;AAAE,iBAAOD,GAAP;AAAa,SAA1C,MAAgD;AAAE,cAAIE,MAAM,GAAG,EAAb;;AAAiB,cAAIF,GAAG,IAAI,IAAX,EAAiB;AAAE,iBAAK,IAAIG,GAAT,IAAgBH,GAAhB,EAAqB;AAAE,kBAAI7B,MAAM,CAACiC,SAAP,CAAiBC,cAAjB,CAAgCtC,IAAhC,CAAqCiC,GAArC,EAA0CG,GAA1C,CAAJ,EAAoDD,MAAM,CAACC,GAAD,CAAN,GAAcH,GAAG,CAACG,GAAD,CAAjB;AAAyB;AAAE;;AAACD,UAAAA,MAAM,CAACI,OAAP,GAAiBN,GAAjB;AAAsB,iBAAOE,MAAP;AAAgB;AAAE;;AAE7Q,eAASjB,sBAAT,CAAgCe,GAAhC,EAAqC;AAAE,eAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEM,UAAAA,OAAO,EAAEN;AAAX,SAArC;AAAwD;;AAE/F,eAASO,QAAT,CAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,EAAlC,EAAsC;AACpC,YAAIC,MAAM,GAAGH,MAAM,CAACC,MAAD,CAAN,GAAiBD,MAAjB,GAA0BA,MAAM,CAACJ,SAA9C;AACA,YAAIQ,UAAU,GAAGD,MAAM,CAACF,MAAD,CAAvB;;AAEAE,QAAAA,MAAM,CAACF,MAAD,CAAN,GAAiB,YAAY;AAC3B,eAAK,IAAII,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAD,CAAzC,EAAiDK,IAAI,GAAG,CAA7D,EAAgEA,IAAI,GAAGL,IAAvE,EAA6EK,IAAI,EAAjF,EAAqF;AACnFF,YAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,iBAAOR,EAAE,CAAC3C,IAAH,CAAQ,IAAR,EAAc6C,UAAd,EAA0BI,IAA1B,CAAP;AACD,SAND;AAOD;AAED;AACD;AACA;AACA;AACA;AACA;;;AAEC3D,MAAAA,OAAO,CAACwB,IAAR,GAAeG,MAAM,CAACsB,OAAtB;AACAjD,MAAAA,OAAO,CAACuB,MAAR,GAAiBO,QAAQ,CAACmB,OAA1B;AACAjD,MAAAA,OAAO,CAACsB,WAAR,GAAsBU,aAAa,CAACiB,OAApC;AACAjD,MAAAA,OAAO,CAACqB,OAAR,GAAkBa,SAAS,CAACe,OAA5B;AACAjD,MAAAA,OAAO,CAACoB,MAAR,GAAiBgB,QAAQ,CAACa,OAA1B;AACAjD,MAAAA,OAAO,CAACmB,SAAR,GAAoBmB,WAAW,CAACW,OAAhC;AACAjD,MAAAA,OAAO,CAACkB,aAAR,GAAwBsB,eAAe,CAACS,OAAxC;AACAjD,MAAAA,OAAO,CAACiB,KAAR,GAAgBA,KAAhB;AAEA;AACD;AACA;AACA;AACA;;AAEC,eAAS6C,MAAT,CAAgBC,QAAhB,EAA0B;AACxBA,QAAAA,QAAQ,CAACrD,IAAT,CAAc,IAAd,EAAoBwC,QAApB;AACD;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,eAASc,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,YAAIC,MAAM,GAAGT,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBhC,SAAzC,GAAqDgC,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;AAEA,eAAO,IAAI9B,MAAM,CAACsB,OAAX,CAAmBgB,OAAnB,EAA4BC,MAA5B,CAAP;AACD;;AAEDlE,MAAAA,OAAO,CAACiD,OAAR,GAAkB;AAAEa,QAAAA,MAAM,EAAEA,MAAV;AAAkBE,QAAAA,UAAU,EAAEA;AAA9B,OAAlB;AAED;AAAO,KAtGG;AAuGV;;AACA;AAAM,cAAS/D,MAAT,EAAiBD,OAAjB,EAA0BM,mBAA1B,EAA+C;AAEpD;;AAEAQ,MAAAA,MAAM,CAACC,cAAP,CAAsBf,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CgB,QAAAA,KAAK,EAAE;AADoC,OAA7C;;AAIA,UAAImD,YAAY,GAAG,YAAY;AAAE,iBAASC,gBAAT,CAA0Bd,MAA1B,EAAkCe,KAAlC,EAAyC;AAAE,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACX,MAA1B,EAAkCY,CAAC,EAAnC,EAAuC;AAAE,gBAAIC,UAAU,GAAGF,KAAK,CAACC,CAAD,CAAtB;AAA2BC,YAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,YAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,gBAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4B5D,YAAAA,MAAM,CAACC,cAAP,CAAsBuC,MAAtB,EAA8BiB,UAAU,CAACzB,GAAzC,EAA8CyB,UAA9C;AAA4D;AAAE;;AAAC,eAAO,UAAUI,WAAV,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgD;AAAE,cAAID,UAAJ,EAAgBR,gBAAgB,CAACO,WAAW,CAAC5B,SAAb,EAAwB6B,UAAxB,CAAhB;AAAqD,cAAIC,WAAJ,EAAiBT,gBAAgB,CAACO,WAAD,EAAcE,WAAd,CAAhB;AAA4C,iBAAOF,WAAP;AAAqB,SAAhN;AAAmN,OAA9hB,EAAnB;;AAEA,UAAIlC,MAAM,GAAGnC,mBAAmB,CAAC,CAAD,CAAhC;;AAEA,UAAIuB,OAAO,GAAGvB,mBAAmB,CAAC,CAAD,CAAjC;;AAEA,UAAIwB,QAAQ,GAAGF,sBAAsB,CAACC,OAAD,CAArC;;AAEA,UAAII,QAAQ,GAAG3B,mBAAmB,CAAC,EAAD,CAAlC;;AAEA,UAAI+B,UAAU,GAAG/B,mBAAmB,CAAC,CAAD,CAApC;;AAEA,UAAIgC,WAAW,GAAGV,sBAAsB,CAACS,UAAD,CAAxC;;AAEA,UAAIyC,QAAQ,GAAGxE,mBAAmB,CAAC,EAAD,CAAlC;;AAEA,UAAIyE,SAAS,GAAGnD,sBAAsB,CAACkD,QAAD,CAAtC;;AAEA,eAASlD,sBAAT,CAAgCe,GAAhC,EAAqC;AAAE,eAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEM,UAAAA,OAAO,EAAEN;AAAX,SAArC;AAAwD;;AAE/F,eAASqC,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,YAAIrB,KAAK,CAACsB,OAAN,CAAcD,GAAd,CAAJ,EAAwB;AAAE,eAAK,IAAIX,CAAC,GAAG,CAAR,EAAWa,IAAI,GAAGvB,KAAK,CAACqB,GAAG,CAACvB,MAAL,CAA5B,EAA0CY,CAAC,GAAGW,GAAG,CAACvB,MAAlD,EAA0DY,CAAC,EAA3D,EAA+D;AAAEa,YAAAA,IAAI,CAACb,CAAD,CAAJ,GAAUW,GAAG,CAACX,CAAD,CAAb;AAAmB;;AAAC,iBAAOa,IAAP;AAAc,SAA7H,MAAmI;AAAE,iBAAOvB,KAAK,CAACwB,IAAN,CAAWH,GAAX,CAAP;AAAyB;AAAE;;AAEnM,eAASI,eAAT,CAAyBC,QAAzB,EAAmCX,WAAnC,EAAgD;AAAE,YAAI,EAAEW,QAAQ,YAAYX,WAAtB,CAAJ,EAAwC;AAAE,gBAAM,IAAIY,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,UAAIC,QAAQ,GAAG/C,MAAM,CAACgD,GAAP,CAAWD,QAA1B;AAAA,UACIE,aAAa,GAAGjD,MAAM,CAACgD,GAAP,CAAWC,aAD/B;AAAA,UAEIC,iBAAiB,GAAGlD,MAAM,CAACgD,GAAP,CAAWE,iBAFnC;AAGA,UAAIC,SAAS,GAAGnD,MAAM,CAACoD,MAAP,CAAcD,SAA9B;AAAA,UACIE,QAAQ,GAAGrD,MAAM,CAACoD,MAAP,CAAcC,QAD7B;AAAA,UAEIC,WAAW,GAAGtD,MAAM,CAACoD,MAAP,CAAcE,WAFhC;AAGA,UAAIC,aAAa,GAAGvD,MAAM,CAACwD,MAAP,CAAcD,aAAlC;AAAA,UACIE,cAAc,GAAGzD,MAAM,CAACwD,MAAP,CAAcC,cADnC;AAEA,UAAIC,UAAU,GAAG1D,MAAM,CAAC2D,SAAP,CAAiBD,UAAlC;AAEA;AACD;AACA;AACA;AACA;AACA;;AAEC,UAAI3E,IAAI,GAAG,YAAY;AACrB;AACH;AACA;AACA;AACA;AACG,iBAASA,IAAT,CAAcyC,OAAd,EAAuB;AACrB,cAAIoC,KAAK,GAAG,IAAZ;;AAEA,cAAInC,MAAM,GAAGT,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBhC,SAAzC,GAAqDgC,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;;AAEA4B,UAAAA,eAAe,CAAC,IAAD,EAAO7D,IAAP,CAAf;;AAEA,eAAK8E,MAAL,GAAc;AAAEC,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX,WAAd;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,gBAAL,GAAwB,OAAOxC,OAAP,KAAmB,QAAnB,GAA8ByC,QAAQ,CAACC,cAAT,CAAwB1C,OAAxB,CAA9B,GAAiEA,OAAzF;AAEAuB,UAAAA,QAAQ,CAAC,KAAKiB,gBAAN,EAAwB,cAAxB,CAAR;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKG,QAAL,GAAgB,EAAhB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,MAAL,GAAc,EAAd;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAK/G,IAAL,GAAY,KAAZ;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKgH,oBAAL,GAA4B,EAA5B;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,UAAL,GAAkB,KAAlB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,YAAL,GAAoB,EAApB,CA3DqB,CA6DrB;;AACA,cAAIC,MAAM,CAACC,gBAAP,CAAwB,KAAKT,gBAA7B,EAA+CU,QAA/C,KAA4D,QAAhE,EAA0E;AACxE,iBAAKV,gBAAL,CAAsBW,KAAtB,CAA4BD,QAA5B,GAAuC,UAAvC;AACD;;AACD,eAAKV,gBAAL,CAAsBW,KAAtB,CAA4BC,SAA5B,GAAwC,YAAxC;AAEA,cAAIC,aAAa,GAAGZ,QAAQ,CAACa,aAAT,CAAuB,QAAvB,CAApB;AACAD,UAAAA,aAAa,CAAC9G,EAAd,GAAmB,CAAC,KAAKiG,gBAAL,CAAsBjG,EAAtB,IAA4B,EAA7B,IAAmC,UAAtD;AACA8G,UAAAA,aAAa,CAACE,SAAd,GAA0B,aAA1B;AACAF,UAAAA,aAAa,CAACF,KAAd,CAAoBD,QAApB,GAA+B,UAA/B;AACAG,UAAAA,aAAa,CAACG,MAAd,GAAuBxD,OAAO,CAACyD,YAAR,IAAwB,GAA/C;AACAJ,UAAAA,aAAa,CAACK,KAAd,GAAsB1D,OAAO,CAAC2D,WAAR,IAAuB,GAA7C;AACAN,UAAAA,aAAa,CAACF,KAAd,CAAoBS,MAApB,GAA6B,GAA7B;AACA,eAAKpB,gBAAL,CAAsBqB,WAAtB,CAAkCR,aAAlC;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKrB,MAAL,GAAcqB,aAAa,CAACS,UAAd,CAAyB,IAAzB,CAAd;;AACA,eAAK9B,MAAL,CAAYA,MAAZ,CAAmB+B,aAAnB,GAAmC,YAAY;AAC7C,mBAAO,KAAP;AACD,WAFD;;AAGA,eAAK/B,MAAL,CAAYgC,SAAZ,GAAwB,SAAxB;AACA,eAAKhC,MAAL,CAAYiC,WAAZ,GAA0B,SAA1B;AACA,eAAKjC,MAAL,CAAYkC,IAAZ;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,eAAL,GAAuB,oBAAvB;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AACK,eAAKC,gBAAL,GAAwB,EAAxB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,OAAL,GAAe,IAAIrG,QAAQ,CAACsG,iBAAb,CAA+B,IAA/B,CAAf;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,KAAL,GAAa,KAAb;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,YAAL,GAAoB,EAApB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,IAAL,GAAY,CAAZ;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,UAAL,GAAkB,CAAlB;AAEA;AACL;AACA;AACA;;AACK,eAAKC,WAAL,GAAmB,KAAnB;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,UAAL,GAAkB,KAAlB;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,aAAL,GAAqB,IAArB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,kBAAL,GAA0B,CAA1B;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,iBAAL,GAAyB,GAAzB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,QAAL,GAAgB,KAAhB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,QAAL,GAAgB,KAAhB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,MAAL,GAAc,IAAd;AACA;AACL;AACA;AACA;AACA;;AACK,eAAKC,MAAL,GAAc,IAAd;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,YAAL,GAAoB,CAApB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,KAAL,GAAa,IAAb;AACA;AACL;AACA;AACA;AACA;;AACK,eAAKC,KAAL,GAAa,IAAb;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,OAAL,GAAe,KAAKvD,MAAL,CAAYA,MAAZ,CAAmB0B,KAAnB,GAA2B,CAA1C;AACA;AACL;AACA;AACA;AACA;;AACK,eAAK8B,OAAL,GAAe,KAAKxD,MAAL,CAAYA,MAAZ,CAAmBwB,MAAnB,GAA4B,CAA3C;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKiC,cAAL,GAAsB,oBAAtB;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,eAAL,GAAuB,oBAAvB;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,cAAL,GAAsB,CAAtB;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,aAAL,GAAqB,CAArB;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,YAAL,GAAoB,eAApB;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,YAAL,GAAoB,GAApB;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,OAAL,GAAe,EAAf;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,YAAL,GAAoB,CAApB;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,WAAL,GAAmB,IAAnB;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKC,SAAL,GAAiB,UAAjB;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACK,eA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;AACA;AACA;AACA;;AACK,eAAKC,aAAL,GAAqBrB,MAAM,CAACK,IAA5B;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKiB,SAAL,GAAiB,QAAjB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKjL,MAAL,GAAc,IAAd;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKkL,MAAL,GAAc,GAAd;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,QAAL,GAAgB,KAAhB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAK5Y,MAAL,GAAc,CAAd;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKC,MAAL,GAAc,CAAd;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAK4Y,iBAAL,GAAyB,CAAzB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAK7K,IAAL,GAAY,IAAZ;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAK8K,MAAL,GAAc,KAAd;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACK,eAAKC,UAAL,GAAkB,EAAlB;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACK,eAAKtX,kBAAL,GAA0B,IAA1B;AAEA;AACL;AACA;AACA;AACA;AACA;;AACK,eAAKmF,WAAL,GAAmB,IAAnB;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACK,eAAKoS,SAAL,GAAiB,EAAjB;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKvI,IAAL,GAAY,CAAZ;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKE,IAAL,GAAY,CAAZ;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKD,IAAL,GAAY,CAAZ;AAEA;AACL;AACA;AACA;AACA;;AACK,eAAKE,IAAL,GAAY,CAAZ;AACD;AAED;AACH;AACA;AACA;AACA;;;AAGG5V,QAAAA,YAAY,CAAC5C,MAAD,EAAS,CAAC;AACpBuB,UAAAA,GAAG,EAAE,SADe;;AAIpB;AACL;AACA;AAC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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Phylocanvas\"] = factory();\n\telse\n\t\troot[\"Phylocanvas\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.utils = exports.nodeRenderers = exports.treeTypes = exports.Parser = exports.Tooltip = exports.Prerenderer = exports.Branch = exports.Tree = undefined;\n\n\tvar _Tree = __webpack_require__(1);\n\n\tvar _Tree2 = _interopRequireDefault(_Tree);\n\n\tvar _Branch = __webpack_require__(7);\n\n\tvar _Branch2 = _interopRequireDefault(_Branch);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _Tooltip = __webpack_require__(27);\n\n\tvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\n\tvar _Parser = __webpack_require__(29);\n\n\tvar _Parser2 = _interopRequireDefault(_Parser);\n\n\tvar _treeTypes = __webpack_require__(8);\n\n\tvar _treeTypes2 = _interopRequireDefault(_treeTypes);\n\n\tvar _nodeRenderers = __webpack_require__(26);\n\n\tvar _nodeRenderers2 = _interopRequireDefault(_nodeRenderers);\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar utils = _interopRequireWildcard(_utils);\n\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction decorate(object, fnName, fn) {\n\t  var target = object[fnName] ? object : object.prototype;\n\t  var originalFn = target[fnName];\n\n\t  target[fnName] = function () {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\n\t    return fn.call(this, originalFn, args);\n\t  };\n\t}\n\n\t/**\n\t * The publicly exported module. Exports the following methods by default, and\n\t * contains named exports of internal classes, types, and utils.\n\t *\n\t * @module Phylocanvas\n\t */\n\n\texports.Tree = _Tree2.default;\n\texports.Branch = _Branch2.default;\n\texports.Prerenderer = _Prerenderer2.default;\n\texports.Tooltip = _Tooltip2.default;\n\texports.Parser = _Parser2.default;\n\texports.treeTypes = _treeTypes2.default;\n\texports.nodeRenderers = _nodeRenderers2.default;\n\texports.utils = utils;\n\n\t/**\n\t * Register a plugin.\n\t *\n\t * @param {function} pluginFn - Imported plugin module.\n\t */\n\n\tfunction plugin(pluginFn) {\n\t  pluginFn.call(this, decorate);\n\t}\n\n\t/**\n\t * A factory function for Phylocanvas instances to enable decoration by plugins.\n\t *\n\t * @param {string|HTMLElement} element - ID or element within which to place Phylocanvas instance.\n\t * @param {Object} config - Configuration object, properties are copied into the {@link Tree} object.\n\t *\n\t * @return An instance of {@link Tree}.\n\t */\n\tfunction createTree(element) {\n\t  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t  return new _Tree2.default(element, config);\n\t}\n\n\texports.default = { plugin: plugin, createTree: createTree };\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar _Branch = __webpack_require__(7);\n\n\tvar _Branch2 = _interopRequireDefault(_Branch);\n\n\tvar _Tooltip = __webpack_require__(27);\n\n\tvar _treeTypes = __webpack_require__(8);\n\n\tvar _treeTypes2 = _interopRequireDefault(_treeTypes);\n\n\tvar _parsers = __webpack_require__(28);\n\n\tvar _parsers2 = _interopRequireDefault(_parsers);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar addClass = _utils.dom.addClass,\n\t    setCursorDrag = _utils.dom.setCursorDrag,\n\t    setCursorDragging = _utils.dom.setCursorDragging;\n\tvar fireEvent = _utils.events.fireEvent,\n\t    addEvent = _utils.events.addEvent,\n\t    removeEvent = _utils.events.removeEvent;\n\tvar getPixelRatio = _utils.canvas.getPixelRatio,\n\t    translateClick = _utils.canvas.translateClick;\n\tvar Predicates = _utils.constants.Predicates;\n\n\t/**\n\t * A Phylocanvas instance.\n\t *\n\t * @class\n\t * @see module:Phylocanvas~createTree\n\t */\n\n\tvar Tree = function () {\n\t  /**\n\t   * @constructor\n\t   * @param {string|HTMLElement} element\n\t   * @param {Object} config\n\t   */\n\t  function Tree(element) {\n\t    var _this = this;\n\n\t    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t    _classCallCheck(this, Tree);\n\n\t    this._point = { x: 0, y: 0 };\n\n\t    /**\n\t     * Places the instance in the DOM. Events are triggered from here.\n\t     *\n\t     * @type HTMLElement\n\t     */\n\t    this.containerElement = typeof element === 'string' ? document.getElementById(element) : element;\n\n\t    addClass(this.containerElement, 'pc-container');\n\n\t    /**\n\t     * Dictionary of {@link Branch} objects indexed by ID.\n\t     *\n\t     * @type {Object.<string, Branch>}\n\t     */\n\t    this.branches = {};\n\n\t    /**\n\t     * List of leaves.\n\t     *\n\t     * @type Array.<Branch>\n\t     */\n\t    this.leaves = [];\n\n\t    /**\n\t     * The root node of the tree\n\t     * (not neccesarily a root in the Phylogenetic sense)\n\t     *\n\t     * @type Branch\n\t     */\n\t    this.root = false;\n\n\t    /**\n\t     * Stores the unparsed tree.\n\t     *\n\t     * @type string\n\t     */\n\t    this.stringRepresentation = '';\n\n\t    /**\n\t     * Colour the branches of the tree based on the colour of the tips.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.backColour = false;\n\n\t    /**\n\t     * Stores the state of the tree after parsing.\n\t     *\n\t     * @type Object\n\t     */\n\t    this.originalTree = {};\n\n\t    // Set up the element and canvas\n\t    if (window.getComputedStyle(this.containerElement).position === 'static') {\n\t      this.containerElement.style.position = 'relative';\n\t    }\n\t    this.containerElement.style.boxSizing = 'border-box';\n\n\t    var canvasElement = document.createElement('canvas');\n\t    canvasElement.id = (this.containerElement.id || '') + '__canvas';\n\t    canvasElement.className = 'phylocanvas';\n\t    canvasElement.style.position = 'relative';\n\t    canvasElement.height = element.offsetHeight || 400;\n\t    canvasElement.width = element.offsetWidth || 400;\n\t    canvasElement.style.zIndex = '1';\n\t    this.containerElement.appendChild(canvasElement);\n\n\t    /**\n\t     * Canvas drawing context.\n\t     *\n\t     * @type CanvasRenderingContext2D\n\t     */\n\t    this.canvas = canvasElement.getContext('2d');\n\t    this.canvas.canvas.onselectstart = function () {\n\t      return false;\n\t    };\n\t    this.canvas.fillStyle = '#000000';\n\t    this.canvas.strokeStyle = '#000000';\n\t    this.canvas.save();\n\n\t    /**\n\t     * Colour for collapsed sections of the tree.\n\t     *\n\t     * @type string\n\t     */\n\t    this.collapsedColour = 'rgba(0, 0, 0, 0.5)';\n\n\t    /**\n\t     * A minimum and maximum number of child branches within which to\n\t     * automatically collapse branches on the first draw.\n\t     *\n\t     * @type object\n\t     * @property {number} min\n\t     * @property {number} max\n\t     */\n\t    this.defaultCollapsed = {};\n\n\t    /**\n\t     * The default tooltip showing number of child branches.\n\t     *\n\t     * @type Tooltip\n\t     */\n\t    this.tooltip = new _Tooltip.ChildNodesTooltip(this);\n\n\t    /**\n\t     * Has Tree been drawn already, true after first draw.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.drawn = false;\n\n\t    /**\n\t     * Stores highlighting functions used during drawing.\n\t     *\n\t     * @type Array.<Function>\n\t     */\n\t    this.highlighters = [];\n\n\t    /**\n\t     * The current level of zoom.\n\t     *\n\t     * @type number\n\t     */\n\t    this.zoom = 1;\n\n\t    /**\n\t     * Controls the speed of zooming. Recommended values are between 1 and 5.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.zoomFactor = 3;\n\n\t    /**\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.disableZoom = false;\n\n\t    /**\n\t     * Force rectangular and hierarchical trees to use the canvas dimensions\n\t     * instead of the number of leaves for proportion at the prerender stage.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.fillCanvas = false;\n\n\t    /**\n\t     * Enable branch scaling.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.branchScaling = true;\n\n\t    /**\n\t     * The current branch scale.\n\t     *\n\t     * @type number\n\t     */\n\t    this.currentBranchScale = 1;\n\n\t    /**\n\t     * The ratio at which branches scale.\n\t     *\n\t     * @type number\n\t     */\n\t    this.branchScalingStep = 1.2;\n\n\t    /**\n\t     * Whether a click has been detected.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.pickedup = false;\n\n\t    /**\n\t     * Whether the user is dragging.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.dragging = false;\n\n\t    /**\n\t     * The starting x coordinate of a drag.\n\t     *\n\t     * @type number\n\t     */\n\t    this.startx = null;\n\t    /**\n\t     * The starting y coordinate of a drag.\n\t     *\n\t     * @type number\n\t     */\n\t    this.starty = null;\n\n\t    /**\n\t     * Factor with which to scale the radius of a leaf.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.baseNodeSize = 1;\n\n\t    /**\n\t     * Caches the offsetx when a click is detected.\n\t     *\n\t     * @type number\n\t     */\n\t    this.origx = null;\n\t    /**\n\t     * Caches the offsety when a click is detected.\n\t     *\n\t     * @type number\n\t     */\n\t    this.origy = null;\n\n\t    /**\n\t     * The x coordinate from which to begin drawing from.\n\t     *\n\t     * @type number\n\t     */\n\t    this.offsetx = this.canvas.canvas.width / 2;\n\t    /**\n\t     * The y coordinate from which to begin drawing from.\n\t     *\n\t     * @type number\n\t     */\n\t    this.offsety = this.canvas.canvas.height / 2;\n\n\t    /**\n\t     * The colour to apply to a selected branch.\n\t     *\n\t     * @type string\n\t     * @default\n\t     */\n\t    this.selectedColour = 'rgba(49,151,245,1)';\n\n\t    /**\n\t     * The colour to apply to a hihglighted branch.\n\t     *\n\t     * @type string\n\t     * @default\n\t     */\n\t    this.highlightColour = 'rgba(49,151,245,1)';\n\n\t    /**\n\t     * The line width of the halo on a highlighted branch.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.highlightWidth = 4;\n\n\t    /**\n\t     * Scale factor for the size of the the halo on a highlighted branch.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.highlightSize = 2;\n\n\t    /**\n\t     * Global branch colour,\n\t     *\n\t     * @type string\n\t     * @default\n\t     */\n\t    this.branchColour = 'rgba(0,0,0,1)';\n\n\t    /**\n\t     * Scale factor applied to branch lengths defined in the serialised\n\t     * representation of the tree.\n\t     *\n\t     * @type number\n\t     */\n\t    this.branchScalar = 1.0;\n\n\t    /**\n\t     * Space to add to bounds when fitting the tree to the canvas.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.padding = 50;\n\n\t    /**\n\t     * Space between a leaf and its label.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.labelPadding = 5;\n\n\t    /**\n\t     * Enable/disable shift-click multi-selection.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.multiSelect = true;\n\n\t    /**\n\t     * Flag to change on branch when clicked.\n\t     *\n\t     * @type string\n\t     * @default\n\t     */\n\t    this.clickFlag = 'selected';\n\n\t    /**\n\t     * Decide if a branch should be affected when clicked.\n\t     *\n\t     * @type function\n\t     *\n\t     * @param {Branch} branch\n\t     * @param {string} property\n\t     * @param {} value\n\t     *\n\t     * @return boolean\n\t     * @default A function returning true.\n\t     */\n\t    this.clickFlagPredicate = Predicates.tautology;\n\n\t    /**\n\t     * Show labels when hovering over node.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.hoverLabel = false;\n\n\t    /**\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.internalNodesSelectable = true;\n\n\t    /**\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.showLabels = true;\n\n\t    /**\n\t     * Global show/hide branch-length labels.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.showBranchLengthLabels = false;\n\t    /**\n\t     * Conditionally display branch-length labels when enabled.\n\t     *\n\t     * @type function\n\t     * @param {Branch} node\n\t     * @default\n\t     */\n\t    this.branchLengthLabelPredicate = Predicates.tautology;\n\n\t    /**\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.showInternalNodeLabels = false;\n\n\t    /**\n\t     * Global style for internal labels on branches.\n\t     *\n\t     * @type object\n\t     * @property {string} colour\n\t     * @property {number} textSize\n\t     * @property {string} font\n\t     * @property {string} format - e.g. bold, italic\n\t     */\n\t    this.internalLabelStyle = {\n\t      colour: this.branchColour,\n\t      textSize: this.textSize,\n\t      font: this.font,\n\t      format: ''\n\t    };\n\n\t    this.setTreeType('radial');\n\n\t    /**\n\t     * Stores the length of the longest branch on the tree.\n\t     *\n\t     * @type number\n\t     */\n\t    this.maxBranchLength = 0;\n\n\t    /**\n\t     * The visible width of the branches.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.lineWidth = 1.0;\n\n\t    /**\n\t     * The size of the labels, scaled to the size of the tree on first draw.\n\t     *\n\t     * @type number\n\t     */\n\t    this.textSize = 7;\n\n\t    /**\n\t     * The font of the labels.\n\t     *\n\t     * @type string\n\t     */\n\t    this.font = 'sans-serif';\n\n\t    /**\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.unselectOnClickAway = true;\n\n\t    /**\n\t     * X coordinate of node that is furthest from the root.\n\t     *\n\t     * @type number\n\t     */\n\t    this.farthestNodeFromRootX = 0;\n\t    /**\n\t     * Y coordinate of node that is furthest from the root.\n\t     *\n\t     * @type number\n\t     */\n\t    this.farthestNodeFromRootY = 0;\n\n\t    /**\n\t     * Require the 'shift' key to be depressed to allow dragging\n\t     */\n\t    this.shiftKeyDrag = false;\n\n\t    /**\n\t     * Maximum length of label for each tree type.\n\t     *\n\t     * @type Object.<string, number>\n\t     */\n\t    this.maxLabelLength = {};\n\n\t    // Override properties from config\n\t    Object.assign(this, config);\n\n\t    this.resizeToContainer();\n\n\t    /**\n\t     * Event listener cache.\n\t     *\n\t     * @type object\n\t     */\n\t    this.eventListeners = {};\n\n\t    /**\n\t     * Default event listeners. Listeners passed in `config.eventListeners` will\n\t     * overwrite the listener of the same type.\n\t     */\n\t    var eventListeners = Object.assign({\n\t      click: { listener: this.clicked.bind(this) },\n\t      mousedown: { listener: this.pickup.bind(this) },\n\t      mouseup: { listener: this.drop.bind(this) },\n\t      mouseout: { listener: this.drop.bind(this) },\n\t      mousemove: {\n\t        target: this.canvas.canvas,\n\t        listener: this.drag.bind(this)\n\t      },\n\t      mousewheel: {\n\t        target: this.canvas.canvas,\n\t        listener: this.scroll.bind(this)\n\t      },\n\t      DOMMouseScroll: {\n\t        target: this.canvas.canvas,\n\t        listener: this.scroll.bind(this)\n\t      },\n\t      resize: {\n\t        target: window,\n\t        listener: function listener() {\n\t          _this.resizeToContainer();\n\t          _this.draw();\n\t        }\n\t      }\n\t    }, config.eventListeners || {});\n\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = Object.keys(eventListeners)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var event = _step.value;\n\t        var _eventListeners$event = eventListeners[event],\n\t            listener = _eventListeners$event.listener,\n\t            target = _eventListeners$event.target;\n\n\t        this.addListener(event, listener, target);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Removes events defined in this.eventListeners. Useful for cleaning up.\n\t   */\n\n\n\t  _createClass(Tree, [{\n\t    key: 'removeEventListeners',\n\t    value: function removeEventListeners() {\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\n\t      try {\n\t        for (var _iterator2 = Object.keys(this.eventListeners)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var event = _step2.value;\n\t          var _iteratorNormalCompletion3 = true;\n\t          var _didIteratorError3 = false;\n\t          var _iteratorError3 = undefined;\n\n\t          try {\n\t            for (var _iterator3 = this.eventListeners[event][Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t              var def = _step3.value;\n\t              var target = def.target,\n\t                  listener = def.listener;\n\n\t              removeEvent(target || this.containerElement, event, listener);\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError3 = true;\n\t            _iteratorError3 = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                _iterator3.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError3) {\n\t                throw _iteratorError3;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * Set/get if labels are currently aligned.\n\t     *\n\t     * @type boolean\n\t     */\n\n\t  }, {\n\t    key: 'setInitialCollapsedBranches',\n\n\n\t    /**\n\t     * Collapses branches based on {@link Tree#defaultCollapsed}.\n\t     *\n\t     * @param {Branch} [node=this.root]\n\t     */\n\t    value: function setInitialCollapsedBranches() {\n\t      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;\n\n\t      var childIds;\n\t      var i;\n\n\t      childIds = node.getChildProperties('id');\n\t      if (childIds && childIds.length > this.defaultCollapsed.min && childIds.length < this.defaultCollapsed.max) {\n\t        node.collapsed = true;\n\t        return;\n\t      }\n\n\t      for (i = 0; i < node.children.length; i++) {\n\t        this.setInitialCollapsedBranches(node.children[i]);\n\t      }\n\t    }\n\n\t    /**\n\t     * @param {MouseEvent} event\n\t     * @returns {Branch}\n\t     */\n\n\t  }, {\n\t    key: 'getNodeAtMousePosition',\n\t    value: function getNodeAtMousePosition(event) {\n\t      var _root;\n\n\t      return (_root = this.root).clicked.apply(_root, _toConsumableArray(translateClick(event, this)));\n\t    }\n\n\t    /**\n\t     * @returns {Branch[]} Selected leaves\n\t     */\n\n\t  }, {\n\t    key: 'getSelectedNodeIds',\n\t    value: function getSelectedNodeIds() {\n\t      return this.getNodeIdsWithFlag('selected');\n\t    }\n\n\t    /**\n\t     * @param {string} flag - A boolean property of the branch\n\t     * @param {boolean} [value=true]\n\t     * @returns {Branch[]}\n\t     */\n\n\t  }, {\n\t    key: 'getNodeIdsWithFlag',\n\t    value: function getNodeIdsWithFlag(flag) {\n\t      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n\t      return this.leaves.reduce(function (memo, leaf) {\n\t        if (leaf[flag] === value) {\n\t          memo.push(leaf.id);\n\t        }\n\t        return memo;\n\t      }, []);\n\t    }\n\n\t    /**\n\t     * Event listener for click events.\n\t     *\n\t     * @param {MouseEvent} e\n\t     */\n\n\t  }, {\n\t    key: 'clicked',\n\t    value: function clicked(e) {\n\t      var node;\n\t      if (e.button === 0) {\n\t        var nodeIds = [];\n\t        // if this is triggered by the release after a drag then the click\n\t        // shouldn't be triggered.\n\t        if (this.dragging) {\n\t          this.dragging = false;\n\t          return;\n\t        }\n\n\t        if (!this.root) return false;\n\t        node = this.getNodeAtMousePosition(e);\n\t        var isMultiSelectActive = this.multiSelect && (e.metaKey || e.ctrlKey);\n\t        if (node && node.interactive) {\n\t          if (isMultiSelectActive) {\n\t            if (node.leaf) {\n\t              node[this.clickFlag] = !node[this.clickFlag];\n\t            } else if (this.internalNodesSelectable) {\n\t              var someUnflagged = node.getChildProperties(this.clickFlag).some(function (prop) {\n\t                return prop === false;\n\t              });\n\t              node.cascadeFlag(this.clickFlag, someUnflagged, this.clickFlagPredicate);\n\t            }\n\t            nodeIds = this.getNodeIdsWithFlag(this.clickFlag);\n\t            this.draw();\n\t          } else {\n\t            this.root.cascadeFlag(this.clickFlag, false, this.clickFlagPredicate);\n\t            if (this.internalNodesSelectable || node.leaf) {\n\t              node.cascadeFlag(this.clickFlag, true, this.clickFlagPredicate);\n\t              nodeIds = node.getChildProperties('id');\n\t            }\n\t            this.draw();\n\t          }\n\t        } else if (this.unselectOnClickAway && !this.dragging && !isMultiSelectActive) {\n\t          this.root.cascadeFlag(this.clickFlag, false, this.clickFlagPredicate);\n\t          this.draw();\n\t        }\n\n\t        if (!this.pickedup) {\n\t          this.dragging = false;\n\t        }\n\n\t        this.nodesUpdated(nodeIds, this.clickFlag);\n\t      }\n\t    }\n\n\t    /**\n\t     * Handles dragging and hovering.\n\t     *\n\t     * @param {MouseEvent} event\n\t     */\n\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(event) {\n\t      // get window ratio\n\t      var ratio = getPixelRatio(this.canvas);\n\n\t      if (!this.drawn) return false;\n\n\t      if (this.pickedup) {\n\t        var xmove = (event.clientX - this.startx) * ratio;\n\t        var ymove = (event.clientY - this.starty) * ratio;\n\t        if (Math.abs(xmove) + Math.abs(ymove) > 5) {\n\t          this.dragging = true;\n\t          this.offsetx = this.origx + xmove;\n\t          this.offsety = this.origy + ymove;\n\t          this.draw();\n\t        }\n\t      } else {\n\t        // hover\n\t        var e = event;\n\t        var nd = this.getNodeAtMousePosition(e);\n\n\t        if (nd && nd.interactive && (this.internalNodesSelectable || nd.leaf)) {\n\t          this.root.cascadeFlag('hovered', false);\n\t          nd.hovered = true;\n\t          // For mouseover tooltip to show no. of children on the internal nodes\n\t          if (!nd.leaf && !nd.hasCollapsedAncestor()) {\n\t            this.tooltip.open(e.clientX, e.clientY, nd);\n\t          }\n\t          this.containerElement.style.cursor = 'pointer';\n\t        } else {\n\t          this.tooltip.close();\n\t          this.root.cascadeFlag('hovered', false);\n\t          if (this.shiftKeyDrag && e.shiftKey) {\n\t            setCursorDrag(this.containerElement);\n\t          } else {\n\t            this.containerElement.style.cursor = 'auto';\n\t          }\n\t        }\n\t        this.draw();\n\t      }\n\t    }\n\n\t    /**\n\t     * Draws the frame.\n\t     *\n\t     * @param {boolean} forceRedraw - Also run the prerenderer.\n\t     */\n\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(forceRedraw) {\n\t      this.highlighters.length = 0;\n\n\t      if (this.maxBranchLength === 0) {\n\t        this.loadError(new Error('All branches in the tree are identical.'));\n\t        return;\n\t      }\n\n\t      this.canvas.clearRect(0, 0, this.canvas.canvas.width, this.canvas.canvas.height);\n\t      this.canvas.lineCap = 'round';\n\t      this.canvas.lineJoin = 'round';\n\n\t      this.canvas.strokeStyle = this.branchColour;\n\t      this.canvas.save();\n\n\t      if (!this.drawn || forceRedraw) {\n\t        this.prerenderer.run(this);\n\t        if (!forceRedraw) {\n\t          this.fitInPanel();\n\t        }\n\t      }\n\t      var pixelRatio = getPixelRatio(this.canvas);\n\t      this.canvas.lineWidth = this.lineWidth / this.zoom;\n\t      this.canvas.translate(this.offsetx * pixelRatio, this.offsety * pixelRatio);\n\t      this.canvas.scale(this.zoom, this.zoom);\n\t      this.branchRenderer.render(this, this.root);\n\n\t      this.highlighters.forEach(function (render) {\n\t        return render();\n\t      });\n\n\t      this.drawn = true;\n\n\t      this.canvas.restore();\n\t    }\n\n\t    /**\n\t     * Mousedown event listener\n\t     *\n\t     * @param {MouseEvent} event\n\t     */\n\n\t  }, {\n\t    key: 'pickup',\n\t    value: function pickup(event) {\n\t      if (!this.shiftKeyDrag || event.shiftKey) {\n\t        if (!this.drawn) return false;\n\t        this.origx = this.offsetx;\n\t        this.origy = this.offsety;\n\n\t        if (event.button === 0) {\n\t          this.pickedup = true;\n\t          setCursorDragging(this.containerElement);\n\t        }\n\n\t        this.startx = event.clientX;\n\t        this.starty = event.clientY;\n\t      }\n\t    }\n\n\t    /**\n\t     * mouseup event listener.\n\t     */\n\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(event) {\n\t      if (!this.drawn) return false;\n\t      this.pickedup = false;\n\t      if (this.shiftKeyDrag && event.shiftKey) {\n\t        setCursorDrag(this.containerElement);\n\t      } else {\n\t        this.containerElement.style.cursor = 'auto';\n\t      }\n\t    }\n\n\t    /**\n\t     * Mousewheel event listener.\n\t     *\n\t     * @param event\n\t     */\n\n\t  }, {\n\t    key: 'scroll',\n\t    value: function scroll(event) {\n\t      if (this.disableZoom || 'wheelDelta' in event && event.wheelDelta === 0) {\n\t        return;\n\t      }\n\n\t      event.preventDefault();\n\n\t      this._point.x = event.offsetX;\n\t      this._point.y = event.offsetY;\n\t      var sign = event.detail < 0 || event.wheelDelta > 0 ? 1 : -1;\n\t      if (this.branchScaling && (event.metaKey || event.ctrlKey)) {\n\t        this.currentBranchScale *= Math.pow(this.branchScalingStep, sign);\n\t        this.setBranchScale(this.currentBranchScale, this._point);\n\t      } else {\n\t        this.smoothZoom(sign, this._point);\n\t      }\n\t    }\n\n\t    /**\n\t     * @param {RegExp} pattern\n\t     * @param {string} [searchProperty=id].\n\t     * @return {Branch[]}\n\t     */\n\n\t  }, {\n\t    key: 'findLeaves',\n\t    value: function findLeaves(pattern) {\n\t      var searchProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'id';\n\n\t      var foundLeaves = [];\n\n\t      var _iteratorNormalCompletion4 = true;\n\t      var _didIteratorError4 = false;\n\t      var _iteratorError4 = undefined;\n\n\t      try {\n\t        for (var _iterator4 = this.leaves[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t          var leaf = _step4.value;\n\n\t          if (leaf[searchProperty] && leaf[searchProperty].match(pattern)) {\n\t            foundLeaves.push(leaf);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t            _iterator4.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError4) {\n\t            throw _iteratorError4;\n\t          }\n\t        }\n\t      }\n\n\t      return foundLeaves;\n\t    }\n\n\t    /**\n\t     * @param {Branch[]} leaves\n\t     * @param {string} property\n\t     * @param {} value\n\t     *\n\t     * @fires Tree#updated\n\t     */\n\n\t  }, {\n\t    key: 'updateLeaves',\n\t    value: function updateLeaves(leaves, property, value) {\n\t      var _iteratorNormalCompletion5 = true;\n\t      var _didIteratorError5 = false;\n\t      var _iteratorError5 = undefined;\n\n\t      try {\n\t        for (var _iterator5 = this.leaves[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t          var leaf = _step5.value;\n\n\t          leaf[property] = !value;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError5 = true;\n\t        _iteratorError5 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t            _iterator5.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError5) {\n\t            throw _iteratorError5;\n\t          }\n\t        }\n\t      }\n\n\t      var _iteratorNormalCompletion6 = true;\n\t      var _didIteratorError6 = false;\n\t      var _iteratorError6 = undefined;\n\n\t      try {\n\t        for (var _iterator6 = leaves[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t          var _leaf = _step6.value;\n\n\t          _leaf[property] = value;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError6 = true;\n\t        _iteratorError6 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t            _iterator6.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError6) {\n\t            throw _iteratorError6;\n\t          }\n\t        }\n\t      }\n\n\t      this.nodesUpdated(leaves.map(function (_) {\n\t        return _.id;\n\t      }), property);\n\t    }\n\n\t    /**\n\t     * Deselects all branches, implicitly calls {@link Tree#draw}.\n\t     */\n\n\t  }, {\n\t    key: 'clearSelect',\n\t    value: function clearSelect() {\n\t      this.root.cascadeFlag('selected', false);\n\t      this.draw();\n\t    }\n\n\t    /**\n\t     * @returns {string} Base64-encoded data uri of canvas\n\t     */\n\n\t  }, {\n\t    key: 'getPngUrl',\n\t    value: function getPngUrl() {\n\t      return this.canvas.canvas.toDataURL();\n\t    }\n\n\t    /**\n\t     * Loads a serialised representation of a tree, using the first registered\n\t     * parser that validates the input unless a format is specified.\n\t     *\n\t     * @param {string} inputString\n\t     * @param {Object} [options] - also passed on to the parser.\n\t     * @param {string} [options.format] - specify the parser to use.\n\t     * @param {function} [callback] - Called synchronously *after* the first draw.\n\t     *\n\t     * @fires Tree#error\n\t     *\n\t     * @see Tree#build\n\t     */\n\n\t  }, {\n\t    key: 'load',\n\t    value: function load(inputString) {\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t      var callback = arguments[2];\n\n\t      var buildOptions = options;\n\t      var buildCallback = callback;\n\n\t      // allows passing callback as second param\n\t      if (typeof options === 'function') {\n\t        buildCallback = options;\n\t        buildOptions = {};\n\t      }\n\n\t      if (buildCallback) {\n\t        buildOptions.callback = buildCallback;\n\t      }\n\n\t      if (buildOptions.format) {\n\t        this.build(inputString, _parsers2.default[buildOptions.format], buildOptions);\n\t        return;\n\t      }\n\n\t      var _iteratorNormalCompletion7 = true;\n\t      var _didIteratorError7 = false;\n\t      var _iteratorError7 = undefined;\n\n\t      try {\n\t        for (var _iterator7 = Object.keys(_parsers2.default)[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t          var parserName = _step7.value;\n\n\t          var parser = _parsers2.default[parserName];\n\n\t          if (inputString.match(parser.fileExtension) || inputString.match(parser.validator)) {\n\t            this.build(inputString, parser, buildOptions);\n\t            return;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError7 = true;\n\t        _iteratorError7 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t            _iterator7.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError7) {\n\t            throw _iteratorError7;\n\t          }\n\t        }\n\t      }\n\n\t      var error = new Error('String not recognised as a file or a parseable format string');\n\t      if (buildCallback) {\n\t        buildCallback(error);\n\t      }\n\t      this.loadError(error);\n\t    }\n\n\t    /**\n\t     * Builds the {@link Tree#originalTree} object.\n\t     */\n\n\t  }, {\n\t    key: 'saveOriginalTree',\n\t    value: function saveOriginalTree() {\n\t      this.originalTree.branches = this.branches;\n\t      this.originalTree.leaves = this.leaves;\n\t      this.originalTree.root = this.root;\n\t      this.originalTree.branchLengths = {};\n\t      this.originalTree.parents = {};\n\t    }\n\n\t    /**\n\t     * Clears the branches and leaves of the instance.\n\t     */\n\n\t  }, {\n\t    key: 'clearState',\n\t    value: function clearState() {\n\t      this.root = false;\n\t      this.leaves = [];\n\t      this.branches = {};\n\t      this.drawn = false;\n\t    }\n\n\t    /**\n\t     * Build {@link Tree#branches} and {@link Tree#leaves} properties.\n\t     */\n\n\t  }, {\n\t    key: 'extractNestedBranches',\n\t    value: function extractNestedBranches() {\n\t      this.branches = {};\n\t      this.leaves = [];\n\n\t      this.storeNode(this.root);\n\t      this.root.extractChildren();\n\t    }\n\n\t    /**\n\t     * High-level API to organising branches and leaves.\n\t     *\n\t     * @fires Tree#error\n\t     */\n\n\t  }, {\n\t    key: 'saveState',\n\t    value: function saveState() {\n\t      this.extractNestedBranches();\n\n\t      this.root.branchLength = 0;\n\t      this.maxBranchLength = 0;\n\t      this.root.setTotalLength();\n\n\t      if (this.maxBranchLength === 0) {\n\t        this.loadError(new Error('All branches in the tree are identical.'));\n\t        return;\n\t      }\n\t    }\n\n\t    /**\n\t     * Builds the object model of a tree.\n\t     *\n\t     * @param {string} formatString\n\t     * @param {Parser} parser\n\t     * @param {Object} options\n\t     *\n\t     * @fires Tree#error\n\t     * @fires Tree#beforeFirstDraw\n\t     * @fires Tree#loadCompleted\n\t     */\n\n\t  }, {\n\t    key: 'build',\n\t    value: function build(formatString, parser, options) {\n\t      var _this2 = this;\n\n\t      this.originalTree = {};\n\t      this.clearState();\n\t      _Branch2.default.lastId = 0;\n\n\t      var root = new _Branch2.default();\n\t      root.id = 'root';\n\t      this.branches.root = root;\n\t      this.setRoot(root);\n\n\t      parser.parse({ formatString: formatString, root: root, options: options }, function (error) {\n\t        if (error) {\n\t          if (options.callback) {\n\t            options.callback(error);\n\t          }\n\t          _this2.loadError(error);\n\t          return;\n\t        }\n\t        _this2.stringRepresentation = formatString;\n\t        _this2.saveState();\n\t        _this2.setInitialCollapsedBranches();\n\t        _this2.beforeFirstDraw();\n\t        _this2.draw();\n\t        _this2.saveOriginalTree();\n\t        if (options.callback) {\n\t          options.callback();\n\t        }\n\n\t        _this2.loadCompleted();\n\t      });\n\t    }\n\n\t    /**\n\t     * Draw a subtree.\n\t     *\n\t     * @param {Branch} node - the new root of the tree.\n\t     *\n\t     * @fires Tree#subtree\n\t     */\n\n\t  }, {\n\t    key: 'redrawFromBranch',\n\t    value: function redrawFromBranch(node) {\n\t      this.clearState();\n\t      this.resetTree();\n\n\t      this.originalTree.branchLengths[node.id] = node.branchLength;\n\t      this.originalTree.parents[node.id] = node.parent;\n\n\t      this.root = node;\n\t      this.root.parent = false;\n\n\t      this.saveState();\n\n\t      this.draw();\n\t      this.subtreeDrawn(node.id);\n\t    }\n\n\t    /**\n\t     * Reload the serialised version of the tree.\n\t     */\n\n\t  }, {\n\t    key: 'redrawOriginalTree',\n\t    value: function redrawOriginalTree() {\n\t      this.load(this.stringRepresentation);\n\t    }\n\n\t    /**\n\t     * Traverse the tree, generating ids and filing away objects.\n\t     *\n\t     * @param {Branch} node - starting point.\n\t     */\n\n\t  }, {\n\t    key: 'storeNode',\n\t    value: function storeNode(node) {\n\t      if (!node.id || node.id === '') {\n\t        node.id = _Branch2.default.generateId();\n\t      }\n\n\t      if (this.branches[node.id]) {\n\t        if (node !== this.branches[node.id]) {\n\t          if (!node.leaf) {\n\t            node.id = _Branch2.default.generateId();\n\t          } else {\n\t            throw new Error('Two nodes on this tree share the id ' + node.id);\n\t          }\n\t        }\n\t      }\n\n\t      this.branches[node.id] = node;\n\n\t      if (node.leaf) {\n\t        this.leaves.push(node);\n\t      }\n\t    }\n\n\t    /**\n\t     * @param {number} size\n\t     */\n\n\t  }, {\n\t    key: 'setNodeSize',\n\t    value: function setNodeSize(size) {\n\t      this.baseNodeSize = Number(size);\n\t      this.draw();\n\t    }\n\n\t    /**\n\t     * @param {Branch} node\n\t     */\n\n\t  }, {\n\t    key: 'setRoot',\n\t    value: function setRoot(node) {\n\t      node.tree = this;\n\t      this.root = node;\n\t    }\n\n\t    /**\n\t     * @param {number|string} size\n\t     */\n\n\t  }, {\n\t    key: 'setTextSize',\n\t    value: function setTextSize(size) {\n\t      this.textSize = Number(size);\n\t      this.draw();\n\t    }\n\n\t    /**\n\t     * Sets an appropriate font size for the proportions of the tree.\n\t     *\n\t     * @param {number} ystep - the space between leaves.\n\t     */\n\n\t  }, {\n\t    key: 'setFontSize',\n\t    value: function setFontSize(ystep) {\n\t      this.textSize = this.calculateFontSize ? this.calculateFontSize(ystep) : Math.min(ystep / 2, 15);\n\t      this.canvas.font = this.textSize + 'pt ' + this.font;\n\t    }\n\n\t    /**\n\t     * @param {string} type - The name of a registered tree type.\n\t     * @param {boolean} [quiet] - Do not broadcast.\n\t     *\n\t     * @fires Tree#typechanged\n\t     */\n\n\t  }, {\n\t    key: 'setTreeType',\n\t    value: function setTreeType(type, quiet) {\n\t      if (!(type in _treeTypes2.default)) {\n\t        return fireEvent(this.containerElement, 'error', { error: new Error('\"' + type + '\" is not a known tree-type.') });\n\t      }\n\n\t      var oldType = this.treeType;\n\t      this.treeType = type;\n\t      this.type = _treeTypes2.default[type];\n\n\t      this.branchRenderer = _treeTypes2.default[type].branchRenderer;\n\t      this.prerenderer = _treeTypes2.default[type].prerenderer;\n\t      this.labelAlign = _treeTypes2.default[type].labelAlign;\n\t      this.calculateFontSize = _treeTypes2.default[type].calculateFontSize;\n\n\t      if (this.drawn) {\n\t        this.drawn = false;\n\t        this.draw();\n\t      }\n\n\t      if (!quiet) {\n\t        this.treeTypeChanged(oldType, type);\n\t      }\n\t    }\n\n\t    /**\n\t     * Resizes the canvas element.\n\t     *\n\t     * @param {number} width\n\t     * @param {number} height\n\t     */\n\n\t  }, {\n\t    key: 'setSize',\n\t    value: function setSize(width, height) {\n\t      this.canvas.canvas.width = width;\n\t      this.canvas.canvas.height = height;\n\t      if (this.navigator) {\n\t        this.navigator.resize();\n\t      }\n\t      this.adjustForPixelRatio();\n\t    }\n\n\t    /**\n\t     * Scale the size of the canvas element to the pixel ratio\n\t     */\n\n\t  }, {\n\t    key: 'adjustForPixelRatio',\n\t    value: function adjustForPixelRatio() {\n\t      var ratio = getPixelRatio(this.canvas);\n\n\t      this.canvas.canvas.style.height = this.canvas.canvas.height + 'px';\n\t      this.canvas.canvas.style.width = this.canvas.canvas.width + 'px';\n\n\t      if (ratio > 1) {\n\t        this.canvas.canvas.width *= ratio;\n\t        this.canvas.canvas.height *= ratio;\n\t      }\n\t    }\n\n\t    /**\n\t     * @returns {{ x: number, y: number }} point w/ x and y coordinates\n\t     */\n\n\t  }, {\n\t    key: 'getCentrePoint',\n\t    value: function getCentrePoint() {\n\t      var pixelRatio = getPixelRatio(this.canvas);\n\t      return {\n\t        x: this.canvas.canvas.width / 2 / pixelRatio,\n\t        y: this.canvas.canvas.height / 2 / pixelRatio\n\t      };\n\t    }\n\n\t    /**\n\t     * Zoom to a specific level over a specific point.\n\t     *\n\t     * @param {number} zoom\n\t     * @param {{ x: number, y: number }} [point=Tree#getCentrePoint]\n\t     */\n\n\t  }, {\n\t    key: 'setZoom',\n\t    value: function setZoom(zoom) {\n\t      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getCentrePoint(),\n\t          x = _ref.x,\n\t          y = _ref.y;\n\n\t      if (zoom > 0) {\n\t        var oldZoom = this.zoom;\n\t        this.zoom = zoom;\n\t        this.offsetx = this.calculateZoomedOffset(this.offsetx, x, oldZoom, zoom);\n\t        this.offsety = this.calculateZoomedOffset(this.offsety, y, oldZoom, zoom);\n\t        this.draw();\n\t      }\n\t    }\n\n\t    /**\n\t     * Zoom in or out from the current zoom level towards a point.\n\t     *\n\t     * @param {number} steps - positive to zoom in, negative to zoom out.\n\t     * @param {{ x: number, y: number }} point\n\t     */\n\n\t  }, {\n\t    key: 'smoothZoom',\n\t    value: function smoothZoom(steps, point) {\n\t      this.setZoom(Math.pow(10, Math.log(this.zoom) / Math.log(10) + steps * this.zoomFactor * 0.01), point);\n\t    }\n\n\t    /**\n\t     * Magic to enable zooming to a point.\n\t     *\n\t     * @author Khalil Abudahab\n\t     * @param {number} offset\n\t     * @param {number} coord\n\t     * @param {number} oldZoom\n\t     * @param {number} newZoom\n\t     */\n\n\t  }, {\n\t    key: 'calculateZoomedOffset',\n\t    value: function calculateZoomedOffset(offset, coord, oldZoom, newZoom) {\n\t      return -1 * ((-1 * offset + coord) / oldZoom * newZoom - coord);\n\t    }\n\n\t    /**\n\t     * Scale branches horizontally\n\t     *\n\t     * @param {number} scale\n\t     * @param {Object} point\n\t     */\n\n\t  }, {\n\t    key: 'setBranchScale',\n\t    value: function setBranchScale() {\n\t      var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\t      var point = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { x: this.canvas.canvas.width / 2, y: this.canvas.canvas.height / 2 };\n\n\t      var treeType = _treeTypes2.default[this.treeType];\n\t      if (!treeType.branchScalingAxis || scale < 0) {\n\t        return;\n\t      }\n\n\t      var previoudBranchLength = this.branchScalar;\n\t      this.branchScalar = this.initialBranchScalar * scale;\n\t      var scaleRatio = this.branchScalar / previoudBranchLength;\n\t      var offset = this['offset' + treeType.branchScalingAxis];\n\t      var oldPosition = point[treeType.branchScalingAxis];\n\t      var newPosition = (point[treeType.branchScalingAxis] - offset) * scaleRatio + offset;\n\t      this['offset' + treeType.branchScalingAxis] += oldPosition - newPosition;\n\t      this.draw();\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'toggleLabels',\n\t    value: function toggleLabels() {\n\t      this.showLabels = !this.showLabels;\n\t      this.draw();\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'setMaxLabelLength',\n\t    value: function setMaxLabelLength() {\n\t      var dimensions;\n\t      if (this.maxLabelLength[this.treeType] === undefined) {\n\t        this.maxLabelLength[this.treeType] = 0;\n\t      }\n\n\t      for (var i = 0; i < this.leaves.length; i++) {\n\t        dimensions = this.canvas.measureText(this.leaves[i].id);\n\t        // finding the maximum label length\n\t        if (dimensions.width > this.maxLabelLength[this.treeType]) {\n\t          this.maxLabelLength[this.treeType] = dimensions.width;\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * @event Tree#loading\n\t     */\n\n\t  }, {\n\t    key: 'loadStarted',\n\t    value: function loadStarted() {\n\t      fireEvent(this.containerElement, 'loading');\n\t    }\n\n\t    /**\n\t     * @event Tree#beforeFirstDraw\n\t     */\n\n\t  }, {\n\t    key: 'beforeFirstDraw',\n\t    value: function beforeFirstDraw() {\n\t      fireEvent(this.containerElement, 'beforeFirstDraw');\n\t    }\n\n\t    /**\n\t     * @event Tree#loaded\n\t     */\n\n\t  }, {\n\t    key: 'loadCompleted',\n\t    value: function loadCompleted() {\n\t      fireEvent(this.containerElement, 'loaded');\n\t    }\n\n\t    /**\n\t     * @event Tree#error\n\t     * @property {Error} error\n\t     */\n\n\t  }, {\n\t    key: 'loadError',\n\t    value: function loadError(error) {\n\t      fireEvent(this.containerElement, 'error', { error: error });\n\t    }\n\n\t    /**\n\t     * @event Tree#subtree\n\t     * @property {Branch} node\n\t     */\n\n\t  }, {\n\t    key: 'subtreeDrawn',\n\t    value: function subtreeDrawn(node) {\n\t      fireEvent(this.containerElement, 'subtree', { node: node });\n\t    }\n\n\t    /**\n\t     * @event Tree#updated\n\t     * @property {string[]} nodeIds\n\t     * @property {string} property\n\t     * @property {boolean} append\n\t     */\n\n\t  }, {\n\t    key: 'nodesUpdated',\n\t    value: function nodesUpdated(nodeIds, property) {\n\t      var append = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n\t      fireEvent(this.containerElement, 'updated', { nodeIds: nodeIds, property: property, append: append });\n\t    }\n\n\t    /**\n\t     * @event Tree#typechanged\n\t     * @property {string} oldType\n\t     * @property {string} newType\n\t     */\n\n\t  }, {\n\t    key: 'treeTypeChanged',\n\t    value: function treeTypeChanged(oldType, newType) {\n\t      fireEvent(this.containerElement, 'typechanged', { oldType: oldType, newType: newType });\n\t    }\n\n\t    /**\n\t     * @param {string}\n\t     * @param {function}\n\t     */\n\n\t  }, {\n\t    key: 'addListener',\n\t    value: function addListener(event, listener, target) {\n\t      if (!this.eventListeners[event]) this.eventListeners[event] = [];\n\t      this.eventListeners[event].push({ listener: listener, target: target });\n\t      addEvent(target || this.containerElement, event, listener);\n\t    }\n\n\t    /**\n\t     * @param {string}\n\t     * @param {function}\n\t     */\n\n\t  }, {\n\t    key: 'removeListener',\n\t    value: function removeListener(event, listener, target) {\n\t      removeEvent(target || this.containerElement, event, listener);\n\t    }\n\n\t    /**\n\t     * @param {Array.<Branch>} [leaves=this.leaves]\n\t     *\n\t     * @returns {Array.<Array.<number>>} bounds - Minimum x and y coordinates in\n\t     * the first array, maximum x and y coordinates in the second.\n\t     *\n\t     * @example const [ [ minx, miny ], [ maxx, maxy ] ] = tree.getBounds()\n\t     */\n\n\t  }, {\n\t    key: 'getBounds',\n\t    value: function getBounds() {\n\t      var leaves = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.leaves;\n\n\t      // this.leaves assumes bounds of whole tree, start from root\n\t      var initialBounds = leaves === this.leaves ? this.root : leaves[0];\n\t      var minx = initialBounds.startx;\n\t      var maxx = initialBounds.startx;\n\t      var miny = initialBounds.starty;\n\t      var maxy = initialBounds.starty;\n\n\t      var _iteratorNormalCompletion8 = true;\n\t      var _didIteratorError8 = false;\n\t      var _iteratorError8 = undefined;\n\n\t      try {\n\t        for (var _iterator8 = leaves[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t          var leaf = _step8.value;\n\n\t          var bounds = leaf.getBounds();\n\t          minx = Math.min(minx, bounds.minx);\n\t          maxx = Math.max(maxx, bounds.maxx);\n\t          miny = Math.min(miny, bounds.miny);\n\t          maxy = Math.max(maxy, bounds.maxy);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError8 = true;\n\t        _iteratorError8 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t            _iterator8.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError8) {\n\t            throw _iteratorError8;\n\t          }\n\t        }\n\t      }\n\n\t      return [[minx, miny], [maxx, maxy]];\n\t    }\n\n\t    /**\n\t     * Zoom to the provided leaves.\n\t     *\n\t     * @param {Array.<Branch>}\n\t     */\n\n\t  }, {\n\t    key: 'fitInPanel',\n\t    value: function fitInPanel(leaves) {\n\t      this.zoom = 1; // calculates consistent bounds\n\t      var bounds = this.getBounds(leaves);\n\t      var canvasSize = [this.canvas.canvas.width - this.padding * 2, this.canvas.canvas.height - this.padding * 2];\n\t      var treeSize = [bounds[1][0] - bounds[0][0], bounds[1][1] - bounds[0][1]];\n\t      var pixelRatio = getPixelRatio(this.canvas);\n\t      var xZoomRatio = canvasSize[0] / treeSize[0];\n\t      var yZoomRatio = canvasSize[1] / treeSize[1];\n\t      this.zoom = Math.min(xZoomRatio, yZoomRatio);\n\t      this.offsetx = -1 * bounds[0][0] * this.zoom;\n\t      this.offsety = -1 * bounds[0][1] * this.zoom;\n\t      if (xZoomRatio > yZoomRatio) {\n\t        this.offsetx += this.padding + (canvasSize[0] - treeSize[0] * this.zoom) / 2;\n\t        this.offsety += this.padding;\n\t      } else {\n\t        this.offsetx += this.padding;\n\t        this.offsety += this.padding + (canvasSize[1] - treeSize[1] * this.zoom) / 2;\n\t      }\n\t      this.offsetx = this.offsetx / pixelRatio;\n\t      this.offsety = this.offsety / pixelRatio;\n\t    }\n\n\t    /**\n\t     * Reapply data in {@link Tree#originalTree}.\n\t     */\n\n\t  }, {\n\t    key: 'resetTree',\n\t    value: function resetTree() {\n\t      if (!this.originalTree.branches) return;\n\n\t      this.branches = this.originalTree.branches;\n\t      var _iteratorNormalCompletion9 = true;\n\t      var _didIteratorError9 = false;\n\t      var _iteratorError9 = undefined;\n\n\t      try {\n\t        for (var _iterator9 = Object.keys(this.originalTree.branchLengths)[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t          var n = _step9.value;\n\n\t          this.branches[n].branchLength = this.originalTree.branchLengths[n];\n\t          this.branches[n].parent = this.originalTree.parents[n];\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError9 = true;\n\t        _iteratorError9 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t            _iterator9.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError9) {\n\t            throw _iteratorError9;\n\t          }\n\t        }\n\t      }\n\n\t      this.leaves = this.originalTree.leaves;\n\t      this.root = this.originalTree.root;\n\t    }\n\n\t    /**\n\t     * @param {Branch}\n\t     */\n\n\t  }, {\n\t    key: 'rotateBranch',\n\t    value: function rotateBranch(branch) {\n\t      this.branches[branch.id].rotate();\n\t    }\n\n\t    /**\n\t     * @returns {string} Newick representation of current object model.\n\t     */\n\n\t  }, {\n\t    key: 'exportNwk',\n\t    value: function exportNwk() {\n\t      var nwk = this.root.getNwk();\n\t      return nwk.substr(0, nwk.lastIndexOf(')') + 1) + ';';\n\t    }\n\n\t    /**\n\t     * Resize canvas element to container.\n\t     */\n\n\t  }, {\n\t    key: 'resizeToContainer',\n\t    value: function resizeToContainer() {\n\t      this.setSize(this.containerElement.offsetWidth, this.containerElement.offsetHeight);\n\t    }\n\n\t    /**\n\t     * Removes tracked event listeners and provides a hook for plugins to clean up\n\t     * after themselves.\n\t     */\n\n\t  }, {\n\t    key: 'cleanup',\n\t    value: function cleanup() {\n\t      this.removeEventListeners();\n\t    }\n\t  }, {\n\t    key: 'alignLabels',\n\t    get: function get() {\n\t      return this.showLabels && this.labelAlign && this.labelAlignEnabled;\n\t    },\n\t    set: function set(value) {\n\t      this.labelAlignEnabled = value;\n\t    }\n\t  }]);\n\n\t  return Tree;\n\t}();\n\n\t/**\n\t * @memberof Tree\n\t * @method\n\t * @see Tree#addListener\n\t */\n\n\n\tTree.prototype.on = Tree.prototype.addListener;\n\n\t/**\n\t * @memberof Tree\n\t * @method\n\t * @see Tree#removeListener\n\t */\n\tTree.prototype.off = Tree.prototype.removeListener;\n\n\texports.default = Tree;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.events = exports.dom = exports.constants = exports.canvas = undefined;\n\n\tvar _canvas2 = __webpack_require__(3);\n\n\tvar _canvas = _interopRequireWildcard(_canvas2);\n\n\tvar _constants2 = __webpack_require__(6);\n\n\tvar _constants = _interopRequireWildcard(_constants2);\n\n\tvar _dom2 = __webpack_require__(4);\n\n\tvar _dom = _interopRequireWildcard(_dom2);\n\n\tvar _events2 = __webpack_require__(5);\n\n\tvar _events = _interopRequireWildcard(_events2);\n\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n\texports.canvas = _canvas;\n\texports.constants = _constants;\n\texports.dom = _dom;\n\texports.events = _events;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getBackingStorePixelRatio = getBackingStorePixelRatio;\n\texports.getPixelRatio = getPixelRatio;\n\texports.translateClick = translateClick;\n\texports.translatePoint = translatePoint;\n\texports.undoPointTranslation = undoPointTranslation;\n\n\tvar _dom = __webpack_require__(4);\n\n\t/**\n\t * Return backing store pixel ratio of context.\n\t *\n\t * @param context - The rendering context of HTMl5 canvas.\n\t *\n\t */\n\tfunction getBackingStorePixelRatio(context) {\n\t  return context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || 1;\n\t}\n\n\tfunction getPixelRatio(canvas) {\n\t  return (window.devicePixelRatio || 1) / getBackingStorePixelRatio(canvas);\n\t}\n\n\tfunction translateClick(event, tree) {\n\t  var pixelRatio = getPixelRatio(tree.canvas);\n\t  return [(event.offsetX - tree.offsetx) / tree.zoom * pixelRatio, (event.offsetY - tree.offsety) / tree.zoom * pixelRatio];\n\t}\n\n\tfunction translatePoint() {\n\t  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { x: 0, y: 0 },\n\t      x = _ref.x,\n\t      y = _ref.y;\n\n\t  var phylocanvas = arguments[1];\n\n\t  var pixelRatio = getPixelRatio(phylocanvas.canvas);\n\t  return {\n\t    x: (x - phylocanvas.offsetx) / phylocanvas.zoom * pixelRatio,\n\t    y: (y - phylocanvas.offsety) / phylocanvas.zoom * pixelRatio\n\t  };\n\t}\n\n\tfunction undoPointTranslation() {\n\t  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { x: 0, y: 0 },\n\t      x = _ref2.x,\n\t      y = _ref2.y;\n\n\t  var phylocanvas = arguments[1];\n\n\t  var pixelRatio = getPixelRatio(phylocanvas.canvas);\n\t  return {\n\t    x: x / pixelRatio * phylocanvas.zoom + phylocanvas.offsetx,\n\t    y: y / pixelRatio * phylocanvas.zoom + phylocanvas.offsety\n\t  };\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.createBlobUrl = createBlobUrl;\n\texports.setupDownloadLink = setupDownloadLink;\n\texports.getX = getX;\n\texports.getY = getY;\n\texports.addClass = addClass;\n\texports.removeClass = removeClass;\n\texports.hasClass = hasClass;\n\texports.setCursorDragging = setCursorDragging;\n\texports.setCursorDrag = setCursorDrag;\n\n\tvar _events = __webpack_require__(5);\n\n\tvar windowURL = window.URL || window.webkitURL;\n\n\tfunction createBlobUrl(data) {\n\t  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text/plain;charset=utf-8';\n\n\t  var blob = new Blob([data], { type: type });\n\t  return windowURL.createObjectURL(blob);\n\t}\n\n\tfunction setupDownloadLink(url, filename) {\n\t  var anchor = document.createElement('a');\n\t  var isDownloadSupported = typeof anchor.download !== 'undefined';\n\n\t  anchor.href = url;\n\t  anchor.target = '_blank';\n\t  if (isDownloadSupported) {\n\t    anchor.download = filename;\n\t  }\n\t  (0, _events.fireEvent)(anchor, 'click');\n\t  if (isDownloadSupported) {\n\t    windowURL.revokeObjectURL(anchor.href);\n\t  }\n\t}\n\n\t/**\n\t * Get the x coordinate of oElement\n\t *\n\t * @param domElement - The element to get the X position of.\n\t *\n\t */\n\tfunction getX(domElement) {\n\t  var xValue = 0;\n\t  while (domElement) {\n\t    xValue += domElement.offsetLeft;\n\t    domElement = domElement.offsetParent;\n\t  }\n\t  return xValue;\n\t}\n\n\t/**\n\t * Get the y coordinate of oElement\n\t *\n\t * @param domElement - The element to get the Y position of.\n\t *\n\t */\n\tfunction getY(domElement) {\n\t  var yValue = 0;\n\t  while (domElement) {\n\t    yValue += domElement.offsetTop;\n\t    domElement = domElement.offsetParent;\n\t  }\n\t  return yValue;\n\t}\n\n\tfunction addClass(element, className) {\n\t  var classes = element.className.split(' ');\n\t  if (classes.indexOf(className) === -1) {\n\t    classes.push(className);\n\t    element.className = classes.join(' ');\n\t  }\n\t}\n\n\tfunction removeClass(element, className) {\n\t  var classes = element.className.split(' ');\n\t  var index = classes.indexOf(className);\n\n\t  if (index !== -1) {\n\t    classes.splice(index, 1);\n\t    element.className = classes.join(' ');\n\t  }\n\t}\n\n\tfunction hasClass(element, className) {\n\t  var classes = element.className.split(' ');\n\t  var index = classes.indexOf(className);\n\n\t  return index !== -1;\n\t}\n\n\t/**\n\t * Setting the cursor to dragging required vendor prefixes.\n\t * @param domElement\n\t */\n\tfunction setCursorDragging(domElement) {\n\t  domElement.style.cursor = \"-webkit-grabbing\";\n\t  domElement.style.cursor = \"-moz-grabbing\";\n\t  domElement.style.cursor = \"grabbing\";\n\t}\n\n\t/**\n\t * Setting the cursor to drag required vendor prefixes.\n\t * @param domElement\n\t */\n\tfunction setCursorDrag(domElement) {\n\t  domElement.style.cursor = \"-webkit-grab\";\n\t  domElement.style.cursor = \"-moz-grab\";\n\t  domElement.style.cursor = \"grab\";\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\texports.preventDefault = preventDefault;\n\texports.fireEvent = fireEvent;\n\texports.addEvent = addEvent;\n\texports.removeEvent = removeEvent;\n\texports.killEvent = killEvent;\n\texports.createHandler = createHandler;\n\tfunction preventDefault(event) {\n\t  event.preventDefault();\n\t  return false;\n\t}\n\n\tfunction fireEvent(element, type) {\n\t  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\t  var event; // The custom event that will be created\n\t  var param;\n\n\t  if (document.createEvent) {\n\t    event = document.createEvent('HTMLEvents');\n\t    event.initEvent(type, true, true);\n\t  } else {\n\t    event = document.createEventObject();\n\t    event.eventType = type;\n\t  }\n\n\t  event.eventName = type;\n\n\t  for (param in params) {\n\t    if (params.hasOwnProperty(param)) {\n\t      event[param] = params[param];\n\t    }\n\t  }\n\n\t  if (document.createEvent) {\n\t    element.dispatchEvent(event);\n\t  } else {\n\t    element.fireEvent('on' + event.eventType, event);\n\t  }\n\t}\n\n\tfunction addEvent(elem, event, fn) {\n\t  if (elem.addEventListener) {\n\t    elem.addEventListener(event, fn, false);\n\t  } else {\n\t    elem.attachEvent('on' + event, function () {\n\t      // set the this pointer same as addEventListener when fn is called\n\t      return fn.call(elem, window.event);\n\t    });\n\t  }\n\t}\n\n\tfunction removeEvent(elem, event, fn) {\n\t  if (elem.removeEventListener) {\n\t    elem.removeEventListener(event, fn, false);\n\t  } else {\n\t    console.warn('[Phylocanvas] Unable to remove event, removeEventListener not supported');\n\t  }\n\t}\n\n\tfunction killEvent(e) {\n\t  e.stopPropagation();\n\t  e.preventDefault();\n\t}\n\n\t/**\n\t * Creates a function which can be called from an event handler independent of\n\t * scope.\n\t *\n\t * @param {Object} obj the object the function will be called on\n\t * @param {String} func the name of the function to be called\n\t * @retuns {function}\n\t */\n\tfunction createHandler(obj, func) {\n\t  var handler;\n\n\t  if ((typeof func === 'undefined' ? 'undefined' : _typeof(func)) === _typeof('aaa')) {\n\t    handler = function handler(e) {\n\t      if (obj[func]) {\n\t        return obj[func](e);\n\t      }\n\t    };\n\t  } else {\n\t    handler = function handler() {\n\t      return func(obj);\n\t    };\n\t  }\n\t  return handler;\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * An enumeration of certain pre-defined angles to enable faster drawing of\n\t * trees. There are FORTYFIVE, QUARTER, HALF and FULL. Values are all radians.\n\t *\n\t * @enum\n\t * @memberof PhyloCanvas\n\t * @constant\n\t */\n\tvar Angles = exports.Angles = {\n\t  /**\n\t   * @constant\n\t   * @type double\n\t   * @description PI / 4\n\t   */\n\t  FORTYFIVE: Math.PI / 4,\n\t  /**\n\t   * @constant\n\t   * @type double\n\t   * @description PI / 2\n\t   */\n\t  QUARTER: Math.PI / 2,\n\t  /**\n\t   * @constant\n\t   * @type double\n\t   * @description PI\n\t   */\n\t  HALF: Math.PI,\n\t  /**\n\t   * @constant\n\t   * @type double\n\t   * @description PI * 2\n\t   */\n\t  FULL: 2 * Math.PI\n\t};\n\n\t/**\n\t * dictionary to translate newick annotations to branch renderer ids\n\t *\n\t * @enum\n\t * @memberof PhyloCanvas\n\t * @constant\n\t */\n\tvar Shapes = exports.Shapes = {\n\t  x: 'star',\n\t  s: 'square',\n\t  o: 'circle',\n\t  t: 'triangle'\n\t};\n\n\t/**\n\t * Standard set of predicates.\n\t *\n\t * @enum\n\t * @constant\n\t */\n\tvar Predicates = exports.Predicates = {\n\t  tautology: function tautology() {\n\t    return true;\n\t  },\n\t  contradiction: function contradiction() {\n\t    return false;\n\t  },\n\t  leafOnly: function leafOnly(node) {\n\t    return node.leaf;\n\t  },\n\t  nonLeaf: function nonLeaf(node) {\n\t    return !node.leaf;\n\t  }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar _treeTypes = __webpack_require__(8);\n\n\tvar _treeTypes2 = _interopRequireDefault(_treeTypes);\n\n\tvar _nodeRenderers = __webpack_require__(26);\n\n\tvar _nodeRenderers2 = _interopRequireDefault(_nodeRenderers);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar Angles = _utils.constants.Angles,\n\t    Shapes = _utils.constants.Shapes;\n\n\t// Caching object to reduce garbage\n\n\tvar _bounds = {\n\t  minx: 0,\n\t  maxx: 0,\n\t  miny: 0,\n\t  maxy: 0\n\t};\n\n\tvar _leafStyle = {\n\t  lineWidth: null,\n\t  strokeStyle: null,\n\t  fillStyle: null\n\t};\n\n\t/**\n\t * A branch of the tree.\n\t *\n\t * @class\n\t */\n\n\tvar Branch = function () {\n\t  function Branch() {\n\t    _classCallCheck(this, Branch);\n\n\t    /**\n\t     * The branch's angle clockwise from horizontal in radians (used paricularly\n\t     * for circular and radial trees).\n\t     *\n\t     * @type number\n\t     */\n\t    this.angle = 0;\n\n\t    /**\n\t     * The length of the branch.\n\t     *\n\t     * @type number\n\t     */\n\t    this.branchLength = 0;\n\n\t    /**\n\t     * The center of the end of the node on the x axis.\n\t     *\n\t     * @type number\n\t     */\n\t    this.centerx = 0;\n\n\t    /**\n\t     * The center of the end of the node on the y axis.\n\t     *\n\t     * @type number\n\t     */\n\t    this.centery = 0;\n\n\t    /**\n\t     * The branches that stem from this branch.\n\t     *\n\t     * @type Branch[]\n\t     */\n\t    this.children = [];\n\n\t    /**\n\t     * True if the node has been collapsed.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.collapsed = false;\n\n\t    /**\n\t     * Custom colour for branch, initialised as null to use tree-level default.\n\t     *\n\t     * @type string\n\t     */\n\t    this.colour = null;\n\n\t    /**\n\t     * Holds custom data for this node.\n\t     *\n\t     * @type object\n\t     */\n\t    this.data = {};\n\n\t    /**\n\t     * This node's highlight status.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.highlighted = false;\n\n\t    /**\n\t     * Whether the user is hovering over the node.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.hovered = false;\n\n\t    /**\n\t     * This node's unique ID.\n\t     *\n\t     * @type string\n\t     */\n\t    this.id = '';\n\n\t    /**\n\t     * The text label for this node.\n\t     *\n\t     * @type string\n\t     */\n\t    this.label = null;\n\n\t    /**\n\t     * If true, this node has no children.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.leaf = true;\n\n\t    /**\n\t     * The angle that the last child of this brach 'splays' at, used for\n\t     * circular trees.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.maxChildAngle = 0;\n\n\t    /**\n\t     * The angle that the last child of this brach 'splays' at, used for\n\t     * circular trees.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.minChildAngle = Angles.FULL;\n\n\t    /**\n\t     * What kind of teminal should be drawn on this node.\n\t     *\n\t     * @type string\n\t     * @default\n\t     */\n\t    this.nodeShape = 'circle';\n\n\t    /**\n\t     * The parent branch of this branch.\n\t     *\n\t     * @type Branch\n\t     */\n\t    this.parent = null;\n\n\t    /**\n\t     * The relative size of the terminal of this node.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.radius = 1.0;\n\n\t    /**\n\t     * True if this branch is currently selected.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.selected = false;\n\n\t    /**\n\t     * The x position of the start of the branch.\n\t     *\n\t     * @type number\n\t     */\n\t    this.startx = 0;\n\n\t    /**\n\t     * The y position of the start of the branch.\n\t     *\n\t     * @type number\n\t     */\n\t    this.starty = 0;\n\n\t    /**\n\t     * The length from the root of the tree to the tip of this branch.\n\t     *\n\t     * @type number\n\t     */\n\t    this.totalBranchLength = 0;\n\n\t    /**\n\t     * The tree object that this branch is part of.\n\t     *\n\t     * @type Tree\n\t     */\n\t    this.tree = null;\n\n\t    /**\n\t     * If true, this branch is not rendered.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.pruned = false;\n\n\t    /**\n\t     * Allows label to be individually styled.\n\t     *\n\t     * @type object\n\t     * @property {string} colour\n\t     * @property {number} textSize\n\t     * @property {string} font\n\t     * @property {string} format - e.g. bold, italic\n\t     */\n\t    this.labelStyle = {};\n\n\t    /**\n\t     * Allows label to be individually styled.\n\t     *\n\t     * @type object\n\t     * @property {string} colour\n\t     * @property {number} textSize\n\t     * @property {string} font\n\t     * @property {string} format - e.g. bold, italic\n\t     */\n\t    this.internalLabelStyle = null;\n\n\t    /**\n\t     * If false, branch does not respond to mouse events.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.interactive = true;\n\n\t    /**\n\t     * Defines leaf style for this branch.\n\t     *\n\t     * @type object\n\t     * @property {number} lineWidth\n\t     * @property {string} strokeStyle\n\t     * @property {string} fillStyle\n\t     *\n\t     * @example\n\t     * branch.leafStyle = {\n\t     *   lineWidth: 2,\n\t     *   strokeStyle: '#ff0000',\n\t     *   fillStyle: 'blue'\n\t     * };\n\t     */\n\t    this.leafStyle = {};\n\n\t    /**\n\t     * Minimum x coordintate.\n\t     *\n\t     * @type number\n\t     */\n\t    this.minx = 0;\n\n\t    /**\n\t     * Minimum y coordintate.\n\t     *\n\t     * @type number\n\t     */\n\t    this.miny = 0;\n\n\t    /**\n\t     * Maximum x coordintate.\n\t     *\n\t     * @type number\n\t     */\n\t    this.maxx = 0;\n\n\t    /**\n\t     * Maximum y coordintate.\n\t     *\n\t     * @type number\n\t     */\n\t    this.maxy = 0;\n\t  }\n\n\t  /**\n\t   * For branches without a label.\n\t   *\n\t   * @returns {string} new ID\n\t   */\n\n\n\t  _createClass(Branch, [{\n\t    key: 'clicked',\n\n\n\t    /**\n\t     * Determines if this branch has been clicked.\n\t     *\n\t     * @param {number}\n\t     * @param {number}\n\t     * @returns {Branch}\n\t     */\n\t    value: function clicked(x, y) {\n\t      if (this.dragging || this.hasCollapsedAncestor()) {\n\t        return null;\n\t      }\n\t      if (x < this.maxx && x > this.minx && y < this.maxy && y > this.miny) {\n\t        return this;\n\t      }\n\n\t      for (var i = this.children.length - 1; i >= 0; i--) {\n\t        var child = this.children[i].clicked(x, y);\n\t        if (child) {\n\t          return child;\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'drawLabel',\n\t    value: function drawLabel() {\n\t      var fSize = this.getTextSize();\n\t      var label = this.getLabel();\n\n\t      this.canvas.font = this.getFontString();\n\t      this.labelWidth = this.canvas.measureText(label).width;\n\n\t      // finding the maximum label length\n\t      if (this.tree.maxLabelLength[this.tree.treeType] === undefined) {\n\t        this.tree.maxLabelLength[this.tree.treeType] = 0;\n\t      }\n\t      if (this.labelWidth > this.tree.maxLabelLength[this.tree.treeType]) {\n\t        this.tree.maxLabelLength[this.tree.treeType] = this.labelWidth;\n\t      }\n\n\t      var tx = this.getLabelStartX();\n\n\t      if (this.tree.alignLabels) {\n\t        tx += Math.abs(this.tree.labelAlign.getLabelOffset(this));\n\t      }\n\n\t      if (this.angle > Angles.QUARTER && this.angle < Angles.HALF + Angles.QUARTER) {\n\t        this.canvas.rotate(Angles.HALF);\n\t        // Angles.Half text position changes\n\t        tx = -tx - this.labelWidth * 1;\n\t      }\n\n\t      this.canvas.beginPath();\n\t      this.canvas.fillStyle = this.getTextColour();\n\t      this.canvas.fillText(label, tx, fSize / 2);\n\t      this.canvas.closePath();\n\n\t      // Rotate canvas back to original position\n\t      if (this.angle > Angles.QUARTER && this.angle < Angles.HALF + Angles.QUARTER) {\n\t        this.canvas.rotate(Angles.HALF);\n\t      }\n\t    }\n\n\t    /**\n\t     * Sets the minimum and maximum coordinates of the branch.\n\t     *\n\t     * @param {number}\n\t     * @param {number}\n\t     * @param {number}\n\t     */\n\n\t  }, {\n\t    key: 'setNodeDimensions',\n\t    value: function setNodeDimensions(centerX, centerY, radius) {\n\t      var boundedRadius = radius;\n\n\t      if (radius * this.tree.zoom < 5 || !this.leaf) {\n\t        boundedRadius = 5 / this.tree.zoom;\n\t      }\n\n\t      this.minx = centerX - boundedRadius;\n\t      this.maxx = centerX + boundedRadius;\n\t      this.miny = centerY - boundedRadius;\n\t      this.maxy = centerY + boundedRadius;\n\t    }\n\t  }, {\n\t    key: 'getNumberOfLeaves',\n\t    value: function getNumberOfLeaves() {\n\t      var numberOfLeaves = 0;\n\t      var queue = [this];\n\t      while (queue.length) {\n\t        var node = queue.pop();\n\t        if (node.leaf) {\n\t          numberOfLeaves++;\n\t        } else {\n\t          var _iteratorNormalCompletion = true;\n\t          var _didIteratorError = false;\n\t          var _iteratorError = undefined;\n\n\t          try {\n\t            for (var _iterator = node.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t              var child = _step.value;\n\n\t              queue.push(child);\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError) {\n\t                throw _iteratorError;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return numberOfLeaves;\n\t    }\n\n\t    /**\n\t     * Draws the \"collapsed tip\".\n\t     *\n\t     * @param {number}\n\t     * @param {number}\n\t     */\n\n\t  }, {\n\t    key: 'drawCollapsed',\n\t    value: function drawCollapsed(centerX, centerY) {\n\t      var getCollapsedMeasurements = _treeTypes2.default[this.tree.treeType].getCollapsedMeasurements;\n\n\n\t      this.canvas.beginPath();\n\n\t      var _getCollapsedMeasurem = getCollapsedMeasurements(this),\n\t          angle = _getCollapsedMeasurem.angle,\n\t          radius = _getCollapsedMeasurem.radius;\n\n\t      var startAngle = this.angle - angle / 2;\n\t      var endAngle = this.angle + angle / 2;\n\n\t      this.canvas.moveTo(centerX, centerY);\n\t      this.canvas.arc(centerX, centerY, radius, startAngle, endAngle, false);\n\n\t      var gradient = this.canvas.createRadialGradient(centerX, centerY, radius, centerX, centerY, 0.2 * radius);\n\t      gradient.addColorStop(0, 'rgba(255, 255, 255, 0)');\n\t      gradient.addColorStop(1, this.tree.collapsedColour || this.getColour());\n\t      this.canvas.fillStyle = gradient;\n\n\t      this.canvas.fill();\n\n\t      this.canvas.closePath();\n\t    }\n\n\t    /**\n\t     * For aligned labels.\n\t     *\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'drawLabelConnector',\n\t    value: function drawLabelConnector() {\n\t      var _tree = this.tree,\n\t          highlightColour = _tree.highlightColour,\n\t          labelAlign = _tree.labelAlign;\n\n\t      this.canvas.save();\n\n\t      this.canvas.lineWidth = this.canvas.lineWidth / 4;\n\t      this.canvas.strokeStyle = this.isHighlighted ? highlightColour : this.getColour();\n\n\t      this.canvas.beginPath();\n\t      this.canvas.moveTo(this.getRadius(), 0);\n\t      this.canvas.lineTo(labelAlign.getLabelOffset(this) + this.getDiameter(), 0);\n\t      this.canvas.stroke();\n\t      this.canvas.closePath();\n\n\t      this.canvas.restore();\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'drawLeaf',\n\t    value: function drawLeaf() {\n\t      var _tree2 = this.tree,\n\t          alignLabels = _tree2.alignLabels,\n\t          canvas = _tree2.canvas;\n\n\n\t      if (alignLabels) {\n\t        this.drawLabelConnector();\n\t      }\n\n\t      canvas.save();\n\n\t      _nodeRenderers2.default[this.nodeShape](canvas, this.getRadius(), this.getLeafStyle());\n\n\t      canvas.restore();\n\n\t      if (this.tree.showLabels || this.tree.hoverLabel && this.isHighlighted) {\n\t        this.drawLabel();\n\t      }\n\t    }\n\n\t    /**\n\t     * @param {number}\n\t     * @param {number}\n\t     */\n\n\t  }, {\n\t    key: 'drawHighlight',\n\t    value: function drawHighlight(centerX, centerY) {\n\t      this.canvas.save();\n\t      this.canvas.beginPath();\n\n\t      this.canvas.strokeStyle = this.tree.highlightColour;\n\t      this.canvas.lineWidth = this.getHighlightLineWidth();\n\t      var radius = this.getHighlightRadius();\n\t      this.canvas.arc(centerX, centerY, radius, 0, Angles.FULL, false);\n\n\t      this.canvas.stroke();\n\n\t      this.canvas.closePath();\n\t      this.canvas.restore();\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'drawBranchLabels',\n\t    value: function drawBranchLabels() {\n\t      this.canvas.save();\n\t      var labelStyle = this.internalLabelStyle || this.tree.internalLabelStyle;\n\t      this.canvas.fillStyle = labelStyle.colour;\n\t      this.canvas.font = labelStyle.format + ' ' + labelStyle.textSize + 'pt ' + labelStyle.font;\n\t      this.canvas.textBaseline = 'middle';\n\t      this.canvas.textAlign = 'center';\n\t      var em = this.canvas.measureText('M').width * 2 / 3;\n\n\t      var x = this.tree.type.branchScalingAxis === 'y' ? this.centerx : (this.startx + this.centerx) / 2;\n\t      var y = this.tree.type.branchScalingAxis === 'x' ? this.centery : (this.starty + this.centery) / 2;\n\n\t      if (this.tree.showBranchLengthLabels && this.tree.branchLengthLabelPredicate(this)) {\n\t        this.canvas.fillText(this.branchLength.toFixed(2), x, y + em);\n\t      }\n\n\t      if (this.tree.showInternalNodeLabels && !this.leaf && this.label) {\n\t        this.canvas.fillText(this.label, x, y - em);\n\t      }\n\n\t      this.canvas.restore();\n\t    }\n\n\t    /**\n\t     * Draws the line of the branch.\n\t     */\n\n\t  }, {\n\t    key: 'drawNode',\n\t    value: function drawNode() {\n\t      var nodeRadius = this.getRadius();\n\t      /**\n\t       * theta = translation to center of node... ensures that the node edge is\n\t       * at the end of the branch so the branches don't look shorter than  they\n\t       * should\n\t       */\n\t      var theta = nodeRadius;\n\n\t      var centerX = this.leaf ? theta * Math.cos(this.angle) + this.centerx : this.centerx;\n\t      var centerY = this.leaf ? theta * Math.sin(this.angle) + this.centery : this.centery;\n\n\t      this.setNodeDimensions(centerX, centerY, nodeRadius);\n\n\t      if (this.collapsed) {\n\t        this.drawCollapsed(centerX, centerY);\n\t      } else if (this.leaf) {\n\t        this.canvas.save();\n\t        this.canvas.translate(this.centerx, this.centery);\n\t        this.canvas.rotate(this.angle);\n\n\t        this.drawLeaf();\n\n\t        this.canvas.restore();\n\t      }\n\n\t      if (this.isHighlighted) {\n\t        this.tree.highlighters.push(this.drawHighlight.bind(this, centerX, centerY));\n\t      }\n\n\t      if (this.tree.root !== this && this.tree.showBranchLengthLabels || this.tree.showInternalNodeLabels) {\n\t        this.drawBranchLabels();\n\t      }\n\t    }\n\n\t    /**\n\t     * Get property values of leaves under this branch.\n\t     *\n\t     * @param {string} - property name\n\t     * @returns {string[]}\n\t     */\n\n\t  }, {\n\t    key: 'getChildProperties',\n\t    value: function getChildProperties(property) {\n\t      if (this.leaf) {\n\t        // Fix for Issue #68\n\t        // Returning array, as expected\n\t        return [this[property]];\n\t      }\n\n\t      var children = [];\n\t      for (var x = 0; x < this.children.length; x++) {\n\t        children = children.concat(this.children[x].getChildProperties(property));\n\t      }\n\t      return children;\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getChildCount',\n\t    value: function getChildCount() {\n\t      if (this.leaf) return 1;\n\n\t      var children = 0;\n\t      for (var x = 0; x < this.children.length; x++) {\n\t        children += this.children[x].getChildCount();\n\t      }\n\t      return children;\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getChildYTotal',\n\t    value: function getChildYTotal() {\n\t      if (this.leaf) return this.centery;\n\n\t      var y = 0;\n\t      for (var i = 0; i < this.children.length; i++) {\n\t        y += this.children[i].getChildYTotal();\n\t      }\n\t      return y;\n\t    }\n\n\t    /**\n\t     * Set a boolean property of this branch and its descendants.\n\t     *\n\t     * @param {string}\n\t     * @param {boolean}\n\t     * @param {function=}\n\t     */\n\n\t  }, {\n\t    key: 'cascadeFlag',\n\t    value: function cascadeFlag(property, value, predicate) {\n\t      if (typeof this[property] === 'undefined') {\n\t        throw new Error('Unknown property: ' + property);\n\t      }\n\t      if (typeof predicate === 'undefined' || predicate(this, property, value)) {\n\t        this[property] = value;\n\t      }\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\n\t      try {\n\t        for (var _iterator2 = this.children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var child = _step2.value;\n\n\t          child.cascadeFlag(property, value, predicate);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * Resets the coordinates and angle of this branch and its descendants.\n\t     */\n\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var child;\n\t      var i;\n\n\t      this.startx = 0;\n\t      this.starty = 0;\n\t      this.centerx = 0;\n\t      this.centery = 0;\n\t      this.angle = null;\n\t      // this.totalBranchLength = 0;\n\t      this.minChildAngle = Angles.FULL;\n\t      this.maxChildAngle = 0;\n\t      for (i = 0; i < this.children.length; i++) {\n\t        try {\n\t          this.children[child].reset();\n\t        } catch (e) {\n\t          return e;\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * Set this branch to be the root.\n\t     */\n\n\t  }, {\n\t    key: 'redrawTreeFromBranch',\n\t    value: function redrawTreeFromBranch() {\n\t      if (this.collapsed) {\n\t        this.expand();\n\t      }\n\t      this.tree.redrawFromBranch(this);\n\t    }\n\n\t    /**\n\t     * Store this branch's children.\n\t     */\n\n\t  }, {\n\t    key: 'extractChildren',\n\t    value: function extractChildren() {\n\t      var _iteratorNormalCompletion3 = true;\n\t      var _didIteratorError3 = false;\n\t      var _iteratorError3 = undefined;\n\n\t      try {\n\t        for (var _iterator3 = this.children[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t          var child = _step3.value;\n\n\t          this.tree.storeNode(child);\n\t          child.extractChildren();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t            _iterator3.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError3) {\n\t            throw _iteratorError3;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * Walks up the tree looking for a collapsed branch.\n\t     *\n\t     * @returns {boolean}\n\t     */\n\n\t  }, {\n\t    key: 'hasCollapsedAncestor',\n\t    value: function hasCollapsedAncestor() {\n\t      if (this.parent) {\n\t        return this.parent.collapsed || this.parent.hasCollapsedAncestor();\n\t      }\n\t      return false;\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'collapse',\n\t    value: function collapse() {\n\t      // don't collapse the node if it is a leaf... that would be silly!\n\t      this.collapsed = this.leaf === false;\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'expand',\n\t    value: function expand() {\n\t      this.collapsed = false;\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'toggleCollapsed',\n\t    value: function toggleCollapsed() {\n\t      if (this.collapsed) {\n\t        this.expand();\n\t      } else {\n\t        this.collapse();\n\t      }\n\t    }\n\n\t    /**\n\t     * Sums the length of all branches from this one back to the root.\n\t     */\n\n\t  }, {\n\t    key: 'setTotalLength',\n\t    value: function setTotalLength() {\n\t      var c;\n\n\t      if (this.parent) {\n\t        this.totalBranchLength = this.parent.totalBranchLength + this.branchLength;\n\t        if (this.totalBranchLength > this.tree.maxBranchLength) {\n\t          this.tree.maxBranchLength = this.totalBranchLength;\n\t        }\n\t      } else {\n\t        this.totalBranchLength = this.branchLength;\n\t        this.tree.maxBranchLength = this.totalBranchLength;\n\t      }\n\t      for (c = 0; c < this.children.length; c++) {\n\t        this.children[c].setTotalLength();\n\t      }\n\t    }\n\n\t    /**\n\t     * Add a child branch to this branch.\n\t     *\n\t     * @param node {Branch} the node to add as a child\n\t     */\n\n\t  }, {\n\t    key: 'addChild',\n\t    value: function addChild(node) {\n\t      node.parent = this;\n\t      node.tree = this.tree;\n\t      this.leaf = false;\n\t      this.children.push(node);\n\t    }\n\n\t    /**\n\t     * Return the node colour of all the nodes that are children of this one.\n\t     *\n\t     * @returns {string[]}\n\t     */\n\n\t  }, {\n\t    key: 'getChildColours',\n\t    value: function getChildColours() {\n\t      var colours = [];\n\n\t      this.children.forEach(function (branch) {\n\t        var colour = branch.children.length === 0 ? branch.colour : branch.getColour();\n\t        // only add each colour once.\n\t        if (colours.indexOf(colour) === -1) {\n\t          colours.push(colour);\n\t        }\n\t      });\n\n\t      return colours;\n\t    }\n\n\t    /**\n\t     * Get the colour(s) of the branch itself.\n\t     *\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: 'getColour',\n\t    value: function getColour(specifiedColour) {\n\t      if (this.selected) {\n\t        return this.tree.selectedColour;\n\t      }\n\n\t      return specifiedColour || this.colour || this.tree.branchColour;\n\t    }\n\n\t    /**\n\t     * Create a newick representation of this branch.\n\t     *\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: 'getNwk',\n\t    value: function getNwk() {\n\t      var isRoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n\t      if (this.leaf) {\n\t        return this.label + ':' + this.branchLength;\n\t      }\n\n\t      var childNwks = this.children.map(function (child) {\n\t        return child.getNwk(false);\n\t      });\n\t      return '(' + childNwks.join(',') + '):' + this.branchLength + (isRoot ? ';' : '');\n\t    }\n\n\t    /**\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: 'getTextColour',\n\t    value: function getTextColour() {\n\t      if (this.selected) {\n\t        return this.tree.selectedColour;\n\t      }\n\n\t      if (this.isHighlighted) {\n\t        return this.tree.highlightColour;\n\t      }\n\n\t      if (this.tree.backColour && this.children.length) {\n\t        var childColours = this.getChildColours();\n\t        if (childColours.length === 1) {\n\t          return childColours[0];\n\t        }\n\t      }\n\t      return this.labelStyle.colour || this.colour || this.tree.branchColour;\n\t    }\n\n\t    /**\n\t     * Ensures the return value is always a string.\n\t     *\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: 'getLabel',\n\t    value: function getLabel() {\n\t      return this.label !== undefined && this.label !== null ? this.label : '';\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getTextSize',\n\t    value: function getTextSize() {\n\t      return this.labelStyle.textSize || this.tree.textSize;\n\t    }\n\n\t    /**\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: 'getFontString',\n\t    value: function getFontString() {\n\t      var font = this.labelStyle.font || this.tree.font;\n\t      return (this.labelStyle.format || '') + ' ' + this.getTextSize() + 'pt ' + font;\n\t    }\n\n\t    /**\n\t     * @returns {number} length of label in pixels\n\t     */\n\n\t  }, {\n\t    key: 'getLabelSize',\n\t    value: function getLabelSize() {\n\t      this.canvas.font = this.getFontString();\n\t      return this.canvas.measureText(this.getLabel()).width;\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getRadius',\n\t    value: function getRadius() {\n\t      var baseNodeSize = this.tree.baseNodeSize;\n\n\t      if (this.leaf) {\n\t        return baseNodeSize * this.radius;\n\t      }\n\t      return baseNodeSize / this.radius;\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getDiameter',\n\t    value: function getDiameter() {\n\t      return this.getRadius() * 2;\n\t    }\n\n\t    /**\n\t     * @returns {boolean}\n\t     */\n\n\t  }, {\n\t    key: 'hasLabelConnector',\n\t    value: function hasLabelConnector() {\n\t      if (!this.tree.alignLabels) {\n\t        return false;\n\t      }\n\t      return this.tree.labelAlign.getLabelOffset(this) > this.getDiameter();\n\t    }\n\n\t    /**\n\t     * Calculates label start position\n\t     * offset + aesthetic padding\n\t     *\n\t     * @return {number} x coordinate\n\t     */\n\n\t  }, {\n\t    key: 'getLabelStartX',\n\t    value: function getLabelStartX() {\n\t      var _getLeafStyle = this.getLeafStyle(),\n\t          lineWidth = _getLeafStyle.lineWidth;\n\n\t      var hasLabelConnector = this.hasLabelConnector();\n\n\t      var offset = this.getDiameter();\n\n\t      if (this.isHighlighted && !hasLabelConnector) {\n\t        offset += this.getHighlightSize() - this.getRadius();\n\t      }\n\n\t      return offset + Math.min(this.tree.labelPadding, this.tree.labelPadding / this.tree.zoom);\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getHighlightLineWidth',\n\t    value: function getHighlightLineWidth() {\n\t      return this.tree.highlightWidth / this.tree.zoom;\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getHighlightRadius',\n\t    value: function getHighlightRadius() {\n\t      var offset = this.getHighlightLineWidth() * this.tree.highlightSize;\n\n\t      offset += this.getLeafStyle().lineWidth / this.tree.highlightSize;\n\n\t      return this.leaf ? this.getRadius() + offset : offset * 0.666;\n\t    }\n\n\t    /**\n\t     * Combination of radius and line width\n\t     *\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getHighlightSize',\n\t    value: function getHighlightSize() {\n\t      return this.getHighlightRadius() + this.getHighlightLineWidth();\n\t    }\n\n\t    /**\n\t     * Reverses the order of the children. Runs the prerenderer again.\n\t     *\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'rotate',\n\t    value: function rotate() {\n\t      var newChildren = [];\n\n\t      for (var i = this.children.length; i--;) {\n\t        newChildren.push(this.children[i]);\n\t      }\n\n\t      this.children = newChildren;\n\n\t      this.tree.extractNestedBranches();\n\t      this.tree.draw(true);\n\t    }\n\n\t    /**\n\t     * @returns {number} index of this branch in its parent's array.\n\t     */\n\n\t  }, {\n\t    key: 'getChildNo',\n\t    value: function getChildNo() {\n\t      return this.parent.children.indexOf(this);\n\t    }\n\n\t    /**\n\t     * @param {Object} options\n\t     * @param {string} options.colour\n\t     * @param {string} options.shape\n\t     * @param {number} options.size\n\t     * @param {Object} options.leafStyle See {@link Branch#leafStyle}\n\t     * @param {Object} options.labelStyle See {@link Branch#labelStyle}\n\t     */\n\n\t  }, {\n\t    key: 'setDisplay',\n\t    value: function setDisplay(_ref) {\n\t      var colour = _ref.colour,\n\t          shape = _ref.shape,\n\t          size = _ref.size,\n\t          leafStyle = _ref.leafStyle,\n\t          labelStyle = _ref.labelStyle;\n\n\t      if (colour) {\n\t        this.colour = colour;\n\t      }\n\t      if (shape) {\n\t        this.nodeShape = Shapes[shape] ? Shapes[shape] : shape;\n\t      }\n\t      if (size) {\n\t        this.radius = size;\n\t      }\n\t      if (leafStyle) {\n\t        this.leafStyle = leafStyle;\n\t      }\n\t      if (labelStyle) {\n\t        this.labelStyle = labelStyle;\n\t      }\n\t    }\n\n\t    /**\n\t     * @returns {number} the node radius plus label length if labels are shown\n\t     */\n\n\t  }, {\n\t    key: 'getTotalLength',\n\t    value: function getTotalLength() {\n\t      var length = this.getRadius();\n\n\t      if (this.tree.showLabels || this.tree.hoverLabel && this.isHighlighted) {\n\t        length += this.getLabelStartX() + this.getLabelSize();\n\t      }\n\n\t      return length;\n\t    }\n\n\t    /**\n\t     * @returns {Object} bounds\n\t     * @property {number} minx\n\t     * @property {number} miny\n\t     * @property {number} maxx\n\t     * @property {number} maxy\n\t     */\n\n\t  }, {\n\t    key: 'getBounds',\n\t    value: function getBounds() {\n\t      var tree = this.tree;\n\n\t      var x = tree.alignLabels ? tree.labelAlign.getX(this) : this.centerx;\n\t      var y = tree.alignLabels ? tree.labelAlign.getY(this) : this.centery;\n\t      var nodeSize = this.getRadius();\n\t      var totalLength = this.getTotalLength();\n\n\t      var minx = void 0;\n\t      var maxx = void 0;\n\t      var miny = void 0;\n\t      var maxy = void 0;\n\t      if (this.angle > Angles.QUARTER && this.angle < Angles.HALF + Angles.QUARTER) {\n\t        minx = x + totalLength * Math.cos(this.angle);\n\t        miny = y + totalLength * Math.sin(this.angle);\n\t        maxx = x - nodeSize;\n\t        maxy = y - nodeSize;\n\t      } else {\n\t        minx = x - nodeSize;\n\t        miny = y - nodeSize;\n\t        maxx = x + totalLength * Math.cos(this.angle);\n\t        maxy = y + totalLength * Math.sin(this.angle);\n\t      }\n\n\t      // uses a caching object to reduce garbage\n\t      var step = tree.prerenderer.getStep(tree) / 2;\n\t      _bounds.minx = Math.min(minx, maxx, x - step);\n\t      _bounds.miny = Math.min(miny, maxy, y - step);\n\t      _bounds.maxx = Math.max(minx, maxx, x + step);\n\t      _bounds.maxy = Math.max(miny, maxy, y + step);\n\n\t      return _bounds;\n\t    }\n\n\t    /**\n\t     * Merges global and local styles together.\n\t     *\n\t     * @returns {Object}\n\t     * @see Branch#leafStyle\n\t     */\n\n\t  }, {\n\t    key: 'getLeafStyle',\n\t    value: function getLeafStyle() {\n\t      var _leafStyle2 = this.leafStyle,\n\t          strokeStyle = _leafStyle2.strokeStyle,\n\t          fillStyle = _leafStyle2.fillStyle;\n\t      var zoom = this.tree.zoom;\n\n\t      // uses a caching object to reduce garbage\n\n\t      _leafStyle.strokeStyle = this.getColour(strokeStyle);\n\t      _leafStyle.fillStyle = this.getColour(fillStyle);\n\n\t      var lineWidth = typeof this.leafStyle.lineWidth !== 'undefined' ? this.leafStyle.lineWidth : this.tree.lineWidth;\n\n\t      _leafStyle.lineWidth = lineWidth / zoom;\n\n\t      return _leafStyle;\n\t    }\n\t  }, {\n\t    key: 'isHighlighted',\n\n\n\t    /**\n\t     * True if the branch is highlighted or hovered.\n\t     *\n\t     * @type boolean\n\t     */\n\t    get: function get() {\n\t      return this.highlighted || this.hovered;\n\t    }\n\n\t    /**\n\t     * The canvas {@link https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D drawing context} of the parent tree.\n\t     *\n\t     * @type CanvasRenderingContext2D\n\t     */\n\n\t  }, {\n\t    key: 'canvas',\n\t    get: function get() {\n\t      return this.tree.canvas;\n\t    }\n\t  }], [{\n\t    key: 'generateId',\n\t    value: function generateId() {\n\t      return 'pcn' + this.lastId++;\n\t    }\n\t  }]);\n\n\t  return Branch;\n\t}();\n\n\t/**\n\t * Static counter for generated ids.\n\t *\n\t * @static\n\t * @memberof Branch\n\t * @type number\n\t */\n\n\n\tBranch.lastId = 0;\n\n\texports.default = Branch;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _rectangular = __webpack_require__(9);\n\n\tvar _rectangular2 = _interopRequireDefault(_rectangular);\n\n\tvar _circular = __webpack_require__(14);\n\n\tvar _circular2 = _interopRequireDefault(_circular);\n\n\tvar _radial = __webpack_require__(17);\n\n\tvar _radial2 = _interopRequireDefault(_radial);\n\n\tvar _diagonal = __webpack_require__(20);\n\n\tvar _diagonal2 = _interopRequireDefault(_diagonal);\n\n\tvar _hierarchical = __webpack_require__(23);\n\n\tvar _hierarchical2 = _interopRequireDefault(_hierarchical);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = {\n\t  rectangular: _rectangular2.default,\n\t  circular: _circular2.default,\n\t  radial: _radial2.default,\n\t  diagonal: _diagonal2.default,\n\t  hierarchical: _hierarchical2.default\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _BranchRenderer = __webpack_require__(10);\n\n\tvar _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _branchRenderer = __webpack_require__(12);\n\n\tvar _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n\tvar _prerenderer = __webpack_require__(13);\n\n\tvar _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n\tvar _constants = __webpack_require__(6);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar labelAlign = {\n\t  getX: function getX(node) {\n\t    return node.tree.farthestNodeFromRootX * node.tree.currentBranchScale;\n\t  },\n\t  getY: function getY(node) {\n\t    return node.centery;\n\t  },\n\t  getLabelOffset: function getLabelOffset(node) {\n\t    return node.tree.farthestNodeFromRootX * node.tree.currentBranchScale - node.centerx;\n\t  }\n\t};\n\n\texports.default = {\n\t  branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n\t  prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n\t  labelAlign: labelAlign,\n\t  branchScalingAxis: 'x',\n\t  getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n\t    return {\n\t      angle: _constants.Angles.QUARTER,\n\t      radius: branch.tree.step * branch.getNumberOfLeaves()\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Draws a branch.\n\t *\n\t * @class\n\t */\n\tvar BranchRenderer = function () {\n\n\t  /**\n\t   * @constructor\n\t   * @param {Object} options\n\t   * @param {function} options.draw\n\t   * @param {function} [options.prepareChild]\n\t   */\n\t  function BranchRenderer(options) {\n\t    _classCallCheck(this, BranchRenderer);\n\n\t    if (!options || !options.draw) {\n\t      throw new Error('`draw` function is required for branch renderers');\n\t    }\n\n\t    this.draw = options.draw;\n\t    this.prepareChild = options.prepareChild;\n\t  }\n\n\t  /**\n\t   * @param {Tree}\n\t   * @param {Branch}\n\t   * @param {boolean=} - if true, rendering skipped.\n\t   */\n\n\n\t  _createClass(BranchRenderer, [{\n\t    key: 'render',\n\t    value: function render(tree, branch, collapse) {\n\t      var i;\n\t      if (collapse || !branch) return;\n\n\t      if (branch.selected) {\n\t        branch.canvas.fillStyle = tree.selectedColour;\n\t      } else {\n\t        branch.canvas.fillStyle = branch.colour;\n\t      }\n\t      branch.canvas.strokeStyle = branch.getColour();\n\n\t      this.draw(tree, branch);\n\n\t      if (branch.pruned) {\n\t        return;\n\t      }\n\n\t      branch.drawNode();\n\n\t      for (i = 0; i < branch.children.length; i++) {\n\t        if (this.prepareChild) {\n\t          this.prepareChild(branch, branch.children[i]);\n\t        }\n\t        this.render(tree, branch.children[i], branch.collapsed || collapse);\n\t      }\n\t    }\n\t  }]);\n\n\t  return BranchRenderer;\n\t}();\n\n\texports.default = BranchRenderer;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Calculates the tree dimensions before the first draw.\n\t *\n\t * @class\n\t */\n\tvar Prerenderer = function () {\n\n\t  /**\n\t   * @constructor\n\t   * @param {Object} options\n\t   * @param {function} options.getStep - should return the space between each branch.\n\t   * @param {function} options.calculate\n\t   */\n\t  function Prerenderer(options) {\n\t    _classCallCheck(this, Prerenderer);\n\n\t    this.getStep = options.getStep;\n\t    this.calculate = options.calculate;\n\t  }\n\n\t  /**\n\t   * @param {Tree}\n\t   */\n\n\n\t  _createClass(Prerenderer, [{\n\t    key: \"run\",\n\t    value: function run(tree) {\n\t      var step = this.getStep(tree);\n\n\t      tree.root.startx = 0;\n\t      tree.root.starty = 0;\n\t      tree.root.centerx = 0;\n\t      tree.root.centery = 0;\n\t      tree.farthestNodeFromRootX = 0;\n\t      tree.farthestNodeFromRootY = 0;\n\t      tree.currentBranchScale = 1;\n\t      tree.step = step;\n\n\t      this.calculate(tree, step);\n\n\t      tree.initialBranchScalar = tree.branchScalar;\n\n\t      // Assign root startx and starty\n\t      tree.root.startx = tree.root.centerx;\n\t      tree.root.starty = tree.root.centery;\n\t      // Set font size for tree and its branches\n\t      tree.setFontSize(step);\n\t      tree.setMaxLabelLength();\n\t    }\n\t  }]);\n\n\t  return Prerenderer;\n\t}();\n\n\texports.default = Prerenderer;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  draw: function draw(tree, node) {\n\t    var branchLength = node.branchLength * tree.branchScalar;\n\n\t    node.angle = 0;\n\t    if (node.parent) {\n\t      node.centerx = node.startx + branchLength;\n\t    }\n\n\t    node.canvas.beginPath();\n\t    node.canvas.moveTo(node.startx, node.starty);\n\t    node.canvas.lineTo(node.startx, node.centery);\n\t    node.canvas.lineTo(node.centerx, node.centery);\n\t    node.canvas.stroke();\n\t    node.canvas.closePath();\n\t  },\n\t  prepareChild: function prepareChild(node, child) {\n\t    child.startx = node.centerx;\n\t    child.starty = node.centery;\n\t  }\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  getStep: function getStep(tree) {\n\t    return tree.fillCanvas ? tree.canvas.canvas.height / tree.leaves.length : Math.max(tree.canvas.canvas.height / tree.leaves.length, tree.leaves[0].getDiameter() + tree.labelPadding);\n\t  },\n\t  calculate: function calculate(tree, ystep) {\n\t    // Calculate branchScalar based on canvas width and total branch length\n\t    // This is used to transform the X coordinate based on the canvas width and no. of branches\n\t    tree.branchScalar = tree.canvas.canvas.width / tree.maxBranchLength;\n\n\t    // set initial positons of the branches\n\t    for (var i = 0; i < tree.leaves.length; i++) {\n\t      tree.leaves[i].angle = 0; // for rectangle\n\t      // Calculate and assign y coordinate for all the leaves\n\t      tree.leaves[i].centery = i > 0 ? tree.leaves[i - 1].centery + ystep : 0;\n\t      tree.leaves[i].centerx = tree.leaves[i].totalBranchLength * tree.branchScalar;\n\n\t      // Assign x,y position of the farthest node from the root\n\t      if (tree.leaves[i].centerx > tree.farthestNodeFromRootX) {\n\t        tree.farthestNodeFromRootX = tree.leaves[i].centerx;\n\t      }\n\t      if (tree.leaves[i].centery > tree.farthestNodeFromRootY) {\n\t        tree.farthestNodeFromRootY = tree.leaves[i].centery;\n\t      }\n\n\t      // Calculate and assign y coordinate for all the parent branches\n\t      for (var branch = tree.leaves[i]; branch.parent; branch = branch.parent) {\n\t        // Get all the children of a parent\n\t        var childrenArray = branch.parent.children;\n\t        // Assign parent's y coordinate\n\t        // Logic: Total ystep of all the children of this parent / 2\n\t        branch.parent.centery = (childrenArray[0].centery + childrenArray[childrenArray.length - 1].centery) / 2;\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _BranchRenderer = __webpack_require__(10);\n\n\tvar _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _branchRenderer = __webpack_require__(15);\n\n\tvar _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n\tvar _prerenderer = __webpack_require__(16);\n\n\tvar _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar labelAlign = {\n\t  getX: function getX(node) {\n\t    return node.centerx + node.labelOffsetX + node.getDiameter() * Math.cos(node.angle);\n\t  },\n\t  getY: function getY(node) {\n\t    return node.centery + node.labelOffsetY + node.getDiameter() * Math.sin(node.angle);\n\t  },\n\t  getLabelOffset: function getLabelOffset(node) {\n\t    return node.labelOffsetX / Math.cos(node.angle);\n\t  }\n\t};\n\n\texports.default = {\n\t  branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n\t  prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n\t  labelAlign: labelAlign,\n\t  getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n\t    var _branch$tree = branch.tree,\n\t        maxBranchLength = _branch$tree.maxBranchLength,\n\t        branchScalar = _branch$tree.branchScalar,\n\t        step = _branch$tree.step;\n\n\t    return {\n\t      angle: branch.getNumberOfLeaves() * step,\n\t      radius: (maxBranchLength - branch.totalBranchLength) * branchScalar\n\t    };\n\t  },\n\t  calculateFontSize: function calculateFontSize(ystep) {\n\t    return Math.min(ystep * 10 + 4, 40);\n\t  }\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  draw: function draw(tree, node) {\n\t    var branchLength = node.totalBranchLength * tree.branchScalar;\n\n\t    node.canvas.beginPath();\n\t    node.canvas.moveTo(node.startx, node.starty);\n\t    node.canvas.lineTo(node.centerx, node.centery);\n\t    node.canvas.stroke();\n\t    node.canvas.closePath();\n\n\t    node.canvas.strokeStyle = node.getColour();\n\n\t    if (node.children.length > 1 && !node.collapsed) {\n\t      node.canvas.beginPath();\n\t      node.canvas.arc(0, 0, branchLength, node.minChildAngle, node.maxChildAngle, node.maxChildAngle < node.minChildAngle);\n\t      node.canvas.stroke();\n\t      node.canvas.closePath();\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar Angles = _utils.constants.Angles;\n\texports.default = {\n\t  getStep: function getStep(tree) {\n\t    return Angles.FULL / tree.leaves.length;\n\t  },\n\t  calculate: function calculate(tree, step) {\n\t    tree.branchScalar = Math.min(tree.canvas.canvas.width, tree.canvas.canvas.height) / tree.maxBranchLength;\n\t    // work out radius of tree and the make branch scalar proportinal to the\n\t    var r = tree.leaves.length * tree.leaves[0].getDiameter() / Angles.FULL;\n\t    if (tree.branchScalar * tree.maxBranchLength > r) {\n\t      r = tree.branchScalar * tree.maxBranchLength;\n\t    } else {\n\t      tree.branchScalar = r / tree.maxBranchLength;\n\t    }\n\n\t    for (var i = 0; i < tree.leaves.length; i++) {\n\t      var node = tree.leaves[i];\n\n\t      node.angle = step * i;\n\t      node.startx = node.parent.totalBranchLength * tree.branchScalar * Math.cos(node.angle);\n\t      node.starty = node.parent.totalBranchLength * tree.branchScalar * Math.sin(node.angle);\n\t      node.centerx = node.totalBranchLength * tree.branchScalar * Math.cos(node.angle);\n\t      node.centery = node.totalBranchLength * tree.branchScalar * Math.sin(node.angle);\n\t      node.labelOffsetX = r * Math.cos(node.angle) - node.centerx;\n\t      node.labelOffsetY = r * Math.sin(node.angle) - node.centery;\n\n\t      for (; node.parent; node = node.parent) {\n\t        if (node.getChildNo() === 0) {\n\t          node.parent.angle = node.angle;\n\t          node.parent.minChildAngle = node.angle;\n\t        }\n\t        if (node.getChildNo() === node.parent.children.length - 1) {\n\t          node.parent.maxChildAngle = node.angle;\n\t          node.parent.angle = (node.parent.minChildAngle + node.parent.maxChildAngle) / 2;\n\t          node.parent.startx = (node.parent.totalBranchLength - node.parent.branchLength) * tree.branchScalar * Math.cos(node.parent.angle);\n\t          node.parent.starty = (node.parent.totalBranchLength - node.parent.branchLength) * tree.branchScalar * Math.sin(node.parent.angle);\n\t          node.parent.centerx = node.parent.totalBranchLength * tree.branchScalar * Math.cos(node.parent.angle);\n\t          node.parent.centery = node.parent.totalBranchLength * tree.branchScalar * Math.sin(node.parent.angle);\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _BranchRenderer = __webpack_require__(10);\n\n\tvar _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _branchRenderer = __webpack_require__(18);\n\n\tvar _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n\tvar _prerenderer = __webpack_require__(19);\n\n\tvar _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = {\n\t  branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n\t  prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n\t  getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n\t    var _branch$tree = branch.tree,\n\t        maxBranchLength = _branch$tree.maxBranchLength,\n\t        branchScalar = _branch$tree.branchScalar,\n\t        step = _branch$tree.step;\n\n\t    return {\n\t      angle: branch.getNumberOfLeaves() * step,\n\t      radius: (maxBranchLength - branch.totalBranchLength) * branchScalar\n\t    };\n\t  },\n\t  calculateFontSize: function calculateFontSize(ystep) {\n\t    return Math.min(ystep * 50 + 5, 15);\n\t  }\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  draw: function draw(tree, node) {\n\t    node.canvas.beginPath();\n\t    node.canvas.moveTo(node.startx, node.starty);\n\t    node.canvas.lineTo(node.centerx, node.centery);\n\t    node.canvas.stroke();\n\t    node.canvas.closePath();\n\t  }\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar Angles = _utils.constants.Angles;\n\n\n\tfunction prerenderNodes(tree, node) {\n\t  if (node.parent) {\n\t    node.startx = node.parent.centerx;\n\t    node.starty = node.parent.centery;\n\t  } else {\n\t    node.startx = 0;\n\t    node.starty = 0;\n\t  }\n\t  node.centerx = node.startx + node.branchLength * tree.branchScalar * Math.cos(node.angle);\n\t  node.centery = node.starty + node.branchLength * tree.branchScalar * Math.sin(node.angle);\n\n\t  for (var i = 0; i < node.children.length; i++) {\n\t    prerenderNodes(tree, node.children[i]);\n\t  }\n\t}\n\n\texports.default = {\n\t  getStep: function getStep(tree) {\n\t    return Angles.FULL / tree.leaves.length;\n\t  },\n\t  calculate: function calculate(tree, step) {\n\t    tree.branchScalar = Math.min(tree.canvas.canvas.width, tree.canvas.canvas.height) / tree.maxBranchLength;\n\n\t    for (var i = 0.0; i < tree.leaves.length; i += 1.0) {\n\t      tree.leaves[i].angle = step * i;\n\t      tree.leaves[i].centerx = tree.leaves[i].totalBranchLength * tree.branchScalar * Math.cos(tree.leaves[i].angle);\n\t      tree.leaves[i].centery = tree.leaves[i].totalBranchLength * tree.branchScalar * Math.sin(tree.leaves[i].angle);\n\n\t      for (var node = tree.leaves[i]; node.parent; node = node.parent) {\n\t        if (node.getChildNo() === 0) {\n\t          node.parent.angle = 0;\n\t        }\n\t        node.parent.angle += node.angle * node.getChildCount();\n\t        if (node.getChildNo() === node.parent.children.length - 1) {\n\t          node.parent.angle = node.parent.angle / node.parent.getChildCount();\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t    }\n\n\t    prerenderNodes(tree, tree.root);\n\t  }\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _BranchRenderer = __webpack_require__(10);\n\n\tvar _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _branchRenderer = __webpack_require__(21);\n\n\tvar _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n\tvar _prerenderer = __webpack_require__(22);\n\n\tvar _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n\tvar _constants = __webpack_require__(6);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = {\n\t  branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n\t  prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n\t  calculateFontSize: function calculateFontSize(ystep) {\n\t    return Math.min(ystep / 2, 10);\n\t  },\n\t  getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n\t    return {\n\t      angle: _constants.Angles.QUARTER,\n\t      radius: branch.tree.step * branch.getNumberOfLeaves()\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  draw: function draw(tree, node) {\n\t    node.angle = 0;\n\t    node.canvas.beginPath();\n\n\t    node.canvas.moveTo(node.startx, node.starty);\n\t    node.canvas.lineTo(node.centerx, node.centery);\n\t    node.canvas.stroke();\n\n\t    node.canvas.closePath();\n\t  },\n\t  prepareChild: function prepareChild(node, child) {\n\t    child.startx = node.centerx;\n\t    child.starty = node.centery;\n\t  }\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar Angles = _utils.constants.Angles;\n\texports.default = {\n\t  getStep: function getStep(tree) {\n\t    return Math.max(tree.canvas.canvas.height / tree.leaves.length, tree.leaves[0].getDiameter() + tree.labelPadding);\n\t  },\n\t  calculate: function calculate(tree, ystep) {\n\t    for (var i = 0; i < tree.leaves.length; i++) {\n\t      tree.leaves[i].centerx = 0;\n\t      tree.leaves[i].centery = i > 0 ? tree.leaves[i - 1].centery + ystep : 0;\n\t      tree.leaves[i].angle = 0;\n\n\t      for (var node = tree.leaves[i]; node.parent; node = node.parent) {\n\t        if (node.getChildNo() === node.parent.children.length - 1) {\n\t          node.parent.centery = node.parent.getChildYTotal() / node.parent.getChildCount(); // (node.parent.children.length - 1);\n\t          node.parent.centerx = node.parent.children[0].centerx + (node.parent.children[0].centery - node.parent.centery) * Math.tan(Angles.FORTYFIVE);\n\t          for (var j = 0; j < node.parent.children.length; j++) {\n\t            node.parent.children[j].startx = node.parent.centerx;\n\t            node.parent.children[j].starty = node.parent.centery;\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _BranchRenderer = __webpack_require__(10);\n\n\tvar _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _branchRenderer = __webpack_require__(24);\n\n\tvar _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n\tvar _prerenderer = __webpack_require__(25);\n\n\tvar _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n\tvar _constants = __webpack_require__(6);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar labelAlign = {\n\t  getX: function getX(node) {\n\t    return node.centerx;\n\t  },\n\t  getY: function getY(node) {\n\t    return node.tree.farthestNodeFromRootY * node.tree.currentBranchScale;\n\t  },\n\t  getLabelOffset: function getLabelOffset(node) {\n\t    return node.tree.farthestNodeFromRootY * node.tree.currentBranchScale - node.centery;\n\t  }\n\t};\n\n\texports.default = {\n\t  branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n\t  prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n\t  labelAlign: labelAlign,\n\t  branchScalingAxis: 'y',\n\t  getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n\t    return {\n\t      angle: _constants.Angles.QUARTER,\n\t      radius: branch.tree.step * branch.getNumberOfLeaves()\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  draw: function draw(tree, node) {\n\t    var branchLength = node.branchLength * tree.branchScalar;\n\n\t    if (node.parent) {\n\t      node.centery = node.starty + branchLength;\n\t    }\n\n\t    node.canvas.beginPath();\n\n\t    if (node !== node.tree.root) {\n\t      node.canvas.moveTo(node.startx, node.starty);\n\t      node.canvas.lineTo(node.centerx, node.starty);\n\t    }\n\n\t    node.canvas.lineTo(node.centerx, node.centery);\n\t    node.canvas.stroke();\n\n\t    node.canvas.closePath();\n\t  },\n\t  prepareChild: function prepareChild(node, child) {\n\t    child.startx = node.centerx;\n\t    child.starty = node.centery;\n\t  }\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar Angles = _utils.constants.Angles;\n\texports.default = {\n\t  getStep: function getStep(tree) {\n\t    return tree.fillCanvas ? tree.canvas.canvas.width / tree.leaves.length : Math.max(tree.canvas.canvas.width / tree.leaves.length, tree.leaves[0].getDiameter() + tree.labelPadding);\n\t  },\n\t  calculate: function calculate(tree, xstep) {\n\t    tree.branchScalar = tree.canvas.canvas.height / tree.maxBranchLength;\n\n\t    for (var i = 0; i < tree.leaves.length; i++) {\n\t      tree.leaves[i].angle = Angles.QUARTER;\n\t      tree.leaves[i].centerx = i > 0 ? tree.leaves[i - 1].centerx + xstep : 0;\n\t      tree.leaves[i].centery = tree.leaves[i].totalBranchLength * tree.branchScalar;\n\n\t      for (var node = tree.leaves[i]; node.parent; node = node.parent) {\n\t        if (node.getChildNo() === 0) {\n\t          node.parent.centerx = node.centerx;\n\t        }\n\n\t        if (node.getChildNo() === node.parent.children.length - 1) {\n\t          node.parent.angle = Angles.QUARTER;\n\t          node.parent.centerx = (node.parent.centerx + node.centerx) / 2;\n\t          node.parent.centery = node.parent.totalBranchLength * tree.branchScalar;\n\t          for (var j = 0; j < node.parent.children.length; j++) {\n\t            node.parent.children[j].startx = node.parent.centerx;\n\t            node.parent.children[j].starty = node.parent.centery;\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      // Assign x,y position of the farthest node from the root\n\t      if (tree.leaves[i].centerx > tree.farthestNodeFromRootX) {\n\t        tree.farthestNodeFromRootX = tree.leaves[i].centerx;\n\t      }\n\t      if (tree.leaves[i].centery > tree.farthestNodeFromRootY) {\n\t        tree.farthestNodeFromRootY = tree.leaves[i].centery;\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar Angles = _utils.constants.Angles;\n\n\n\tfunction drawConnector(canvas, connectingOffset) {\n\t  canvas.beginPath();\n\t  canvas.moveTo(0, 0);\n\t  canvas.lineTo(connectingOffset, 0);\n\t  canvas.stroke();\n\t  canvas.closePath();\n\t}\n\n\tfunction commitPath(canvas, _ref) {\n\t  var lineWidth = _ref.lineWidth,\n\t      strokeStyle = _ref.strokeStyle,\n\t      fillStyle = _ref.fillStyle;\n\n\t  canvas.lineWidth = lineWidth;\n\t  canvas.strokeStyle = strokeStyle;\n\t  canvas.fillStyle = fillStyle;\n\n\t  canvas.fill();\n\t  if (lineWidth > 0 && strokeStyle !== fillStyle) {\n\t    canvas.stroke();\n\t  }\n\t}\n\n\tvar lengthOfSquareSide = function lengthOfSquareSide(radius) {\n\t  return radius * Math.sqrt(2);\n\t};\n\n\t/**\n\t * @function nodeRenderer\n\t * @description A pure function to render a leaf.\n\t *\n\t * @param {CanvasRenderingContext2D} canvas - See {@link Tree#canvas}\n\t * @param {number} radius - See {@link Branch#radius}\n\t * @param {Object} style - See {@link Branch#leafStyle}\n\t */\n\n\texports.default = {\n\t  circle: function circle(canvas, radius, style) {\n\t    // circle takes same area as square inside given radius\n\t    var scaledArea = Math.pow(lengthOfSquareSide(radius), 2);\n\t    var scaledRadius = Math.sqrt(scaledArea / Math.PI);\n\n\t    drawConnector(canvas, radius - scaledRadius);\n\n\t    canvas.beginPath();\n\t    canvas.arc(radius, 0, scaledRadius, 0, Angles.FULL, false);\n\t    canvas.closePath();\n\n\t    commitPath(canvas, style);\n\t  },\n\t  square: function square(canvas, radius, style) {\n\t    var lengthOfSide = lengthOfSquareSide(radius);\n\t    var startX = radius - lengthOfSide / 2;\n\n\t    drawConnector(canvas, startX);\n\n\t    canvas.beginPath();\n\t    canvas.moveTo(startX, 0);\n\t    canvas.lineTo(startX, lengthOfSide / 2);\n\t    canvas.lineTo(startX + lengthOfSide, lengthOfSide / 2);\n\t    canvas.lineTo(startX + lengthOfSide, -lengthOfSide / 2);\n\t    canvas.lineTo(startX, -lengthOfSide / 2);\n\t    canvas.lineTo(startX, 0);\n\t    canvas.closePath();\n\n\t    commitPath(canvas, style);\n\t  },\n\t  star: function star(canvas, radius, style) {\n\t    var cx = radius;\n\t    var cy = 0;\n\t    var spikes = 5;\n\t    var outerRadius = radius;\n\t    var innerRadius = outerRadius * 0.5;\n\t    var step = Math.PI / spikes;\n\n\t    drawConnector(canvas, outerRadius - innerRadius);\n\n\t    var rot = Math.PI / 2 * 3;\n\n\t    canvas.beginPath();\n\t    canvas.moveTo(cx, cy - outerRadius);\n\t    for (var i = 0; i < spikes; i++) {\n\t      var x = cx + Math.cos(rot) * outerRadius;\n\t      var y = cy + Math.sin(rot) * outerRadius;\n\t      canvas.lineTo(x, y);\n\t      rot += step;\n\n\t      x = cx + Math.cos(rot) * innerRadius;\n\t      y = cy + Math.sin(rot) * innerRadius;\n\t      canvas.lineTo(x, y);\n\t      rot += step;\n\t    }\n\t    canvas.lineTo(cx, cy - outerRadius);\n\t    canvas.closePath();\n\n\t    commitPath(canvas, style);\n\t  },\n\t  triangle: function triangle(canvas, radius, style) {\n\t    var lengthOfSide = 2 * radius * Math.cos(30 * Math.PI / 180);\n\t    var height = Math.sqrt(3) / 2 * lengthOfSide;\n\t    var midpoint = 1 / Math.sqrt(3) * (lengthOfSide / 2);\n\n\t    drawConnector(canvas, radius - midpoint);\n\n\t    canvas.beginPath();\n\t    canvas.moveTo(radius, midpoint);\n\t    canvas.lineTo(radius + lengthOfSide / 2, midpoint);\n\t    canvas.lineTo(radius, -(height - midpoint));\n\t    canvas.lineTo(radius - lengthOfSide / 2, midpoint);\n\t    canvas.lineTo(radius, midpoint);\n\t    canvas.closePath();\n\n\t    commitPath(canvas, style);\n\t  }\n\t};\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Tooltip base class\n\t *\n\t * @class\n\t */\n\tvar Tooltip = function () {\n\t  /**\n\t   * @constructor\n\t   * @param {Tree} tree instance\n\t   * @param {Object} [options]\n\t   * @param {string} [options.className=phylocanvas-tooltip]\n\t   * @param {HTMLElement} [options.element=document.createElement('div')]\n\t   * @param {number} [options.zIndex=2000]\n\t   * @param {HTMLElement} [options.parent=tree.containerElement]\n\t   */\n\t  function Tooltip(tree) {\n\t    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t        _ref$className = _ref.className,\n\t        className = _ref$className === undefined ? 'phylocanvas-tooltip' : _ref$className,\n\t        _ref$element = _ref.element,\n\t        element = _ref$element === undefined ? document.createElement('div') : _ref$element,\n\t        _ref$zIndex = _ref.zIndex,\n\t        zIndex = _ref$zIndex === undefined ? 2000 : _ref$zIndex,\n\t        _ref$parent = _ref.parent,\n\t        parent = _ref$parent === undefined ? tree.containerElement : _ref$parent;\n\n\t    _classCallCheck(this, Tooltip);\n\n\t    this.tree = tree;\n\t    this.element = element;\n\t    this.element.className = className;\n\t    this.element.style.display = 'none';\n\t    this.element.style.position = 'fixed';\n\t    this.element.style.zIndex = zIndex;\n\t    this.closed = true;\n\n\t    parent.appendChild(this.element);\n\t  }\n\n\t  /**\n\t   * @method\n\t   */\n\n\n\t  _createClass(Tooltip, [{\n\t    key: 'close',\n\t    value: function close() {\n\t      this.element.style.display = 'none';\n\t      this.closed = true;\n\t    }\n\n\t    /**\n\t     * @param {number} [x=100]\n\t     * @param {number} [y=100]\n\t     * @param {Branch} [node]\n\t     */\n\n\t  }, {\n\t    key: 'open',\n\t    value: function open() {\n\t      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n\t      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\t      var node = arguments[2];\n\n\t      while (this.element.hasChildNodes()) {\n\t        this.element.removeChild(this.element.firstChild);\n\t      }\n\n\t      this.createContent(node);\n\n\t      this.element.style.top = y + 'px';\n\t      this.element.style.left = x + 'px';\n\n\t      this.element.style.display = 'block';\n\n\t      this.closed = false;\n\t    }\n\n\t    /**\n\t     * @throws an error if not overridden by a subclass.\n\t     */\n\n\t  }, {\n\t    key: 'createContent',\n\t    value: function createContent() {\n\t      throw new Error('Not implemented');\n\t    }\n\t  }]);\n\n\t  return Tooltip;\n\t}();\n\n\texports.default = Tooltip;\n\n\t// named export cannot have a doclet\n\t// @extends not working well\n\n\tvar ChildNodesTooltip = exports.ChildNodesTooltip = function (_Tooltip) {\n\t  _inherits(ChildNodesTooltip, _Tooltip);\n\n\t  /**\n\t   * Tooltip displaying number of child nodes.\n\t   *\n\t   * @constructor\n\t   * @param {Tree} tree instance\n\t   * @param {Object} [options]\n\t   * @see Tooltip\n\t   */\n\t  function ChildNodesTooltip(tree, options) {\n\t    _classCallCheck(this, ChildNodesTooltip);\n\n\t    var _this = _possibleConstructorReturn(this, (ChildNodesTooltip.__proto__ || Object.getPrototypeOf(ChildNodesTooltip)).call(this, tree, options));\n\n\t    _this.element.style.background = 'rgba(97, 97, 97, 0.9)';\n\t    _this.element.style.color = '#fff';\n\t    _this.element.style.cursor = 'pointer';\n\t    _this.element.style.padding = '8px';\n\t    _this.element.style.marginTop = '16px';\n\t    _this.element.style.borderRadius = '2px';\n\t    _this.element.style.textAlign = 'center';\n\t    _this.element.style.fontFamily = _this.tree.font || 'sans-serif';\n\t    _this.element.style.fontSize = '10px';\n\t    _this.element.style.fontWeight = '500';\n\t    return _this;\n\t  }\n\n\t  /**\n\t   * Adds a text node containing the number of children.\n\t   * @override\n\t   */\n\n\n\t  _createClass(ChildNodesTooltip, [{\n\t    key: 'createContent',\n\t    value: function createContent(node) {\n\t      var textNode = document.createTextNode(node.getChildProperties('id').length);\n\t      this.element.appendChild(textNode);\n\t    }\n\t  }]);\n\n\t  return ChildNodesTooltip;\n\t}(Tooltip);\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _Parser = __webpack_require__(29);\n\n\tvar _Parser2 = _interopRequireDefault(_Parser);\n\n\tvar _newick = __webpack_require__(30);\n\n\tvar _newick2 = _interopRequireDefault(_newick);\n\n\tvar _nexus = __webpack_require__(31);\n\n\tvar _nexus2 = _interopRequireDefault(_nexus);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = {\n\t  nexus: new _Parser2.default(_nexus2.default),\n\t  newick: new _Parser2.default(_newick2.default)\n\t};\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar Parser = function () {\n\t  function Parser(_ref) {\n\t    var format = _ref.format,\n\t        parseFn = _ref.parseFn,\n\t        fileExtension = _ref.fileExtension,\n\t        validator = _ref.validator;\n\n\t    _classCallCheck(this, Parser);\n\n\t    this.format = format;\n\t    this.parseFn = parseFn;\n\t    this.fileExtension = fileExtension;\n\t    this.validator = validator;\n\t  }\n\n\t  _createClass(Parser, [{\n\t    key: \"parse\",\n\t    value: function parse(_ref2, callback) {\n\t      var formatString = _ref2.formatString,\n\t          root = _ref2.root,\n\t          _ref2$options = _ref2.options,\n\t          options = _ref2$options === undefined ? { validate: true } : _ref2$options;\n\n\t      if (formatString.match(this.validator) || options.validate === false) {\n\t        return this.parseFn({ string: formatString, root: root, options: options }, callback);\n\t      }\n\t      return callback(new Error(\"Format string does not validate as \\\"\" + this.format + \"\\\"\"));\n\t    }\n\t  }]);\n\n\t  return Parser;\n\t}();\n\n\texports.default = Parser;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _Branch = __webpack_require__(7);\n\n\tvar _Branch2 = _interopRequireDefault(_Branch);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar format = 'newick';\n\tvar fileExtension = /\\.nwk$/;\n\tvar validator = /^[\\w\\W\\.\\*\\:(\\),-\\/]+;?\\s*$/gi;\n\n\tfunction isTerminatingChar(terminatingChar) {\n\t  return this === terminatingChar;\n\t}\n\n\tvar labelTerminatingChars = [':', ',', ')', ';'];\n\n\tfunction parseLabel(string) {\n\t  var label = '';\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = string[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var char = _step.value;\n\n\t      if (labelTerminatingChars.some(isTerminatingChar.bind(char))) {\n\t        break;\n\t      }\n\t      label += char;\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  return label;\n\t}\n\n\tfunction parseAnnotations(label, branch) {\n\t  var segments = label.split('**');\n\t  var displayOptions = {};\n\t  branch.id = segments[0];\n\t  if (segments.length === 1) return;\n\t  segments = segments[1].split('*');\n\n\t  for (var b = 0; b < segments.length; b += 2) {\n\t    var value = segments[b + 1];\n\t    switch (segments[b]) {\n\t      case 'nsz':\n\t        displayOptions.size = window.parseInt(value);\n\t        break;\n\t      case 'nsh':\n\t        displayOptions.shape = value;\n\t        break;\n\t      case 'ncol':\n\t        displayOptions.colour = value;\n\t        break;\n\t      default:\n\t        break;\n\t    }\n\t  }\n\t  branch.setDisplay(displayOptions);\n\t}\n\n\tvar nodeTerminatingChars = [')', ',', ';'];\n\n\tfunction parseBranchLength(string) {\n\t  var nodeLength = '';\n\t  var _iteratorNormalCompletion2 = true;\n\t  var _didIteratorError2 = false;\n\t  var _iteratorError2 = undefined;\n\n\t  try {\n\t    for (var _iterator2 = string[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t      var char = _step2.value;\n\n\t      if (nodeTerminatingChars.some(isTerminatingChar.bind(char))) {\n\t        break;\n\t      }\n\t      nodeLength += char;\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError2 = true;\n\t    _iteratorError2 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t        _iterator2.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError2) {\n\t        throw _iteratorError2;\n\t      }\n\t    }\n\t  }\n\n\t  return nodeLength;\n\t}\n\n\tfunction parseBranch(branch, string, index) {\n\t  var label = parseLabel(string.slice(index));\n\t  var postLabelIndex = index + label.length;\n\t  var branchLengthStr = '';\n\t  if (label.match(/\\*/)) {\n\t    parseAnnotations(label, branch);\n\t  }\n\n\t  if (string[postLabelIndex] === ':') {\n\t    branchLengthStr = parseBranchLength(string.slice(postLabelIndex + 1));\n\t    branch.branchLength = Math.max(parseFloat(branchLengthStr), 0);\n\t  } else {\n\t    branch.branchLength = 0;\n\t  }\n\n\t  if (label) {\n\t    branch.label = label;\n\t  }\n\t  branch.id = label || _Branch2.default.generateId();\n\t  return postLabelIndex + branchLengthStr.length;\n\t}\n\n\tfunction parseFn(_ref, callback) {\n\t  var string = _ref.string,\n\t      root = _ref.root;\n\n\t  var cleanString = string.replace(/(\\r|\\n)/g, '');\n\t  var currentNode = root;\n\n\t  for (var i = 0; i < cleanString.length; i++) {\n\t    var node = void 0;\n\t    switch (cleanString[i]) {\n\t      case '(':\n\t        // new Child\n\t        node = new _Branch2.default();\n\t        currentNode.addChild(node);\n\t        currentNode = node;\n\t        break;\n\t      case ')':\n\t        // return to parent\n\t        currentNode = currentNode.parent;\n\t        break;\n\t      case ',':\n\t        // new sibling\n\t        node = new _Branch2.default();\n\t        currentNode.parent.addChild(node);\n\t        currentNode = node;\n\t        break;\n\t      case ';':\n\t        break;\n\t      default:\n\t        try {\n\t          i = parseBranch(currentNode, cleanString, i);\n\t        } catch (e) {\n\t          return callback(e);\n\t        }\n\t        break;\n\t    }\n\t  }\n\t  return callback();\n\t}\n\n\texports.default = {\n\t  format: format,\n\t  fileExtension: fileExtension,\n\t  validator: validator,\n\t  parseFn: parseFn\n\t};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _newick = __webpack_require__(30);\n\n\tvar format = 'nexus';\n\tvar fileExtension = /\\.n(ex|xs)$/;\n\tvar validator = /^#NEXUS[\\s\\n;\\w\\W\\.\\*\\:(\\),-=\\[\\]\\/&]+$/i;\n\n\tfunction parseFn(_ref, callback) {\n\t  var string = _ref.string,\n\t      root = _ref.root,\n\t      options = _ref.options;\n\n\t  if (!string.match(/BEGIN TREES/gi)) {\n\t    return callback(new Error('The nexus file does not contain a tree block'));\n\t  }\n\n\t  var name = options.name;\n\n\t  // get everything between BEGIN TREES and next END;\n\n\t  var treeSection = string.match(/BEGIN TREES;[\\S\\s]+END;/i)[0].replace(/BEGIN TREES;\\n/i, '').replace(/END;/i, '');\n\t  // get translate section\n\n\t  var leafNameObject = {};\n\t  var translateSection = treeSection.match(/TRANSLATE[^;]+;/i);\n\t  if (translateSection && translateSection.length) {\n\t    translateSection = translateSection[0];\n\t    //remove translate section from tree section\n\t    treeSection = treeSection.replace(translateSection, '');\n\n\t    //parse translate section into kv pairs\n\t    translateSection = translateSection.replace(/translate|;/gi, '');\n\n\t    var tIntArr = translateSection.split(',');\n\t    for (var i = 0; i < tIntArr.length; i++) {\n\t      var ia = tIntArr[i].trim().replace('\\n', '').split(' ');\n\t      if (ia[0] && ia[1]) {\n\t        leafNameObject[ia[0].trim()] = ia[1].trim();\n\t      }\n\t    }\n\t  }\n\n\t  // find each line starting with tree.\n\t  var tArr = treeSection.split('\\n');\n\t  var trees = {};\n\t  // id name is '' or does not exist, ask user to choose which tree.\n\t  for (var _i = 0; _i < tArr.length; _i++) {\n\t    if (tArr[_i].trim() === '') continue;\n\t    var s = tArr[_i].replace(/tree\\s/i, '');\n\t    if (!name) {\n\t      name = s.trim().match(/^\\w+/)[0];\n\t    }\n\t    trees[name] = s.trim().match(/[\\S]*$/)[0];\n\t  }\n\t  if (!trees[name]) {\n\t    return new Error('tree ' + name + ' does not exist in this NEXUS file');\n\t  }\n\n\t  (0, _newick.parseFn)({ string: trees[name].trim(), root: root }, function (error) {\n\t    if (error) {\n\t      return callback(error);\n\t    }\n\n\t    callback();\n\n\t    // translate in accordance with translate block\n\t    if (leafNameObject) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = Object.keys(leafNameObject)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var n = _step.value;\n\n\t          var branches = root.tree.branches;\n\t          var branch = branches[n];\n\t          delete branches[n];\n\t          branch.id = leafNameObject[n];\n\t          branches[branch.id] = branch;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\n\t      root.tree.draw();\n\t    }\n\t  });\n\t}\n\n\texports.default = {\n\t  parseFn: parseFn,\n\t  format: format,\n\t  fileExtension: fileExtension,\n\t  validator: validator\n\t};\n\n/***/ }\n/******/ ])\n});\n;"]},"metadata":{},"sourceType":"script"}