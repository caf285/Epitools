{"ast":null,"code":"import _slicedToArray from\"/var/www/pathogen-intelligence.tgen.org/epitools/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from\"react\";import Phylocanvas,{utils}from\"phylocanvas\";import scalebar from\"phylocanvas-plugin-scalebar\";import branchLength from\"phylocanvas-plugin-branch-length\";import root from\"phylocanvas-plugin-root\";import pairwiseOps from\"phylocanvas-plugin-pairwise-ops\";import treeStats from\"phylocanvas-plugin-tree-stats\";import{jsx as _jsx}from\"react/jsx-runtime\";Phylocanvas.plugin(scalebar);Phylocanvas.plugin(branchLength);Phylocanvas.plugin(root);Phylocanvas.plugin(pairwiseOps);Phylocanvas.plugin(treeStats);var getPixelRatio=utils.canvas.getPixelRatio;function PhylocanvasView(props){var phylocanvas=useRef();var minHeight=100;var minWidth=100;// [height, width]\nvar _useState=useState([minHeight,minWidth]),_useState2=_slicedToArray(_useState,2),hw=_useState2[0],_setHW=_useState2[1];var heightRef=useRef(hw[0]);var widthRef=useRef(hw[1]);var setHW=function setHW(data){heightRef.current=data[0];widthRef.current=data[1];_setHW(data);};// [nodeSize, textSize, lineWidth]\nvar _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),textSize=_useState4[0],_setTextSize=_useState4[1];var textSizeRef=useRef(textSize);var setTextSize=function setTextSize(data){textSizeRef.current=data;_setTextSize(data);};var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),nodeSize=_useState6[0],_setNodeSize=_useState6[1];var nodeSizeRef=useRef(nodeSize);var setNodeSize=function setNodeSize(data){nodeSizeRef.current=data;_setNodeSize(data);};var typeList=useRef([\"radial\",\"rectangular\",\"circular\",\"diagonal\",\"hierarchical\"]);//TODO: Fix height inheritance problem (relative height to window size without adding to window size for positive feedback loop)\nuseEffect(function(){function handleResize(){//setHeight(document.getElementsByClassName(\"Nav-body\")[0].clientHeight)\nvar newHeight=Math.max(Math.max(document.documentElement.clientHeight||0,window.innerHeight||0)-document.getElementsByClassName(\"Nav-header\")[0].clientHeight*2,minHeight);var newWidth=Math.max(document.documentElement.clientWidth||minWidth,window.innerWidth||minWidth,minWidth);var heightDelta=heightRef.current/newHeight;var widthDelta=widthRef.current/newWidth;setHW([newHeight,newWidth]);phylocanvas.current.setTreeType(phylocanvas.current.treeType);phylocanvas.current.setNodeSize(nodeSizeRef.current);phylocanvas.current.setTextSize(textSizeRef.current);if(phylocanvas.current.treeType==\"circular\"){}if(phylocanvas.current.treeType==\"rectangular\"){}}function initialSize(){window.dispatchEvent(new Event('resize'));phylocanvas.current.setTreeType(phylocanvas.current.treeType);}window.addEventListener(\"resize\",handleResize);window.addEventListener(\"load\",initialSize);return function(){window.removeEventListener(\"resize\",handleResize);window.removeEventListener(\"load\",initialSize);};},[]);useEffect(function(){phylocanvas.current=Phylocanvas.createTree(\"phylocanvas\");},[]);useEffect(function(){phylocanvas.current.load(props.tree);},[props.tree]);useEffect(function(){if(typeList.current.includes(props.type)){phylocanvas.current.setTreeType(props.type);}else{phylocanvas.current.setTreeType(\"rectangular\");}//setTextSize(props.textSize * getPixelRatio(phylocanvas.current.canvas) / 2);\nphylocanvas.current.setNodeSize(nodeSizeRef.current);phylocanvas.current.setTextSize(textSizeRef.current);phylocanvas.current.lineWidth=props.lineWidth*getPixelRatio(phylocanvas.current.canvas)/2;},[props.type]);useEffect(function(){setNodeSize(props.nodeSize*getPixelRatio(phylocanvas.current.canvas)/2);phylocanvas.current.setNodeSize(nodeSizeRef.current);},[props.nodeSize]);useEffect(function(){setTextSize(props.textSize*getPixelRatio(phylocanvas.current.canvas)/2);phylocanvas.current.setTextSize(textSizeRef.current);},[props.textSize]);useEffect(function(){phylocanvas.current.showLabels=props.labels;phylocanvas.current.alignLabels=props.align;phylocanvas.current.lineWidth=props.lineWidth*getPixelRatio(phylocanvas.current.canvas)/2;phylocanvas.current.draw();},[props.labels,props.align,props.lineWidth]);useEffect(function(){phylocanvas.current.pairwiseOps.clusterDistance=props.clusterDistance;phylocanvas.current.pairwiseOps.clusterSamples=props.clusterSamples;console.log(phylocanvas.current);phylocanvas.current.pairwiseOps.clusterDraw=true;phylocanvas.current.draw();},[props.clusterDistance,props.clusterSamples]);return/*#__PURE__*/_jsx(\"div\",{id:\"phylocanvas\",style:{height:heightRef.current+\"px\",width:\"100%\",minHeight:minHeight+\"px\",minWidth:minWidth+\"px\"}});}export default PhylocanvasView;","map":{"version":3,"sources":["/var/www/pathogen-intelligence.tgen.org/epitools/src/phylocanvas/Phylocanvas.js"],"names":["React","useEffect","useState","useRef","Phylocanvas","utils","scalebar","branchLength","root","pairwiseOps","treeStats","plugin","getPixelRatio","canvas","PhylocanvasView","props","phylocanvas","minHeight","minWidth","hw","_setHW","heightRef","widthRef","setHW","data","current","textSize","_setTextSize","textSizeRef","setTextSize","nodeSize","_setNodeSize","nodeSizeRef","setNodeSize","typeList","handleResize","newHeight","Math","max","document","documentElement","clientHeight","window","innerHeight","getElementsByClassName","newWidth","clientWidth","innerWidth","heightDelta","widthDelta","setTreeType","treeType","initialSize","dispatchEvent","Event","addEventListener","removeEventListener","createTree","load","tree","includes","type","lineWidth","showLabels","labels","alignLabels","align","draw","clusterDistance","clusterSamples","console","log","clusterDraw","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Phylocanvas, { utils } from \"phylocanvas\";\nimport scalebar from \"phylocanvas-plugin-scalebar\";\nimport branchLength from \"phylocanvas-plugin-branch-length\";\nimport root from \"phylocanvas-plugin-root\";\nimport pairwiseOps from \"phylocanvas-plugin-pairwise-ops\";\nimport treeStats from \"phylocanvas-plugin-tree-stats\";\nPhylocanvas.plugin(scalebar)\nPhylocanvas.plugin(branchLength)\nPhylocanvas.plugin(root)\nPhylocanvas.plugin(pairwiseOps)\nPhylocanvas.plugin(treeStats)\n\nconst { getPixelRatio } = utils.canvas;\n\nfunction PhylocanvasView(props) {\n  let phylocanvas = useRef();\n  let minHeight = 100\n  let minWidth = 100\n\n  // [height, width]\n  let [hw, _setHW] = useState([minHeight, minWidth])\n  let heightRef = useRef(hw[0])\n  let widthRef = useRef(hw[1])\n  let setHW = data => {\n    heightRef.current = data[0]\n    widthRef.current = data[1]\n    _setHW(data)\n  }\n\n  // [nodeSize, textSize, lineWidth]\n  let [textSize, _setTextSize] = useState(1);\n  let textSizeRef = useRef(textSize);\n  let setTextSize = data => {\n    textSizeRef.current = data;\n    _setTextSize(data);\n  }\n  let [nodeSize, _setNodeSize] = useState(1);\n  let nodeSizeRef = useRef(nodeSize);\n  let setNodeSize = data => {\n    nodeSizeRef.current = data;\n    _setNodeSize(data);\n  }\n\n  let typeList = useRef([\"radial\", \"rectangular\", \"circular\", \"diagonal\", \"hierarchical\"]);\n\n  //TODO: Fix height inheritance problem (relative height to window size without adding to window size for positive feedback loop)\n\n  useEffect(() => {\n    function handleResize() {\n      //setHeight(document.getElementsByClassName(\"Nav-body\")[0].clientHeight)\n      let newHeight = Math.max( Math.max( document.documentElement.clientHeight || 0, window.innerHeight || 0) - document.getElementsByClassName(\"Nav-header\")[0].clientHeight * 2, minHeight )\n      let newWidth = Math.max( document.documentElement.clientWidth || minWidth, window.innerWidth || minWidth, minWidth)\n      let heightDelta = heightRef.current / newHeight\n      let widthDelta = widthRef.current / newWidth\n      setHW([newHeight, newWidth])\n      phylocanvas.current.setTreeType(phylocanvas.current.treeType)\n      phylocanvas.current.setNodeSize(nodeSizeRef.current);\n      phylocanvas.current.setTextSize(textSizeRef.current);\n      if (phylocanvas.current.treeType == \"circular\") {\n      }\n      if (phylocanvas.current.treeType == \"rectangular\") {\n      }\n    }\n    function initialSize() {\n      window.dispatchEvent(new Event('resize')) \n      phylocanvas.current.setTreeType(phylocanvas.current.treeType)\n    } \n    window.addEventListener(\"resize\", handleResize);\n    window.addEventListener(\"load\", initialSize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"load\", initialSize);\n    };\n  }, [])\n\n  useEffect(() => {\n    phylocanvas.current = Phylocanvas.createTree(\"phylocanvas\")\n  }, [])\n\n  useEffect(() => {\n    phylocanvas.current.load(props.tree)\n  }, [props.tree])\n\n  useEffect(() => {\n    if (typeList.current.includes(props.type)) {\n      phylocanvas.current.setTreeType(props.type)\n    } else {\n      phylocanvas.current.setTreeType(\"rectangular\")\n    }\n    //setTextSize(props.textSize * getPixelRatio(phylocanvas.current.canvas) / 2);\n    phylocanvas.current.setNodeSize(nodeSizeRef.current)\n    phylocanvas.current.setTextSize(textSizeRef.current)\n    phylocanvas.current.lineWidth = props.lineWidth * getPixelRatio(phylocanvas.current.canvas) / 2\n }, [props.type])\n\n  useEffect(() => {\n    setNodeSize(props.nodeSize * getPixelRatio(phylocanvas.current.canvas) / 2)\n    phylocanvas.current.setNodeSize(nodeSizeRef.current)\n  }, [props.nodeSize])\n\n  useEffect(() => {\n    setTextSize(props.textSize * getPixelRatio(phylocanvas.current.canvas) / 2);\n    phylocanvas.current.setTextSize(textSizeRef.current)\n  }, [props.textSize])\n\n  useEffect(() => {\n    phylocanvas.current.showLabels = props.labels\n    phylocanvas.current.alignLabels = props.align\n    phylocanvas.current.lineWidth = props.lineWidth * getPixelRatio(phylocanvas.current.canvas) / 2\n    phylocanvas.current.draw()\n  }, [props.labels, props.align, props.lineWidth])\n\n  useEffect(() => {\n    phylocanvas.current.pairwiseOps.clusterDistance = props.clusterDistance\n    phylocanvas.current.pairwiseOps.clusterSamples = props.clusterSamples\n    console.log(phylocanvas.current)\n    phylocanvas.current.pairwiseOps.clusterDraw = true\n    phylocanvas.current.draw()\n  }, [props.clusterDistance, props.clusterSamples])\n\n  return (\n    <div id=\"phylocanvas\" style={{height: heightRef.current + \"px\", width: \"100%\", minHeight: minHeight + \"px\", minWidth: minWidth + \"px\"}}></div>\n  )\n}\n\nexport default PhylocanvasView;\n"]},"metadata":{},"sourceType":"module"}