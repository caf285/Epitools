{"ast":null,"code":"var _jsxFileName = \"/var/www/pathogen-intelligence.tgen.org/epitools/src/svgButton/SvgButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport IconButton from '@mui/material/IconButton';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SvgButton(props) {\n  _s();\n\n  let typeList = useRef({\n    \"blank\": \"\",\n    \"menu\": \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\",\n    \"tree\": \"m6,0h18zv18z    m-6,9h6z    m12,9h-6zv-6zv6z m0,-6h12z m0,12h12z\"\n  });\n  let [type, setType] = useState(typeList.current[\"blank\"]);\n  useEffect(() => {\n    if (Object.keys(typeList.current).includes(props.type)) {\n      setType(typeList.current[props.type]);\n    } else {\n      setType(typeList.current[\"blank\"]);\n    }\n  }, [props.type]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Menu:\\xA0\", /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      sx: {\n        height: 24,\n        width: 24,\n        backgroundColor: \"#ddd\",\n        boxShadow: \"-1px 1px 2px\",\n        \"&:hover\": {\n          boxShadow: \"-2px 2px 3px\",\n          backgroundColor: \"#eee\"\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"rotate(90 12 12)\",\n        children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n          viewBox: \"-1 -1 26 26\",\n          sx: {\n            height: 16,\n            width: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: type,\n            stroke: \"black\",\n            \"stroke-width\": \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 1\n  }, this);\n}\n\n_s(SvgButton, \"3XnctN3a02RXaXi8BcEPuuhJWo0=\");\n\n_c = SvgButton;\nexport default SvgButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SvgButton\");","map":{"version":3,"sources":["/var/www/pathogen-intelligence.tgen.org/epitools/src/svgButton/SvgButton.js"],"names":["React","useEffect","useState","useRef","IconButton","SvgIcon","SvgButton","props","typeList","type","setType","current","Object","keys","includes","height","width","backgroundColor","boxShadow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAExB,MAAIC,QAAQ,GAAGL,MAAM,CACnB;AAAC,aAAS,EAAV;AACC,YAAQ,+CADT;AAEC,YAAQ;AAFT,GADmB,CAArB;AAMA,MAAI,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACM,QAAQ,CAACG,OAAT,CAAiB,OAAjB,CAAD,CAA9B;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,MAAM,CAACC,IAAP,CAAYL,QAAQ,CAACG,OAArB,EAA8BG,QAA9B,CAAuCP,KAAK,CAACE,IAA7C,CAAJ,EAAwD;AACtDC,MAAAA,OAAO,CAACF,QAAQ,CAACG,OAAT,CAAiBJ,KAAK,CAACE,IAAvB,CAAD,CAAP;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACF,QAAQ,CAACG,OAAT,CAAiB,OAAjB,CAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACJ,KAAK,CAACE,IAAP,CANM,CAAT;AAQA,sBACF;AAAA,yCAEE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,EAAE,EAAE;AAACM,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE,EAApB;AAAwBC,QAAAA,eAAe,EAAE,MAAzC;AAAiDC,QAAAA,SAAS,EAAE,cAA5D;AAA4E,mBAAW;AAACA,UAAAA,SAAS,EAAE,cAAZ;AAA4BD,UAAAA,eAAe,EAAE;AAA7C;AAAvF,OAA7B;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA,+BACA,QAAC,OAAD;AAAS,UAAA,OAAO,EAAC,aAAjB;AAA+B,UAAA,EAAE,EAAE;AAACF,YAAAA,MAAM,EAAE,EAAT;AAAaC,YAAAA,KAAK,EAAC;AAAnB,WAAnC;AAAA,iCACE;AAAM,YAAA,CAAC,EAAEP,IAAT;AAAe,YAAA,MAAM,EAAC,OAAtB;AAA8B,4BAAa;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADE;AAYD;;GA9BQH,S;;KAAAA,S;AAgCT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport IconButton from '@mui/material/IconButton';\nimport SvgIcon from '@mui/material/SvgIcon';\n\nfunction SvgButton(props) {\n\n  let typeList = useRef(\n    {\"blank\": \"\",\n     \"menu\": \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\",\n     \"tree\": \"m6,0h18zv18z    m-6,9h6z    m12,9h-6zv-6zv6z m0,-6h12z m0,12h12z\"}\n  )\n\n  let [type, setType] = useState(typeList.current[\"blank\"])\n\n  useEffect(() => {\n    if (Object.keys(typeList.current).includes(props.type)) {\n      setType(typeList.current[props.type])\n    } else {\n      setType(typeList.current[\"blank\"])\n    }\n  }, [props.type])\n\n  return (\n<p>\n  Menu:&nbsp;\n  <IconButton size=\"small\" sx={{height: 24, width: 24, backgroundColor: \"#ddd\", boxShadow: \"-1px 1px 2px\", \"&:hover\": {boxShadow: \"-2px 2px 3px\", backgroundColor: \"#eee\"}}}>\n    <g transform=\"rotate(90 12 12)\">\n    <SvgIcon viewBox=\"-1 -1 26 26\" sx={{height: 16, width:16}}>\n      <path d={type} stroke=\"black\" stroke-width=\"2\"></path>\n    </SvgIcon>\n    </g>\n  </IconButton>\n</p>\n  )\n}\n\nexport default SvgButton;\n"]},"metadata":{},"sourceType":"module"}