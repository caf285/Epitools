{"ast":null,"code":"var _jsxFileName = \"/var/www/pathogen-intelligence.tgen.org/epitools/src/svgButton/SvgButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport IconButton from '@mui/material/IconButton';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport Chip from '@mui/material/Chip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SvgButton(props) {\n  _s();\n\n  let typeList = useRef({\n    \"blank\": \"\",\n    \"menu\": \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\",\n    \"tree\": \"m5,3h14zv17z  m0,9h-5z  m6,8h-5zv-6zv3z m0,-6h12z m0,9h9z\"\n  });\n  let [type, setType] = useState(typeList.current[\"blank\"]);\n  useEffect(() => {\n    if (Object.keys(typeList.current).includes(props.type)) {\n      setType(typeList.current[props.type]);\n    } else {\n      setType(typeList.current[\"blank\"]);\n    }\n  }, [props.type]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(Chip, {\n      label: \"label\",\n      size: \"small\",\n      sx: {\n        backgroundColor: \"#ddd\",\n        boxShadow: \"-1px 1px 2px\",\n        \"&:hover\": {\n          boxShadow: \"-2px 2px 3px\",\n          backgroundColor: \"#eee\",\n          cursor: \"pointer\"\n        }\n      },\n      icon: /*#__PURE__*/_jsxDEV(SvgIcon, {\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }, this), \"SvgButton:\\xA0\", /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      sx: {\n        height: 24,\n        width: 24,\n        backgroundColor: \"#ddd\",\n        boxShadow: \"-1px 1px 2px\",\n        \"&:hover\": {\n          boxShadow: \"-2px 2px 3px\",\n          backgroundColor: \"#eee\"\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n        sx: {\n          height: 16,\n          width: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"g\", {\n          stroke: \"black\",\n          \"stroke-width\": \"2\",\n          \"stroke-linecap\": \"round\",\n          transform: \"rotate(90 12 12)\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 1\n  }, this);\n}\n\n_s(SvgButton, \"3XnctN3a02RXaXi8BcEPuuhJWo0=\");\n\n_c = SvgButton;\nexport default SvgButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SvgButton\");","map":{"version":3,"sources":["/var/www/pathogen-intelligence.tgen.org/epitools/src/svgButton/SvgButton.js"],"names":["React","useEffect","useState","useRef","IconButton","SvgIcon","Chip","SvgButton","props","typeList","type","setType","current","Object","keys","includes","backgroundColor","boxShadow","cursor","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAExB,MAAIC,QAAQ,GAAGN,MAAM,CACnB;AACE,aAAS,EADX;AAEE,YAAQ,+CAFV;AAGE,YAAQ;AAHV,GADmB,CAArB;AAQA,MAAI,CAACO,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACO,QAAQ,CAACG,OAAT,CAAiB,OAAjB,CAAD,CAA9B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,MAAM,CAACC,IAAP,CAAYL,QAAQ,CAACG,OAArB,EAA8BG,QAA9B,CAAuCP,KAAK,CAACE,IAA7C,CAAJ,EAAwD;AACtDC,MAAAA,OAAO,CAACF,QAAQ,CAACG,OAAT,CAAiBJ,KAAK,CAACE,IAAvB,CAAD,CAAP;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACF,QAAQ,CAACG,OAAT,CAAiB,OAAjB,CAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACJ,KAAK,CAACE,IAAP,CANM,CAAT;AAQA,sBACF;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,OAAZ;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAE;AAACM,QAAAA,eAAe,EAAE,MAAlB;AAA0BC,QAAAA,SAAS,EAAE,cAArC;AAAqD,mBAAW;AAACA,UAAAA,SAAS,EAAE,cAAZ;AAA4BD,UAAAA,eAAe,EAAE,MAA7C;AAAqDE,UAAAA,MAAM,EAAE;AAA7D;AAAhE,OAFN;AAGE,MAAA,IAAI,eAAC,QAAC,OAAD;AAAA,+BACH;AAAM,UAAA,CAAC,EAAER;AAAT;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA,YADF,iCASE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,EAAE,EAAE;AAACS,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE,EAApB;AAAwBJ,QAAAA,eAAe,EAAE,MAAzC;AAAiDC,QAAAA,SAAS,EAAE,cAA5D;AAA4E,mBAAW;AAACA,UAAAA,SAAS,EAAE,cAAZ;AAA4BD,UAAAA,eAAe,EAAE;AAA7C;AAAvF,OAA7B;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAE;AAACG,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,KAAK,EAAC;AAAnB,SAAb;AAAA,+BACA;AAAG,UAAA,MAAM,EAAC,OAAV;AAAkB,0BAAa,GAA/B;AAAmC,4BAAe,OAAlD;AAA0D,UAAA,SAAS,EAAC,kBAApE;AAAA,iCACE;AAAM,YAAA,CAAC,EAAEV;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADE;AAmBD;;GAvCQH,S;;KAAAA,S;AAyCT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport IconButton from '@mui/material/IconButton';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport Chip from '@mui/material/Chip'\n\nfunction SvgButton(props) {\n\n  let typeList = useRef(\n    {\n      \"blank\": \"\",\n      \"menu\": \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\",\n      \"tree\": \"m5,3h14zv17z  m0,9h-5z  m6,8h-5zv-6zv3z m0,-6h12z m0,9h9z\"\n    }\n  )\n\n  let [type, setType] = useState(typeList.current[\"blank\"])\n\n  useEffect(() => {\n    if (Object.keys(typeList.current).includes(props.type)) {\n      setType(typeList.current[props.type])\n    } else {\n      setType(typeList.current[\"blank\"])\n    }\n  }, [props.type])\n\n  return (\n<p>\n  <Chip label=\"label\"\n    size=\"small\"\n    sx={{backgroundColor: \"#ddd\", boxShadow: \"-1px 1px 2px\", \"&:hover\": {boxShadow: \"-2px 2px 3px\", backgroundColor: \"#eee\", cursor: \"pointer\"}}}\n    icon=<SvgIcon>\n      <path d={type}></path>\n    </SvgIcon>\n  />\n  SvgButton:&nbsp;\n  <IconButton size=\"small\" sx={{height: 24, width: 24, backgroundColor: \"#ddd\", boxShadow: \"-1px 1px 2px\", \"&:hover\": {boxShadow: \"-2px 2px 3px\", backgroundColor: \"#eee\"}}}>\n    <SvgIcon sx={{height: 16, width:16}}>\n    <g stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" transform=\"rotate(90 12 12)\">\n      <path d={type}></path>\n    </g>\n    </SvgIcon>\n  </IconButton>\n</p>\n  )\n}\n\nexport default SvgButton;\n"]},"metadata":{},"sourceType":"module"}