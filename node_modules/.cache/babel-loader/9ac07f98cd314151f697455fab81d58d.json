{"ast":null,"code":"import { Tree, utils } from 'phylocanvas';\nconst {\n  getPixelRatio\n} = utils.canvas;\nconst DEFAULTS = {\n  active: true\n};\n\nfunction drawStats() {\n  console.log(this);\n}\n\nexport default function plugin(decorate) {\n  decorate(this, 'createTree', (delegate, args) => {\n    const tree = delegate(...args);\n    const [, config = {}] = args;\n    tree.treeStats = Object.assign({}, DEFAULTS, config.treeStats || {});\n    return tree;\n  });\n  decorate(Tree, 'load', function (delegate, args) {\n    delegate.apply(this, args);\n\n    if (this.treeStats.active) {\n      for (let leaf in this.leaves) {\n        decorate(Branch, 'drawLabel', function (delegate, args) {\n          delegate.apply(leaf, args);\n          drawStats.apply(leaf);\n        });\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/var/www/pathogen-intelligence.tgen.org/epitools/my_modules/phylocanvas-plugin-tree-stats/index.js"],"names":["Tree","utils","getPixelRatio","canvas","DEFAULTS","active","drawStats","console","log","plugin","decorate","delegate","args","tree","config","treeStats","Object","assign","apply","leaf","leaves","Branch"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,aAA5B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,KAAK,CAACE,MAAhC;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AADO,CAAjB;;AAIA,SAASC,SAAT,GAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;;AAED,eAAe,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AACvCA,EAAAA,QAAQ,CAAC,IAAD,EAAO,YAAP,EAAqB,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC/C,UAAMC,IAAI,GAAGF,QAAQ,CAAC,GAAGC,IAAJ,CAArB;AACA,UAAM,GAAIE,MAAM,GAAG,EAAb,IAAoBF,IAA1B;AACAC,IAAAA,IAAI,CAACE,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,QAAlB,EAA4BU,MAAM,CAACC,SAAP,IAAoB,EAAhD,CAAjB;AACA,WAAOF,IAAP;AACD,GALO,CAAR;AAMAH,EAAAA,QAAQ,CAACV,IAAD,EAAO,MAAP,EAAe,UAAUW,QAAV,EAAoBC,IAApB,EAA0B;AAC/CD,IAAAA,QAAQ,CAACO,KAAT,CAAe,IAAf,EAAqBN,IAArB;;AACA,QAAI,KAAKG,SAAL,CAAeV,MAAnB,EAA2B;AAEzB,WAAK,IAAIc,IAAT,IAAiB,KAAKC,MAAtB,EAA8B;AAC5BV,QAAAA,QAAQ,CAACW,MAAD,EAAS,WAAT,EAAsB,UAAUV,QAAV,EAAoBC,IAApB,EAA0B;AACtDD,UAAAA,QAAQ,CAACO,KAAT,CAAeC,IAAf,EAAqBP,IAArB;AACAN,UAAAA,SAAS,CAACY,KAAV,CAAgBC,IAAhB;AACD,SAHO,CAAR;AAID;AAEF;AACF,GAZO,CAAR;AAaD","sourcesContent":["import { Tree, utils } from 'phylocanvas';\n\nconst { getPixelRatio } = utils.canvas;\n\nconst DEFAULTS = {\n  active: true,\n};\n\nfunction drawStats() {\n  console.log(this)\n}\n\nexport default function plugin(decorate) {\n  decorate(this, 'createTree', (delegate, args) => {\n    const tree = delegate(...args);\n    const [ , config = {} ] = args;\n    tree.treeStats = Object.assign({}, DEFAULTS, config.treeStats || {});\n    return tree;\n  });\n  decorate(Tree, 'load', function (delegate, args) {\n    delegate.apply(this, args);\n    if (this.treeStats.active) {\n\n      for (let leaf in this.leaves) {\n        decorate(Branch, 'drawLabel', function (delegate, args) {\n          delegate.apply(leaf, args);\n          drawStats.apply(leaf);\n        })\n      }\n\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}