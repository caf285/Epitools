{"ast":null,"code":"var _jsxFileName = \"/var/www/pathogen-intelligence.tgen.org/epitools/src/svgButton/SvgButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport Chip from '@mui/material/Chip';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SvgButton(props) {\n  _s();\n\n  let svgList = useRef({\n    \"blank\": \"\",\n    \"menuSettings\": \"m1,12h20z m0,-6h20z m0,12h20z\",\n    \"menuContext\": \"m1,6h4z m4,0a2,2,0,1,0,4,0a2,2,0,1,0,-4,0z m7,0h9z m9,6h-4z m-4,0a2,2,0,1,0,-4,0a2,2,0,1,0,4,0z m-7,0h-9z m-9,6h8z m8,0a2,2,0,1,0,4,0a2,2,0,1,0,-4,0z m7,0h5z\",\n    \"treeRadial\": \"m11,12l-10,1zl0,-6zl4,3z m0,-6l-3,-4zl5,-4z m4,9l-1,7zl6,-1z\",\n    \"treeRectangular\": \"m4,4h14zv13z m0,7h-3z  m6,6h-6zv-6zv4z m0,-6h12z m0,10h9z\",\n    \"treeCircular\": \"m11,12l3.5,3.5z m-5,0h-5za5,5,0,1,0,8.5,-3.5a5,5,0,1,1,-8.5,3.5z m8.5,-3.5l3.5,-3.5z m-3,-6.5a10,10,0,0,1,0,20a10,10,0,0,0,0,-20z m-8,3.5a10,10,0,0,0,0,13a10,10,0,0,1,0,-13z\",\n    \"treeDiagonal\": \"m0,12l18,-9zl18,9z m8,-4l10,5z\",\n    \"treeHierarchical\": \"m19,5v14zh-13z m-7,0v-3z m-6,6v-6zh-4zh6z m6,0v12z m-10,0v9z\"\n  });\n  let [svg, setSvg] = useState(svgList.current[\"blank\"]);\n  let [label, setLabel] = useState(\"\");\n  let [drop, setDrop] = useState(false);\n  useEffect(() => {\n    setSvg(svgList.current[props.svg]);\n    setLabel(props.label);\n    setDrop(props.drop);\n  }, []);\n\n  function getDrop() {\n    if (drop) {\n      return props.onClick ? props.onClick : () => {};\n    }\n\n    return undefined;\n  }\n\n  function getIcon() {\n    if (svg) {\n      return /*#__PURE__*/_jsxDEV(SvgIcon, {\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          stroke: \"dimgray\",\n          fill: \"transparent\",\n          strokeWidth: \"2\",\n          strokeLinejoin: \"round\",\n          d: svg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    }\n\n    return undefined;\n  }\n\n  if (svg && !label && !drop) {\n    return /*#__PURE__*/_jsxDEV(IconButton, {\n      centerRipple: false,\n      size: \"small\",\n      onClick: props.onClick,\n      sx: {\n        backgroundColor: \"#ddd\",\n        boxShadow: \"-1px 1px 1px rgba(0, 0, 0, .5)\",\n        \"&:hover\": {\n          boxShadow: \"-1px 1px 2px rgba(0, 0, 0, .7)\",\n          backgroundColor: \"#eee\"\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n        sx: {\n          height: 18,\n          width: 18\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          stroke: \"dimgray\",\n          fill: \"transparent\",\n          strokeWidth: \"2\",\n          strokeLinejoin: \"round\",\n          d: svg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Chip, {\n      onClick: props.onClick,\n      size: \"small\",\n      label: label ? label : undefined,\n      deleteIcon: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this),\n      onDelete: getDrop(),\n      sx: {\n        backgroundColor: \"#ddd\",\n        boxShadow: \"-1px 1px 1px rgba(0, 0, 0, .5)\",\n        \"&:hover\": {\n          boxShadow: \"-1px 1px 2px rgba(0, 0, 0, .7)\",\n          backgroundColor: \"#eee\",\n          cursor: \"pointer\"\n        }\n      },\n      icon: getIcon(),\n      clickable: true,\n      disableRipple: false,\n      centerRipple: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(SvgButton, \"R0EGU15t0tz7PJ1SXNxUzGIZVbY=\");\n\n_c = SvgButton;\nexport default SvgButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SvgButton\");","map":{"version":3,"sources":["/var/www/pathogen-intelligence.tgen.org/epitools/src/svgButton/SvgButton.js"],"names":["React","useEffect","useState","useRef","Button","IconButton","SvgIcon","Chip","ArrowDropDownIcon","SvgButton","props","svgList","svg","setSvg","current","label","setLabel","drop","setDrop","getDrop","onClick","undefined","getIcon","backgroundColor","boxShadow","height","width","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport Chip from '@mui/material/Chip';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\nfunction SvgButton(props) {\n\n  let svgList = useRef(\n    {\n      \"blank\": \"\",\n      \"menuSettings\": \"m1,12h20z m0,-6h20z m0,12h20z\",\n      \"menuContext\": \"m1,6h4z m4,0a2,2,0,1,0,4,0a2,2,0,1,0,-4,0z m7,0h9z m9,6h-4z m-4,0a2,2,0,1,0,-4,0a2,2,0,1,0,4,0z m-7,0h-9z m-9,6h8z m8,0a2,2,0,1,0,4,0a2,2,0,1,0,-4,0z m7,0h5z\",\n      \"treeRadial\": \"m11,12l-10,1zl0,-6zl4,3z m0,-6l-3,-4zl5,-4z m4,9l-1,7zl6,-1z\",\n      \"treeRectangular\": \"m4,4h14zv13z m0,7h-3z  m6,6h-6zv-6zv4z m0,-6h12z m0,10h9z\",\n      \"treeCircular\": \"m11,12l3.5,3.5z m-5,0h-5za5,5,0,1,0,8.5,-3.5a5,5,0,1,1,-8.5,3.5z m8.5,-3.5l3.5,-3.5z m-3,-6.5a10,10,0,0,1,0,20a10,10,0,0,0,0,-20z m-8,3.5a10,10,0,0,0,0,13a10,10,0,0,1,0,-13z\",\n      \"treeDiagonal\": \"m0,12l18,-9zl18,9z m8,-4l10,5z\",\n      \"treeHierarchical\": \"m19,5v14zh-13z m-7,0v-3z m-6,6v-6zh-4zh6z m6,0v12z m-10,0v9z\"\n    }\n  );\n\n  let [svg, setSvg] = useState(svgList.current[\"blank\"]);\n  let [label, setLabel] = useState(\"\");\n  let [drop, setDrop] = useState(false);\n\n  useEffect(() => {\n    setSvg(svgList.current[props.svg])\n    setLabel(props.label)\n    setDrop(props.drop)\n  }, [])\n\n  function getDrop() {\n    if (drop) {\n      return (\n        props.onClick ? props.onClick : () => {}\n      )\n    }\n    return undefined;\n  }\n\n  function getIcon() {\n    if (svg) {\n      return (\n        <SvgIcon>\n          <path stroke=\"dimgray\" fill=\"transparent\" strokeWidth=\"2\" strokeLinejoin=\"round\" d={svg}></path>\n        </SvgIcon>\n      )\n    }\n    return undefined;\n  }\n\n  if (svg && !label && !drop) {\n    return (\n      <IconButton centerRipple={false} size=\"small\" onClick={props.onClick} sx={{backgroundColor: \"#ddd\", boxShadow: \"-1px 1px 1px rgba(0, 0, 0, .5)\", \"&:hover\": {boxShadow: \"-1px 1px 2px rgba(0, 0, 0, .7)\", backgroundColor: \"#eee\"}}}>\n        <SvgIcon sx={{height: 18, width: 18}}>\n          <path stroke=\"dimgray\" fill=\"transparent\" strokeWidth=\"2\" strokeLinejoin=\"round\" d={svg}></path>\n        </SvgIcon>\n      </IconButton>\n    )\n  } else {\n    return (\n      <Chip\n        onClick={props.onClick}\n        size=\"small\"\n        label={label ? label : undefined}\n        deleteIcon=<ArrowDropDownIcon />\n        onDelete={getDrop()}\n        sx={{backgroundColor: \"#ddd\", boxShadow: \"-1px 1px 1px rgba(0, 0, 0, .5)\", \"&:hover\": {boxShadow: \"-1px 1px 2px rgba(0, 0, 0, .7)\", backgroundColor: \"#eee\", cursor: \"pointer\"}}}\n        icon={getIcon()}\n        clickable\n        disableRipple={false}\n        centerRipple={false}\n      />\n    )\n  }\n}\n\nexport default SvgButton;\n"]},"metadata":{},"sourceType":"module"}