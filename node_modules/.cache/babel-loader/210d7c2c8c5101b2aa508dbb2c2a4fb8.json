{"ast":null,"code":"var _jsxFileName = \"/var/www/pathogen-intelligence.tgen.org/epitools/src/svgButton/SvgButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport Chip from '@mui/material/Chip';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport TouchRipple from '@mui/material/ButtonBase/TouchRipple';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SvgButton(props) {\n  _s();\n\n  let svgList = useRef({\n    \"blank\": \"\",\n    \"menu\": \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\",\n    \"tree\": \"m5,3h14zv17z  m0,9h-5z  m6,8h-5zv-6zv3z m0,-6h12z m0,9h9z\"\n  });\n  let [svg, setSvg] = useState(svgList.current[\"blank\"]);\n  let [label, setLabel] = useState(\"\");\n  let [drop, setDrop] = useState(false);\n  useEffect(() => {\n    setSvg(svgList.current[props.svg]);\n    setLabel(props.label);\n    setDrop(props.drop);\n  }, []);\n\n  if (label) {\n    if (drop) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chip:\\xA0\", /*#__PURE__*/_jsxDEV(Chip, {\n          enableRipple: true,\n          size: \"small\",\n          label: label,\n          deleteIcon: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 24\n          }, this),\n          sx: {\n            backgroundColor: \"#ddd\",\n            boxShadow: \"-1px 1px 2px\",\n            \"&:hover\": {\n              boxShadow: \"-2px 2px 3px\",\n              backgroundColor: \"#eee\",\n              cursor: \"pointer\"\n            }\n          },\n          icon: /*#__PURE__*/_jsxDEV(SvgIcon, {\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              stroke: \"black\",\n              d: svg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 18\n          }, this),\n          clickable: true,\n          deleteIcon: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chip:\\xA0\", /*#__PURE__*/_jsxDEV(Chip, {\n          size: \"small\",\n          label: label,\n          sx: {\n            backgroundColor: \"#ddd\",\n            boxShadow: \"-1px 1px 2px\",\n            \"&:hover\": {\n              boxShadow: \"-2px 2px 3px\",\n              backgroundColor: \"#eee\",\n              cursor: \"pointer\"\n            }\n          },\n          icon: /*#__PURE__*/_jsxDEV(SvgIcon, {\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              stroke: \"black\",\n              d: svg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 18\n          }, this),\n          clickable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"SvgButton:\\xA0\", /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        onClick: () => {},\n        sx: {\n          height: 24,\n          width: 24,\n          backgroundColor: \"#ddd\",\n          boxShadow: \"-1px 1px 2px\",\n          \"&:hover\": {\n            boxShadow: \"-2px 2px 3px\",\n            backgroundColor: \"#eee\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n          sx: {\n            height: 16,\n            width: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(\"g\", {\n            stroke: \"black\",\n            \"stroke-width\": \"2\",\n            \"stroke-linecap\": \"round\",\n            transform: \"rotate(90 12 12)\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: svg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(SvgButton, \"R0EGU15t0tz7PJ1SXNxUzGIZVbY=\");\n\n_c = SvgButton;\nexport default SvgButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SvgButton\");","map":{"version":3,"sources":["/var/www/pathogen-intelligence.tgen.org/epitools/src/svgButton/SvgButton.js"],"names":["React","useEffect","useState","useRef","Button","IconButton","SvgIcon","Chip","ArrowDropDownIcon","TouchRipple","SvgButton","props","svgList","svg","setSvg","current","label","setLabel","drop","setDrop","backgroundColor","boxShadow","cursor","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAExB,MAAIC,OAAO,GAAGT,MAAM,CAClB;AACE,aAAS,EADX;AAEE,YAAQ,+CAFV;AAGE,YAAQ;AAHV,GADkB,CAApB;AAQA,MAAI,CAACU,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAACU,OAAO,CAACG,OAAR,CAAgB,OAAhB,CAAD,CAA5B;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,MAAM,CAACF,OAAO,CAACG,OAAR,CAAgBJ,KAAK,CAACE,GAAtB,CAAD,CAAN;AACAI,IAAAA,QAAQ,CAACN,KAAK,CAACK,KAAP,CAAR;AACAG,IAAAA,OAAO,CAACR,KAAK,CAACO,IAAP,CAAP;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIF,KAAJ,EAAW;AACT,QAAIE,IAAJ,EAAU;AACR,0BACE;AAAA,6CAEE,QAAC,IAAD;AACE,UAAA,YAAY,MADd;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAEF,KAHT;AAIE,UAAA,UAAU,eAAC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,kBAJb;AAKE,UAAA,EAAE,EAAE;AAACI,YAAAA,eAAe,EAAE,MAAlB;AAA0BC,YAAAA,SAAS,EAAE,cAArC;AAAqD,uBAAW;AAACA,cAAAA,SAAS,EAAE,cAAZ;AAA4BD,cAAAA,eAAe,EAAE,MAA7C;AAAqDE,cAAAA,MAAM,EAAE;AAA7D;AAAhE,WALN;AAME,UAAA,IAAI,eAAC,QAAC,OAAD;AAAA,mCACH;AAAM,cAAA,MAAM,EAAC,OAAb;AAAqB,cAAA,CAAC,EAAET;AAAxB;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,kBANP;AASE,UAAA,SAAS,MATX;AAUE,UAAA,UAAU;AAVZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD,KAlBD,MAkBO;AACL,0BACE;AAAA,6CAEE,QAAC,IAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,EAAEG,KAFT;AAGE,UAAA,EAAE,EAAE;AAACI,YAAAA,eAAe,EAAE,MAAlB;AAA0BC,YAAAA,SAAS,EAAE,cAArC;AAAqD,uBAAW;AAACA,cAAAA,SAAS,EAAE,cAAZ;AAA4BD,cAAAA,eAAe,EAAE,MAA7C;AAAqDE,cAAAA,MAAM,EAAE;AAA7D;AAAhE,WAHN;AAIE,UAAA,IAAI,eAAC,QAAC,OAAD;AAAA,mCACH;AAAM,cAAA,MAAM,EAAC,OAAb;AAAqB,cAAA,CAAC,EAAET;AAAxB;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,kBAJP;AAOE,UAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAcD;AACF,GAnCD,MAmCO;AACL,wBACE;AAAA,gDAEE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,OAAjB;AAAyB,QAAA,OAAO,EAAE,MAAM,CAAE,CAA1C;AAA4C,QAAA,EAAE,EAAE;AAACU,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,KAAK,EAAE,EAApB;AAAwBJ,UAAAA,eAAe,EAAE,MAAzC;AAAiDC,UAAAA,SAAS,EAAE,cAA5D;AAA4E,qBAAW;AAACA,YAAAA,SAAS,EAAE,cAAZ;AAA4BD,YAAAA,eAAe,EAAE;AAA7C;AAAvF,SAAhD;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAE;AAACG,YAAAA,MAAM,EAAE,EAAT;AAAaC,YAAAA,KAAK,EAAC;AAAnB,WAAb;AAAA,iCACE;AAAG,YAAA,MAAM,EAAC,OAAV;AAAkB,4BAAa,GAA/B;AAAmC,8BAAe,OAAlD;AAA0D,YAAA,SAAS,EAAC,kBAApE;AAAA,mCACE;AAAM,cAAA,CAAC,EAAEX;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;AACF;;GArEQH,S;;KAAAA,S;AAuET,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport Chip from '@mui/material/Chip';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport TouchRipple from '@mui/material/ButtonBase/TouchRipple';\n\nfunction SvgButton(props) {\n\n  let svgList = useRef(\n    {\n      \"blank\": \"\",\n      \"menu\": \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\",\n      \"tree\": \"m5,3h14zv17z  m0,9h-5z  m6,8h-5zv-6zv3z m0,-6h12z m0,9h9z\"\n    }\n  );\n\n  let [svg, setSvg] = useState(svgList.current[\"blank\"]);\n  let [label, setLabel] = useState(\"\");\n  let [drop, setDrop] = useState(false);\n\n  useEffect(() => {\n    setSvg(svgList.current[props.svg])\n    setLabel(props.label)\n    setDrop(props.drop)\n  }, [])\n\n  if (label) {\n    if (drop) {\n      return (\n        <p>\n          Chip:&nbsp;\n          <Chip\n            enableRipple\n            size=\"small\"\n            label={label}\n            deleteIcon=<ArrowDropDownIcon />\n            sx={{backgroundColor: \"#ddd\", boxShadow: \"-1px 1px 2px\", \"&:hover\": {boxShadow: \"-2px 2px 3px\", backgroundColor: \"#eee\", cursor: \"pointer\"}}}\n            icon=<SvgIcon>\n              <path stroke=\"black\" d={svg}></path>\n            </SvgIcon>\n            clickable\n            deleteIcon\n          />\n        </p>\n      )\n    } else {\n      return (\n        <p>\n          Chip:&nbsp;\n          <Chip\n            size=\"small\"\n            label={label}\n            sx={{backgroundColor: \"#ddd\", boxShadow: \"-1px 1px 2px\", \"&:hover\": {boxShadow: \"-2px 2px 3px\", backgroundColor: \"#eee\", cursor: \"pointer\"}}}\n            icon=<SvgIcon>\n              <path stroke=\"black\" d={svg}></path>\n            </SvgIcon>\n            clickable\n          />\n        </p>\n      )\n    }\n  } else {\n    return (\n      <p>\n        SvgButton:&nbsp;\n        <IconButton size=\"small\" onClick={() => {}} sx={{height: 24, width: 24, backgroundColor: \"#ddd\", boxShadow: \"-1px 1px 2px\", \"&:hover\": {boxShadow: \"-2px 2px 3px\", backgroundColor: \"#eee\"}}}>\n          <SvgIcon sx={{height: 16, width:16}}>\n            <g stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" transform=\"rotate(90 12 12)\">\n              <path d={svg}></path>\n            </g>\n          </SvgIcon>\n        </IconButton>\n      </p>\n    )\n  }\n}\n\nexport default SvgButton;\n"]},"metadata":{},"sourceType":"module"}