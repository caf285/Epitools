[{"/var/www/epitools/src/index.js":"1","/var/www/epitools/src/App.js":"2","/var/www/epitools/src/reportWebVitals.js":"3","/var/www/epitools/src/nav/Header.js":"4","/var/www/epitools/src/nav/Footer.js":"5","/var/www/epitools/src/nav/Body.js":"6","/var/www/epitools/src/demo/DemoLeaflet.js":"7","/var/www/epitools/src/demo/DemoPhylocanvas.js":"8","/var/www/epitools/src/demo/DemoPlotly.js":"9","/var/www/epitools/src/phylocanvas/Phylocanvas.js":"10","/var/www/epitools/src/plotly/Plotly.js":"11","/var/www/epitools/src/leaflet/Leaflet.js":"12"},{"size":506,"mtime":1629227174780,"results":"13","hashOfConfig":"14"},{"size":346,"mtime":1629227174780,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1629227174784,"results":"16","hashOfConfig":"14"},{"size":950,"mtime":1629239973495,"results":"17","hashOfConfig":"14"},{"size":148,"mtime":1629227174780,"results":"18","hashOfConfig":"14"},{"size":804,"mtime":1629240002447,"results":"19","hashOfConfig":"14"},{"size":880,"mtime":1629403230896,"results":"20","hashOfConfig":"14"},{"size":1916,"mtime":1629314283009,"results":"21","hashOfConfig":"14"},{"size":1518,"mtime":1629314820836,"results":"22","hashOfConfig":"14"},{"size":1290,"mtime":1629932477274,"results":"23","hashOfConfig":"14"},{"size":260,"mtime":1629312659952,"results":"24","hashOfConfig":"14"},{"size":1139,"mtime":1629739488096,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1jfs1ce",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/var/www/epitools/src/index.js",[],["54","55"],"/var/www/epitools/src/App.js",[],"/var/www/epitools/src/reportWebVitals.js",[],"/var/www/epitools/src/nav/Header.js",[],"/var/www/epitools/src/nav/Footer.js",[],"/var/www/epitools/src/nav/Body.js",[],"/var/www/epitools/src/demo/DemoLeaflet.js",["56","57"],"import React, { useEffect, useState } from \"react\";\nimport Leaflet from \"../leaflet/Leaflet.js\";\n\nfunction LeafletView() {\n  const [center, setCenter] = useState([35.2, -111.65]);\n  const [zoom, setZoom] = useState(6)\n\n  useEffect(() => {\n    document.getElementById(\"demoLeafletXCenter\").value = center[0]\n    document.getElementById(\"demoLeafletYCenter\").value = center[1]\n  }, [])  \n\n  return (\n    <div>\n      <h1>Leaflet Demo</h1>\n      <Leaflet\n        center = {center}\n        zoom = {zoom}\n      />\n      <h5>Marker Position:</h5>\n      X: <input id=\"demoLeafletXCenter\" onChange={() => {setCenter([document.getElementById(\"demoLeafletXCenter\").value, center[1]])}}></input>\n      &emsp;Y: <input id=\"demoLeafletYCenter\" onChange={() => {setCenter([center[0], document.getElementById(\"demoLeafletYCenter\").value])}}></input>\n    </div>\n  )\n}\n\nexport default LeafletView;\n","/var/www/epitools/src/demo/DemoPhylocanvas.js",[],"/var/www/epitools/src/demo/DemoPlotly.js",["58"],"import React, {useEffect, useState} from \"react\";\nimport Plotly from \"../plotly/Plotly.js\";\n\nfunction PlotlyView() {\n  const [x, setX] = useState([\"data1\", \"data2\"]);\n  const [y, setY] = useState([15, 20]);\n  const [type, setType] = useState(\"bar\");\n\n  useEffect(() => {\n    document.getElementById(\"demoPlotlyXLabel\").value = x[0]\n    document.getElementById(\"demoPlotlyYLabel\").value = x[1]\n    document.getElementById(\"demoPlotlyXValue\").value = y[0]\n    document.getElementById(\"demoPlotlyYValue\").value = y[1]\n  }, [])\n\n  return (\n    <div>\n      <h1>Plotly Demo</h1>\n      <Plotly\n        data = {\n          [\n            {\n              x: x,\n              y: y,\n              type: type\n            }\n          ]\n        }\n      />\n      <h5>Labels:</h5>\n      X: <input id=\"demoPlotlyXLabel\" onChange={() => setX([document.getElementById(\"demoPlotlyXLabel\").value, x[1]])}></input>\n      &emsp;Y: <input id=\"demoPlotlyYLabel\" onChange={() => setX([x[0], document.getElementById(\"demoPlotlyYLabel\").value])}></input>\n      <h5>Data:</h5>\n      X: <input id=\"demoPlotlyXValue\" onChange={() => setY([parseInt(document.getElementById(\"demoPlotlyXValue\").value), y[1]])}></input>\n      &emsp;Y: <input id=\"demoPlotlyYValue\" onChange={() => setY([y[0], parseInt(document.getElementById(\"demoPlotlyYValue\").value)])}></input>\n      <h5>Type:</h5>\n      <button onClick={() => setType(\"bar\")}>Bar</button>\n      <button onClick={() => setType(\"scatter\")}>Scatter</button>\n    </div>\n  )\n}\n\nexport default PlotlyView;\n","/var/www/epitools/src/phylocanvas/Phylocanvas.js",[],"/var/www/epitools/src/plotly/Plotly.js",[],"/var/www/epitools/src/leaflet/Leaflet.js",["59"],"import React, { useEffect, useRef } from \"react\";\nimport Leaflet from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\n\n/*function SetView() {\n  const map = useMapEvent('click', () => {\n    map.setCenter([0,0])\n  })\n  return null  \n}*/\n\nfunction LeafletView(props) {\n\n  delete Leaflet.Icon.Default.prototype._getIconUrl;\n  Leaflet.Icon.Default.mergeOptions({\n    iconRetinaUrl: iconRetina,\n    iconUrl: icon,\n    shadowUrl: iconShadow\n  });\n\n  useEffect(() => {\n  }, [props.center])\n\n  return (\n    <MapContainer style={{ height: '400px' }} center={props.center} zoom={props.zoom} scrollWheelZoom={false}>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n      <Marker position={props.center}>\n        <Popup>\n          A pretty CSS3 popup. <br /> Easily customizable.\n        </Popup>\n      </Marker>\n    </MapContainer>\n  )\n}\n\nexport default LeafletView;\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":16,"nodeType":"66","messageId":"67","endLine":6,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":11,"column":6,"nodeType":"70","endLine":11,"endColumn":8,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":14,"column":6,"nodeType":"70","endLine":14,"endColumn":8,"suggestions":"73"},{"ruleId":"64","severity":1,"message":"74","line":1,"column":28,"nodeType":"66","messageId":"67","endLine":1,"endColumn":34},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'setZoom' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'center'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has missing dependencies: 'x' and 'y'. Either include them or remove the dependency array.",["78"],"'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [center]",{"range":"83","text":"84"},"Update the dependencies array to be: [x, y]",{"range":"85","text":"86"},[380,382],"[center]",[520,522],"[x, y]"]